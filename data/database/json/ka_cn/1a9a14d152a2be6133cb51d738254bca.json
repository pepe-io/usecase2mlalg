{"title": "Spell Checker using Word2vec", "description": "I have been struggling for a while on how to spell check questions while only using allowed data/software.  Here is the solution I am using now. It is an adaptation of Peter Norvig's spell checker.  It uses word2vec ordering of words to approximate word probabilities.  Indeed, Google word2vec apparently orders words in decreasing order of frequency in the training corpus. This kernel requires to download Google's word2vec: https://github.com/mmihaltz/word2vec-GoogleNews-vectors .  I have put it in my ../data directory. I don't think that  the notebooks can run on Kaggle kernels but I share it anyway as many have already downloaded the word2vec embedding.", "link": "https://www.kaggle.com/cpmpml/spell-checker-using-word2vec", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["gensim"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2017-05-12 08:46:23", "date_scraped": "2020-12-13 16:22:58", "words": 106, "sentences": 8, "runtime": 0.001, "description_category": "Justice, Law and Regulations", "description_category_score": 0.22910210490226746, "description_category_runtime": 11.305, "description_subcategory": "Quality", "description_subcategory_score": 0.4413875639438629, "description_subcategory_runtime": 17.22, "category": "Justice, Law and Regulations", "category_score": 0.22910210490226746, "subcategory": "Quality", "subcategory_score": 0.4413875639438629, "runtime_cat": 28.527, "programming_language": "Jupyter Notebook", "ml_score": "0.7", "engagement_score": "0.794", "language_code": "en", "language_score": "0.9999986097836893", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "struggling spell check question using allowed datasoftware solution using adaptation peter norvigs spell checker us word2vec ordering word approximate word probability indeed google word2vec apparently order word decreasing order frequency training corpus kernel requires download google word2vec httpsgithubcommmihaltzword2vecgooglenewsvectors put data directory dont think notebook run kaggle kernel share anyway many already downloaded word2vec embedding", "tags_descriptive": []}