{"title": "TensorFlow Starter Kit (Fixed!)", "description": "Was inspired by the Udacity Deep Learning Course.  Fairly new to Tensorflow so wanted to repurpose the NotMNIST-ConvNet from the course for this Cats & Dogs competition.  This ConvNet gets >72% accuracy after only using a small fraction of the training data and very few epochs.  To prevent overfitting you should probably add (a) hinton dropout (b) perform data augmentation.  To provide better accuracy you can (a) train using all data  (b) increase # of epochs/training time  (c) build out full VGG-16 like architecture.", "link": "https://www.kaggle.com/kbhits/tensorflow-starter-kit-fixed", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["tensorflow"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2017-02-12 21:32:59", "date_scraped": "2020-12-12 18:58:25", "words": 90, "sentences": 5, "runtime": 0.0, "description_category": "Utilities", "description_category_score": 0.0010402598418295383, "description_category_runtime": 9.678, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.8296736478805542, "description_subcategory_runtime": 14.922, "category": "Utilities", "category_score": 0.0010402598418295383, "subcategory": "Machine Learning", "subcategory_score": 0.8296736478805542, "runtime_cat": 24.601, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.762", "language_code": "en", "language_score": "0.9999963262853573", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "inspired udacity deep learning course fairly new tensorflow wanted repurpose notmnistconvnet course cat dog competition convnet get 72 accuracy using small fraction training data epoch prevent overfitting probably add hinton dropout b perform data augmentation provide better accuracy train using data b increase epochstraining time c build full vgg16 like architecture", "tags_descriptive": []}