{"title": "Mixing CNN+Regularization :D", "description": "Examen Parcial:Para ejecutar el c\u00f3digo: crear un kernel en la competencia de kaggle (https://www.kaggle.com/c/facial-keypoints-detection) y partir de este notebook. Una vez terminado, se debe descargar el notebook final y subirlo en paideia. Descripcion de la tareaEl objetivo de esta tarea es predecir las posiciones de los puntos clave en im\u00e1genes de rostros. Las im\u00e1genes de entrada son de 96x96 p\u00edxeles y en escala de grises (descritas con n\u00fameros enteros entre 0 y 255). Cada punto clave se especifica mediante un par de valores reales (x, y) en el espacio de los \u00edndices de p\u00edxeles. Hay 15 puntos clave, que representan los siguientes elementos de la cara: left_eye_center, right_eye_center, left_eye_inner_corner, left_eye_outer_corner, right_eye_inner_corner, right_eye_outer_corner, left_eyebrow_inner_end, left_eyebrow_outer_end, right_eyebrow_inner_end, right_eyebrow_outer_end, nose_tip, mouth_left_corner, mouth_right_corner, mouth_center_top_lip, mouth_center_bottom_lip   De modo que se debe entrenar una red neuronal que tome como input la imagen en escala de grises y de como output 30 n\u00fameros (las coordenadas x,y de los 15 puntos claves). Al compilar el modelo, especificar como funci\u00f3n de p\u00e9rdida el mean squared error (mse) y como m\u00e9trica el mean absolute error (mae). Por ejemplo: model.compile(Adam(lr), loss='mse', metrics=['mae'])  Calificaci\u00f3n Normalizar las im\u00e1genes (1 pt) Definir correctamente la red neuronal (4 pts) Entrenar la red neuronal (2 pts) mae entre 10 y 15 (3 pts) mae entre 8 y 11 (5 pts) mae entre 5 y 8 (7 pts) mae menor o igual a 4.0 (9 pts)   Mostrar 5 resultados aleatorios del set de validaci\u00f3n (1 pt) Mostrar las 5 mejores predicciones del set de validaci\u00f3n (1 pt) Mostrar las 5 peores predicciones del set de validaci\u00f3n (1 pt)  RecomendacionesActivar el uso de GPU en el kernel de kaggle. Dentro del kernel de kaggle, los botones para bajar y subir kernels, se encuentran en la parte superior de la pagina, a la izquierda del boton commit.", "link": "https://www.kaggle.com/datawanderer/mixing-cnn-regularization-d", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "keras"], "host": "kaggle.com", "license": "Apache-2.0", "language": "spanish", "date_project": "2018-10-17 06:31:10", "date_scraped": "2020-12-12 19:34:30", "words": 304, "sentences": 9, "sum_nltk": "Descripcion de la tareaEl objetivo de esta tarea es predecir las posiciones de los puntos clave en im\u00e1genes de rostros.\nLas im\u00e1genes de entrada son de 96x96 p\u00edxeles y en escala de grises (descritas con n\u00fameros enteros entre 0 y 255).\nCada punto clave se especifica mediante un par de valores reales (x, y) en el espacio de los \u00edndices de p\u00edxeles.\nHay 15 puntos clave, que representan los siguientes elementos de la cara: left_eye_center, right_eye_center, left_eye_inner_corner, left_eye_outer_corner, right_eye_inner_corner, right_eye_outer_corner, left_eyebrow_inner_end, left_eyebrow_outer_end, right_eyebrow_inner_end, right_eyebrow_outer_end, nose_tip, mouth_left_corner, mouth_right_corner, mouth_center_top_lip, mouth_center_bottom_lip   De modo que se debe entrenar una red neuronal que tome como input la imagen en escala de grises y de como output 30 n\u00fameros (las coordenadas x,y de los 15 puntos claves).\nPor ejemplo: model.compile(Adam(lr), loss='mse', metrics=['mae'])  Calificaci\u00f3n Normalizar las im\u00e1genes (1 pt) Definir correctamente la red neuronal (4 pts) Entrenar la red neuronal (2 pts) mae entre 10 y 15 (3 pts) mae entre 8 y 11 (5 pts) mae entre 5 y 8 (7 pts) mae menor o igual a 4.0 (9 pts)   Mostrar 5 resultados aleatorios del set de validaci\u00f3n (1 pt) Mostrar las 5 mejores predicciones del set de validaci\u00f3n (1 pt) Mostrar las 5 peores predicciones del set de validaci\u00f3n (1 pt)  RecomendacionesActivar el uso de GPU en el kernel de kaggle.", "sum_nltk_words": 219, "sum_nltk_runtime": 0.004, "sum_t5": "kaggle cc: c/facial-keypoints-detection. kaggle cc: c/facial-keypoints-detection. kaggle cc: c/facial-keypoints-detection. kaggle cc: c/facial-keypoints-detection.", "sum_t5_words": 12, "sum_t5_runtime": 6.232, "runtime": 0.003, "nltk_category": "Media & Publishing", "nltk_category_score": 0.23467318713665009, "nltk_category_runtime": 37.439, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.8245382905006409, "nltk_subcategory_runtime": 61.757, "category": "Media & Publishing", "category_score": 0.23467318713665009, "subcategory": "Machine Learning", "subcategory_score": 0.8245382905006409, "runtime_cat": 99.196, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.661", "language_code": "es", "language_score": "0.9999954651614014", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "examen parcialpara ejecutar el codigo crear un kernel en la competencia de kaggle httpswwwkagglecomcfacialkeypointsdetection partir de este notebook una vez terminado se debe descargar el notebook final subirlo en paideia descripcion de la tareael objetivo de esta tarea e predecir la posiciones de los puntos clave en imagenes de rostros la imagenes de entrada son de 96x96 pixeles en escala de gris descritas con numeros enteros entre 0 255 cada punto clave se especifica mediante un par de valores real x en el espacio de los index de pixeles hay 15 puntos clave que representan los siguientes elementos de la cara left_eye_center right_eye_center left_eye_inner_corner left_eye_outer_corner right_eye_inner_corner right_eye_outer_corner left_eyebrow_inner_end left_eyebrow_outer_end right_eyebrow_inner_end right_eyebrow_outer_end nose_tip mouth_left_corner mouth_right_corner mouth_center_top_lip mouth_center_bottom_lip de modo que se debe entrenar una red neuronal que tome como input la imagen en escala de gris de como output 30 numeros la coordenadas xy de los 15 puntos claves al compilar el modelo especificar como funcion de perdida el mean squared error mse como metrica el mean absolute error mae por ejemplo modelcompileadamlr lossmse metricsmae calificacion normalizar la imagenes 1 pt definir correctamente la red neuronal 4 pt entrenar la red neuronal 2 pt mae entre 10 15 3 pt mae entre 8 11 5 pt mae entre 5 8 7 pt mae menor igual 40 9 pt mostrar 5 resultados aleatorios del set de validacion 1 pt mostrar la 5 mejores predicciones del set de validacion 1 pt mostrar la 5 peores predicciones del set de validacion 1 pt recomendacionesactivar el uso de gpu en el kernel de kaggle dentro del kernel de kaggle los botones para bajar subir kernel se encuentran en la parte superior de la pagina la izquierda del boton commit", "tags_descriptive": []}