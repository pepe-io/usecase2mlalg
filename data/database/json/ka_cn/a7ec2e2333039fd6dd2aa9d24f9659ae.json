{"title": "TrackML EDA, etc.", "description": "TrackML Particle Tracking ChallengeA dataset consisting of a simulation of a typical full Silicon LHC detector will be made available, listing for each event the measured 3D points (x, y , z) coordinates, an event being the recording of the collision of two bunches of protons. The ground truth is provided as separate file, indicating which hits correspond to the same particle. For each collision, about 10.000 space tracks (helicoidal trajectories originating approximately from the center of the detector), will leave about 10 precise 3D points. The core pattern recognition tracking task is to associate the 100.000 3D points into tracks. Current studies show that traditional algorithms suffer from a combinatorial explosion of the CPU time. There is a strong potential for application of Machine Learning techniques to this tracking issue. The problem can be related to representation learning, to combinatorial optimization, to clustering (associate together the hits which were deposited by the same particle), and even to time series prediction. An essential question is to efficiently exploit the a priori knowledge about geometrical constraints (structural priors) [1]. Specifically, in this competition, you\u2019re challenged to build an algorithm that quickly reconstructs particle tracks from 3D points left in the silicon detectors [2].  [1] https://sites.google.com/site/trackmlparticle/dataset [2] https://www.kaggle.com/c/trackml-particle-identification To slake some visualization hunger, here's a plot of a few particle trajectories. We're trying to find these from only a few points left behind.", "link": "https://www.kaggle.com/jbonatt/trackml-eda-etc", "tags": ["Physics", "Exploratory Data Analysis"], "kind": ["Project", "(Notebook)"], "ml_libs": ["pattern"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2018-05-03 22:55:22", "date_scraped": "2020-12-13 17:43:27", "words": 232, "sentences": 11, "sum_nltk": "TrackML Particle Tracking ChallengeA dataset consisting of a simulation of a typical full Silicon LHC detector will be made available, listing for each event the measured 3D points (x, y , z) coordinates, an event being the recording of the collision of two bunches of protons.\nThe ground truth is provided as separate file, indicating which hits correspond to the same particle.\nFor each collision, about 10.000 space tracks (helicoidal trajectories originating approximately from the center of the detector), will leave about 10 precise 3D points.\nCurrent studies show that traditional algorithms suffer from a combinatorial explosion of the CPU time.\nThere is a strong potential for application of Machine Learning techniques to this tracking issue.\nThe problem can be related to representation learning, to combinatorial optimization, to clustering (associate together the hits which were deposited by the same particle), and even to time series prediction.\nSpecifically, in this competition, you\u2019re challenged to build an algorithm that quickly reconstructs particle tracks from 3D points left in the silicon detectors [2].\n[1] https://sites.google.com/site/trackmlparticle/dataset [2] https://www.kaggle.com/c/trackml-particle-identification To slake some visualization hunger, here's a plot of a few particle trajectories.\nWe're trying to find these from only a few points left behind.", "sum_nltk_words": 191, "sum_nltk_runtime": 0.003, "sum_t5": "trackML Particle Tracking ChallengeA dataset consisting of a simulation of a typical full silicon LHC detector will be made available. for each collision, about 10.000 space tracks (helicoidal trajectories originating approximately from the center of the detector), will leave about 10 precise 3D points. the core pattern recognition tracking task is to associate the 100.000 3D points into tracks. currently studies show that traditional algorithms suffer from a combinatorial explosion of the CPU time.", "sum_t5_words": 74, "sum_t5_runtime": 6.082, "runtime": 0.0, "nltk_category": "Physics", "nltk_category_score": 0.532586932182312, "nltk_category_runtime": 20.69, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.9434399008750916, "nltk_subcategory_runtime": 33.275, "category": "Physics", "category_score": 0.532586932182312, "subcategory": "Machine Learning", "subcategory_score": 0.9434399008750916, "runtime_cat": 53.966, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.74", "language_code": "en", "language_score": "0.9999973490990206", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "trackml particle tracking challengea dataset consisting simulation typical full silicon lhc detector made available listing event measured 3d point x z coordinate event recording collision two bunch proton ground truth provided separate file indicating hit correspond particle collision 10000 space track helicoidal trajectory originating approximately center detector leave 10 precise 3d point core pattern recognition tracking task associate 100000 3d point track current study show traditional algorithm suffer combinatorial explosion cpu time strong potential application machine learning technique tracking issue problem related representation learning combinatorial optimization clustering associate together hit deposited particle even time series prediction essential question efficiently exploit priori knowledge geometrical constraint structural prior 1 specifically competition youre challenged build algorithm quickly reconstructs particle track 3d point left silicon detector 2 1 httpssitesgooglecomsitetrackmlparticledataset 2 httpswwwkagglecomctrackmlparticleidentification slake visualization hunger here plot particle trajectory trying find point left behind", "tags_descriptive": ["Physics", "Exploratory Data Analysis"]}