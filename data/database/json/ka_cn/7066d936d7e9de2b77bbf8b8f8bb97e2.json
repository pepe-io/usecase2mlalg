{"title": "Deep learning in TF with upsampling [LB: .758]", "description": "DNN classifier in TensorflowThis kernel will build a DNN classifier for the Home Credit Default Risk competition. The challenge here (as always!) is to try and match the performance of the LightGBM/XGBoost classifiers which always seems tricky for NNs for this kind of problem. A lot of the feature engineering going into the model is from my previous kernel here, so I will focus more on the NN graph development here. Contents Load and process data Check nulls Identify categoricals Scaling   Building the graph Training the NN Analysis and submission", "link": "https://www.kaggle.com/shep312/deep-learning-in-tf-with-upsampling-lb-758", "tags": ["DL", "Classification", "Feature Engineering"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "tensorflow"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2018-06-10 15:56:11", "date_scraped": "2020-12-12 20:47:32", "words": 92, "sentences": 4, "runtime": 0.001, "description_category": "Finance", "description_category_score": 0.00109939556568861, "description_category_runtime": 9.102, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9917290210723877, "description_subcategory_runtime": 13.999, "category": "Finance", "category_score": 0.00109939556568861, "subcategory": "Machine Learning", "subcategory_score": 0.9917290210723877, "runtime_cat": 23.101, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.761", "language_code": "en", "language_score": "0.9999976633627166", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "dnn classifier tensorflowthis kernel build dnn classifier home credit default risk competition challenge always try match performance lightgbmxgboost classifier always seems tricky nns kind problem lot feature engineering going model previous kernel focus nn graph development content load process data check null identify categoricals scaling building graph training nn analysis submission", "tags_descriptive": ["Deep Learning (DL)", "Classification", "Feature Engineering"]}