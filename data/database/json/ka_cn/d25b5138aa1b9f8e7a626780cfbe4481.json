{"title": "resnet_feature_extraction_pytorch", "description": "This notebook will show you how you can use Pytorch and a pretrained Resnet model to develop an algorithm that can help you compare 2 images. Underlying concept is to convert a high dimensional image to a manageable representative set of features using a pretrained DNN. In this case I have chosen resnet18 (not resnet34/50/101/152 - because of hardware limitations imposed by my laptop) At work I had the opportunity to evalutate multiple different models - VGG16, VGG19 and InceptionV3, with respect to a retail use case where given a set of apparel data from one retailer, I had to find exact matches in another. Resnet50 gave me the best accuracy - consistently for multiple retailers. And I found it to be resilient to changes in image background, illumination etc which was great. The idea here tries to exploit a vector space and plots each image in the high-dimensional vector space and use cosine distance to evaluate the distance between any 2 vectors.", "link": "https://www.kaggle.com/pankajgiri/resnet-feature-extraction-pytorch", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "pytorch"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-12-02 13:29:33", "date_scraped": "2020-12-13 12:48:00", "words": 163, "sentences": 6, "runtime": 0.002, "description_category": "Wholesale & Retail", "description_category_score": 0.45269477367401123, "description_category_runtime": 14.168, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9272370934486389, "description_subcategory_runtime": 22.728, "category": "Wholesale & Retail", "category_score": 0.45269477367401123, "subcategory": "Machine Learning", "subcategory_score": 0.9272370934486389, "runtime_cat": 36.896, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.625", "language_code": "en", "language_score": "0.9999961807992797", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "notebook show use pytorch pretrained resnet model develop algorithm help compare 2 image underlying concept convert high dimensional image manageable representative set feature using pretrained dnn case chosen resnet18 resnet3450101152 hardware limitation imposed laptop work opportunity evalutate multiple different model vgg16 vgg19 inceptionv3 respect retail use case given set apparel data one retailer find exact match another resnet50 gave best accuracy consistently multiple retailer found resilient change image background illumination etc great idea try exploit vector space plot image highdimensional vector space use cosine distance evaluate distance 2 vector", "tags_descriptive": []}