{"title": "In-Depth Guide to Convolutional Neural Networks", "description": "IntroductionIn this notebook we'll go over defining, training and testing as well as the pre-processing steps needed to feed an image into CNNs to get state of the art results. We'll be using PyTorch for this tutorial. PyTorch is a powerful deep learning framework which is rising in popularity, and it is thoroughly at home in Python which makes it really easy to learn and use. This tutorial won\u2019t assume much in regards to prior knowledge of PyTorch, but it might be helpful to checkout my previous introductory CV tutorial.  In this notebook, we'll train a CNN to classify images based on whether they have a columnar cactus or not. We'll use the Aerial Cactus Dataset from this currently running Kaggle competition. For more information about the dataset visit this page. I picked this competition because I felt it is the best place for beginners to practice their new found skills with CNNs as MNIST is just way too simple to bring CNNs into play, a regular Multi-layer perceptron may well do the job. So, this is a perfect beginners competition as someone rightly said in the discussion forums. If you like this kernel or wish to fork it please give it an UPVOTE to show your appreciation.", "link": "https://www.kaggle.com/abhinand05/in-depth-guide-to-convolutional-neural-networks", "tags": ["DL", "Exploratory Data Analysis", "CNN"], "kind": ["Project", "(Notebook)"], "ml_libs": ["pattern"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-06-16 19:46:53", "date_scraped": "2020-12-12 16:10:46", "words": 209, "sentences": 10, "sum_nltk": "IntroductionIn this notebook we'll go over defining, training and testing as well as the pre-processing steps needed to feed an image into CNNs to get state of the art results.\nWe'll be using PyTorch for this tutorial.\nPyTorch is a powerful deep learning framework which is rising in popularity, and it is thoroughly at home in Python which makes it really easy to learn and use.\nThis tutorial won\u2019t assume much in regards to prior knowledge of PyTorch, but it might be helpful to checkout my previous introductory CV tutorial.\nIn this notebook, we'll train a CNN to classify images based on whether they have a columnar cactus or not.\nWe'll use the Aerial Cactus Dataset from this currently running Kaggle competition.\nFor more information about the dataset visit this page.\nI picked this competition because I felt it is the best place for beginners to practice their new found skills with CNNs as MNIST is just way too simple to bring CNNs into play, a regular Multi-layer perceptron may well do the job.\nSo, this is a perfect beginners competition as someone rightly said in the discussion forums.\nIf you like this kernel or wish to fork it please give it an UPVOTE to show your appreciation.", "sum_nltk_words": 199, "sum_nltk_runtime": 0.002, "sum_t5": "this notebook will cover defining, training and testing as well as the pre-processing steps needed to feed an image into CNNs. we'll be using PyTorch for this tutorial. if you like this kernel or wish to fork it please give it an UPVOTE to show your appreciation. if you like this kernel or wish to fork it please give it an UPVOTE to show your appreciation. if you like this kernel or wish to fork it please give it an UP", "sum_t5_words": 81, "sum_t5_runtime": 5.166, "runtime": 0.005, "nltk_category": "Education & Research", "nltk_category_score": 0.27956676483154297, "nltk_category_runtime": 17.796, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.9300531148910522, "nltk_subcategory_runtime": 29.065, "category": "Education & Research", "category_score": 0.27956676483154297, "subcategory": "Machine Learning", "subcategory_score": 0.9300531148910522, "runtime_cat": 46.862, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.717", "language_code": "en", "language_score": "0.9999979741663011", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "introductionin notebook well go defining training testing well preprocessing step needed feed image cnns get state art result well using pytorch tutorial pytorch powerful deep learning framework rising popularity thoroughly home python make really easy learn use tutorial wont assume much regard prior knowledge pytorch might helpful checkout previous introductory cv tutorial notebook well train cnn classify image based whether columnar cactus well use aerial cactus dataset currently running kaggle competition information dataset visit page picked competition felt best place beginner practice new found skill cnns mnist way simple bring cnns play regular multilayer perceptron may well job perfect beginner competition someone rightly said discussion forum like kernel wish fork please give upvote show appreciation", "tags_descriptive": ["Deep Learning (DL)", "Exploratory Data Analysis", "Convolutional Neural Network (CNN)"]}