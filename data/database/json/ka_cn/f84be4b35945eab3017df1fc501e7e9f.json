{"title": "Keras Neural Net for CHAMPS", "description": "w# Keras Multiple Output Solution Thanks to https://www.pyimagesearch.com/2018/06/04/keras-multiple-outputs-and-multiple-losses/ and https://www.kaggle.com/kmat2019/neural-network-modeling-with-multiple-outputs for the idea on approaching this problem as a multiple output problem.  Though it doesn't seem to be the favored approach for this competition, I feel that there ought to be a good neural network approach.  This kernel tries a multi-layer, dense neural network implemented in Keras.  The advantage of this approach is that it does not seem to be overfitting, which may pay off against the full dataset. Ways to improve:  I'm not a domain expert in the molecular chem field... I strongly suspect that stronger feature engineering would cause this approach to score higher.   Network architecture:  I'm putting a simpler variant forward here with some options commented out.  There are tweaks that could be made to this architecture that will improve the score.  Forcing the model to overfit to gain a better score on the leaderboard does not usually pay off in the end... More epochs.  The more epochs that can be run without overfitting, the better score could be achieved.  My observation is that even after long training epochs, the model seems to still be learning.", "link": "https://www.kaggle.com/todnewman/keras-neural-net-for-champs", "tags": ["DL"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "keras", "tensorflow"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-07-08 01:01:23", "date_scraped": "2020-12-12 17:53:35", "words": 200, "sentences": 12, "runtime": 0.0, "description_category": "Biotechnological & Life Sciences", "description_category_score": 0.22715036571025848, "description_category_runtime": 20.07, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9487512707710266, "description_subcategory_runtime": 31.675, "category": "Biotechnological & Life Sciences", "category_score": 0.22715036571025848, "subcategory": "Machine Learning", "subcategory_score": 0.9487512707710266, "runtime_cat": 51.745, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.77", "language_code": "en", "language_score": "0.9999972661024271", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "w kera multiple output solution thanks httpswwwpyimagesearchcom20180604kerasmultipleoutputsandmultiplelosses httpswwwkagglecomkmat2019neuralnetworkmodelingwithmultipleoutputs idea approaching problem multiple output problem though doesnt seem favored approach competition feel ought good neural network approach kernel try multilayer dense neural network implemented kera advantage approach seem overfitting may pay full dataset way improve im domain expert molecular chem field strongly suspect stronger feature engineering would cause approach score higher network architecture im putting simpler variant forward option commented tweak could made architecture improve score forcing model overfit gain better score leaderboard usually pay end epoch epoch run without overfitting better score could achieved observation even long training epoch model seems still learning", "tags_descriptive": ["Deep Learning (DL)"]}