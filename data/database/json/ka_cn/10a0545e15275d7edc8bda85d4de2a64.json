{"title": "Close Ends Chunks Optimization aka 2-opt", "description": "I'm going to share simple but working tsp solutions optimization technique. The idea is straightforward: if you have two cities in the path that are 'close' (in distance terms) to each other you can try to reverse the order of the path between them hoping that the decrease of the total penalty in this part of the path will be greater than the increase of the length caused by the reversing itself. Also instead of just reversing the chunk of the path you can try to play with its ends. This is exactly what is called chunk_abc/chunk_acb/chunk_abcb in the code below.", "link": "https://www.kaggle.com/kostyaatarik/close-ends-chunks-optimization-aka-2-opt", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-01-13 19:08:11", "date_scraped": "2020-12-13 17:50:09", "words": 101, "sentences": 4, "runtime": 0.002, "description_category": "Utilities", "description_category_score": 0.27167096734046936, "description_category_runtime": 9.447, "description_subcategory": "Quality", "description_subcategory_score": 0.3542073965072632, "description_subcategory_runtime": 14.227, "category": "Utilities", "category_score": 0.27167096734046936, "subcategory": "Quality", "subcategory_score": 0.3542073965072632, "runtime_cat": 23.675, "programming_language": "Jupyter Notebook", "ml_score": "0.5", "engagement_score": "0.708", "language_code": "en", "language_score": "0.9999977931896367", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "im going share simple working tsp solution optimization technique idea straightforward two city path close distance term try reverse order path hoping decrease total penalty part path greater increase length caused reversing also instead reversing chunk path try play end exactly called chunk_abcchunk_acbchunk_abcb code", "tags_descriptive": []}