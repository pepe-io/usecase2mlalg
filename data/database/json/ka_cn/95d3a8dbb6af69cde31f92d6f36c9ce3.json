{"title": "Google OR-Tools w/Clusters ", "description": "This solution uses Google OR-Tools to optimize the routing for Santa. OR-Tools include a \"vehicle routing library\" for solving TSPs and a convenient Python interface. Lucky for us, it's all included in Kaggle kernels! The start point for the route comes from model-based clustering. You can see from the city plot how the density of points varies quite a bit across the grid. The right clustering approach may work better than starting with a grid or k-means clustering. Also, breaking the cities into clusters can scale to millions of points on a typical machine if the need arises. Here is the overall approach:  Divide cities into clusters Get centers for each cluster Find an optimal path across centers Find start and stop points for each cluster Find an optimal segment for each cluster and assemble", "link": "https://www.kaggle.com/jpmiller/google-or-tools-w-clusters", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2018-12-11 07:06:07", "date_scraped": "2020-12-13 17:50:09", "words": 136, "sentences": 7, "runtime": 0.002, "description_category": "Wholesale & Retail", "description_category_score": 0.059203263372182846, "description_category_runtime": 11.985, "description_subcategory": "Tools", "description_subcategory_score": 0.9258754253387451, "description_subcategory_runtime": 18.408, "category": "Wholesale & Retail", "category_score": 0.059203263372182846, "subcategory": "Tools", "subcategory_score": 0.9258754253387451, "runtime_cat": 30.393, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.747", "language_code": "en", "language_score": "0.9999972091966836", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "solution us google ortools optimize routing santa ortools include vehicle routing library solving tsps convenient python interface lucky u included kaggle kernel start point route come modelbased clustering see city plot density point varies quite bit across grid right clustering approach may work better starting grid kmeans clustering also breaking city cluster scale million point typical machine need arises overall approach divide city cluster get center cluster find optimal path across center find start stop point cluster find optimal segment cluster assemble", "tags_descriptive": []}