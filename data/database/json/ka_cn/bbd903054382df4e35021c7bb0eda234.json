{"title": "Clean Removal of Data Drift", "description": "This notebook shows how to remove the drift from the training and test data as cleanly as possible. A clean signal is extremely important, since predictions from any ML models depend strongly on the precise value of each data point. The drift is removed by computing the histograms of small signal batches and matching them to an ideal (non-shifted) histogram. The resulting shifts are already much better than those from e.g. a rolling mean. The shifts are then further smoothed by approximating them with 4th degree polynomials.  The resulting clean signal retains the original offset. For the pupose of this competition, the \"signal groups\" (see below) are determined by hand. This could also be done in an automated way (e.g. through analysis of the histograms) in the case of real-world data.", "link": "https://www.kaggle.com/friedchips/clean-removal-of-data-drift", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": [], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2020-03-13 17:17:20", "date_scraped": "2020-12-13 13:17:30", "words": 132, "sentences": 10, "runtime": 0.005, "description_category": "Biotechnological & Life Sciences", "description_category_score": 0.10367249697446823, "description_category_runtime": 12.332, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.919208824634552, "description_subcategory_runtime": 18.971, "category": "Biotechnological & Life Sciences", "category_score": 0.10367249697446823, "subcategory": "Machine Learning", "subcategory_score": 0.919208824634552, "runtime_cat": 31.303, "programming_language": "Jupyter Notebook", "ml_score": "0.5", "engagement_score": "0.741", "language_code": "en", "language_score": "0.9999966406268052", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "notebook show remove drift training test data cleanly possible clean signal extremely important since prediction ml model depend strongly precise value data point drift removed computing histogram small signal batch matching ideal nonshifted histogram resulting shift already much better eg rolling mean shift smoothed approximating 4th degree polynomial resulting clean signal retains original offset pupose competition signal group see determined hand could also done automated way eg analysis histogram case realworld data", "tags_descriptive": []}