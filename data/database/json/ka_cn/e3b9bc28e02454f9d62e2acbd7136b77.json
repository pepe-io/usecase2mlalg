{"title": "A Method for Finding Leaked Images in Test Set", "description": "Finding Leaked ImagesThis kernel aims to find images \"leaked\" from the train set into test set (because sometimes md5sum isn't enough!). We will use RGB histogram as feature vectors then compute L2 distance between test vectors and train vectors to see if we get a match. Note: An even better approach is to use an ImageNet trained CNN (VGG16, ResNet50, etc.) with FC layers removed to get bottleneck features rather than histogram. EDIT: Rather than leaked images I should say leaked \"patients\" as the images are not identical but from the same patient.", "link": "https://www.kaggle.com/kylehounslow/a-method-for-finding-leaked-images-in-test-set", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2017-06-17 01:53:37", "date_scraped": "2020-12-13 11:58:48", "words": 93, "sentences": 4, "runtime": 0.0, "description_category": "Healthcare", "description_category_score": 0.09577509760856628, "description_category_runtime": 9.258, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9314294457435608, "description_subcategory_runtime": 14.177, "category": "Healthcare", "category_score": 0.09577509760856628, "subcategory": "Machine Learning", "subcategory_score": 0.9314294457435608, "runtime_cat": 23.434, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.645", "language_code": "en", "language_score": "0.9999962496641781", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "finding leaked imagesthis kernel aim find image leaked train set test set sometimes md5sum isnt enough use rgb histogram feature vector compute l2 distance test vector train vector see get match note even better approach use imagenet trained cnn vgg16 resnet50 etc fc layer removed get bottleneck feature rather histogram edit rather leaked image say leaked patient image identical patient", "tags_descriptive": []}