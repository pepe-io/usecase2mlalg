{"title": "Detailed Cleaning/Visualization (Python)", "description": "Detailed Data Cleaning/VisualizationA blog post about the final end-to-end solution (21st place) is available here, and the source code is on my github This is a Python version of a kernel I wrote in R for this dataset found here. There are some slight differences between how missing values are treated in Python and R, so the two kernels are not exactly the same, but I have tried to make them as similar as possible. This was done as a convenience to anybody who wanted to use my cleaned data as a starting point but prefers Python to R. It also is educational to compare how the same task can be accomplished in either language. The goal of this competition is to predict which new Santander products, if any, a customer will purchase in the following month. Here, I will do some data cleaning, adjust some features, and do some visualization to get a sense of what features might be important predictors. I won't be building a predictive model in this kernel, but I hope this gives you some insight/ideas and gets you excited to build your own model. Let's get to it First GlanceLimit the number of rows read in to avoid memory crashes with the kernel", "link": "https://www.kaggle.com/apryor6/detailed-cleaning-visualization-python", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": [], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2016-12-22 06:45:00", "date_scraped": "2020-12-13 17:13:04", "words": 208, "sentences": 8, "sum_nltk": "Detailed Data Cleaning/VisualizationA blog post about the final end-to-end solution (21st place) is available here, and the source code is on my github This is a Python version of a kernel I wrote in R for this dataset found here.\nThere are some slight differences between how missing values are treated in Python and R, so the two kernels are not exactly the same, but I have tried to make them as similar as possible.\nThis was done as a convenience to anybody who wanted to use my cleaned data as a starting point but prefers Python to R.\nIt also is educational to compare how the same task can be accomplished in either language.\nThe goal of this competition is to predict which new Santander products, if any, a customer will purchase in the following month.\nHere, I will do some data cleaning, adjust some features, and do some visualization to get a sense of what features might be important predictors.\nI won't be building a predictive model in this kernel, but I hope this gives you some insight/ideas and gets you excited to build your own model.\nLet's get to it First GlanceLimit the number of rows read in to avoid memory crashes with the kernel", "sum_nltk_words": 201, "sum_nltk_runtime": 0.002, "sum_t5": "the goal of this competition is to predict which new Santander products a customer will purchase. here, i will do some data cleaning, adjust some features, and do some visualization. i will be building a predictive model in this kernel, but hope this gives you some insight/ideas. i'll be using a kernel that uses a san francisco-based kernel to clean up data. i'll be using a kernel that uses a san franci", "sum_t5_words": 72, "sum_t5_runtime": 5.12, "runtime": 0.0, "nltk_category": "Real Estate, Rental & Leasing", "nltk_category_score": 0.21887975931167603, "nltk_category_runtime": 17.335, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.30489903688430786, "nltk_subcategory_runtime": 27.897, "category": "Real Estate, Rental & Leasing", "category_score": 0.21887975931167603, "subcategory": "Machine Learning", "subcategory_score": 0.30489903688430786, "runtime_cat": 45.232, "programming_language": "Jupyter Notebook", "ml_score": "0.5", "engagement_score": "0.808", "language_code": "en", "language_score": "0.9999968171065508", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "detailed data cleaningvisualizationa blog post final endtoend solution 21st place available source code github python version kernel wrote r dataset found slight difference missing value treated python r two kernel exactly tried make similar possible done convenience anybody wanted use cleaned data starting point prefers python r also educational compare task accomplished either language goal competition predict new santander product customer purchase following month data cleaning adjust feature visualization get sense feature might important predictor wont building predictive model kernel hope give insightideas get excited build model let get first glancelimit number row read avoid memory crash kernel", "tags_descriptive": []}