{"title": "Use pretrained PyTorch models", "description": "Transfer learning in kernels with PyTorchFollowing the same strategy from Beluga's kernel Use pretrained Keras models, this kernel uses a dataset with PyTorch pretrained networks weights. Training in the CPU is quite slow, but it is still feasible to use a pre-trained network, replace the final layer and train just this last layer. Thanks Beluga for your great kernel. This one uses not only the concept but also a lot of the code.", "link": "https://www.kaggle.com/pvlima/use-pretrained-pytorch-models", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["pytorch"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2017-10-12 15:39:22", "date_scraped": "2020-12-12 18:55:48", "words": 73, "sentences": 4, "runtime": 0.0, "description_category": "Justice, Law and Regulations", "description_category_score": 0.15805083513259888, "description_category_runtime": 7.333, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.7682195901870728, "description_subcategory_runtime": 11.696, "category": "Justice, Law and Regulations", "category_score": 0.15805083513259888, "subcategory": "Machine Learning", "subcategory_score": 0.7682195901870728, "runtime_cat": 19.029, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.796", "language_code": "en", "language_score": "0.9999956770757911", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "transfer learning kernel pytorchfollowing strategy beluga kernel use pretrained kera model kernel us dataset pytorch pretrained network weight training cpu quite slow still feasible use pretrained network replace final layer train last layer thanks beluga great kernel one us concept also lot code", "tags_descriptive": []}