{"title": "1. Bulletin Structuring Engine - CoLA", "description": "Data Science For Good : CoLA A Complete Pipeline for Structuring, Analysis and Recommendation Improve Hiring Process and Decisions  The workforce at The City of Los Angeles serve as the backbone for a number of services.  As an organization, they are in a unique hiring situation. One-third of their workers are retiring very soon and they have opened a number of job roles. The organization wants to improve the job bulletins that will fill all the open positions. Most of this data is present in unstructured form and it needs to be converted into a structured format before it can be analysed and obtain actionable insights. The content, tone, and format of job bulletins can strongly influence the quality of the applicants. Also, within such a huge organization, it also becomes difficult to clearly identify which promotions are available. Key Objectives: Keeping these challenges in mind, an ideal solution for the City of Los Angeles has following key objectives: Develop an nlp framework to accurately structurize the job descriptions. Develop an analysis framework to identify the implict bias in the text and encourage diversity. Develop a system which can clearly identify the promotion pathways within the organization. My Submission: Following are parts of Kernels Submissions in order:  Part 1: Job Bulletin Structuring Engine - City of Los Angeles   Part 2: Encourage Diversity and Remove Unconsious Bias from Job Bulletins - A Deep Analysis  Part 3: Impact of Content, Tone, and Language : CTL Analysis for CoLA  Part 4: Increasing the Discoverability of Promotional Pathways (Explicit)  Part 5: Implicit Promotional Pathways Discoverability  In the first kernel, a complete job bulletin entity extraction and data structuring engine is developed. In the second kernel, a deep analysis of unconscious bias is performed and a framework is shared to validate and reproduce the results. In the third kernel, impact of content, tone, and language is measured. And finally, in the last two kernels, a methodology is shared to visualize the promotion pathways (both explict and implict) and identifying the possible promotions pathways for a role.  Part 1: Job Bulletins Structuring Engine  Other Parts: Part 1 | Part 2 | Part 3 | Part 4 | Part 5 Table of Contents1. Approach Overview 2. Complete Code Implementation  2.1 BulletinParser Class 2.2 Formatter Class 2.3 Extractor Class   3. Final Structured CSV 4. Code Documentation 5. Reusable Python Package 6. Key Highlights of the Approach  1. Approach OverviewIn this challenge, a corpus text files is shared in which every file is a job bulletin of a job role. The task is to parse the text files, extract different entities, pieces of information and produce a well-defined structured file. This task is a typical example of a text parsing problem in which the end goal is to simplify the text data into meaningful entities.I have developed a python based engine called Job Bulletin Structuring Engine which takes input as a corpus of text files and generates a structured file as the output. The overall architecture diagram is described below:    This architcuture has three main classes - A. Bulletin Parsing Class, B. Formatter Class, and the C. Extractor Class. The first class is the Bulletin Parsing Class is the core class which is used to extract different entities and different fields, It uses different techniques of text mining and information reterival to obtain the entities.  Layout based Pattern Identification    Keyword based Patterns Identification       Regular Expressions Matching      Using these techniques, I have developed systematic and hierarichial parsing rules tailored for specific entity and general entities. Entities here mean different fields/information to be extracted from text files. The process of developing these nlp / text mining based rules was very iterative. I randomly read and explored more than 50 text files and observed the key patterns in them. Develop the parsing rule, test it, validate it, identify failure cases and iterated again. The second class is the Formatter class in which results of different entities are passed as input, they are standardized, cleaned, formatted to desired format, and validated. The results are then stored in a csv file which is given as the output. Finally, The third class is the Extractor class which is used to execute the overall parsing and cleaning processes based on user inputs. Key features:  Reusable and Generic Functions: The engine consists of code snippets which are generic codes for many fileds.    Cleaning Functions : In many cases, extracted entities contain noise, hence many custom functions to clean the results are added.     Code and Documentation : The comprehensive documentation of both the codes and the text parsing rules is also shared.    Edge Case Handelling: Since this is a very unstructured problem, there were many edge cases in text parsing, I have incorporated as many as such cases possible to give best possible results.      2. Complete Code Implementation (DOCUMENTATION)The next section contains the entire well-documentated source code which follows pep8 guidelines and uses best coding practices. In the section 5, I have also shared a python package which can be used to produce the results with 2 lines of code. Package link: https://pypi.org/project/pycola/  2.1 BulletinParser ClassThe first component is BulletinParser Class whose role is to obtain entities and information using different text mining rules.", "link": "https://www.kaggle.com/shivamb/1-bulletin-structuring-engine-cola", "tags": ["NLP"], "kind": ["Project", "(Notebook)"], "ml_libs": ["pattern"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-06-21 10:50:34", "date_scraped": "2020-12-12 18:42:37", "words": 916, "sentences": 45, "sum_nltk": "My Submission: Following are parts of Kernels Submissions in order:  Part 1: Job Bulletin Structuring Engine - City of Los Angeles   Part 2: Encourage Diversity and Remove Unconsious Bias from Job Bulletins - A Deep Analysis  Part 3: Impact of Content, Tone, and Language : CTL Analysis for CoLA  Part 4: Increasing the Discoverability of Promotional Pathways (Explicit)  Part 5: Implicit Promotional Pathways Discoverability  In the first kernel, a complete job bulletin entity extraction and data structuring engine is developed.\nApproach OverviewIn this challenge, a corpus text files is shared in which every file is a job bulletin of a job role.\nThe task is to parse the text files, extract different entities, pieces of information and produce a well-defined structured file.\nThis task is a typical example of a text parsing problem in which the end goal is to simplify the text data into meaningful entities.I have developed a python based engine called Job Bulletin Structuring Engine which takes input as a corpus of text files and generates a structured file as the output.\nThe first class is the Bulletin Parsing Class is the core class which is used to extract different entities and different fields, It uses different techniques of text mining and information reterival to obtain the entities.", "sum_nltk_words": 214, "sum_nltk_runtime": 0.011, "sum_t5": "the City of Los Angeles is in a unique hiring situation. one-third of their workers are retiring very soon and they have opened a number of job roles. the city wants to improve the job bulletins that will fill all the open positions. the content, tone, and format of job bulletins can strongly influence the quality of the applicants. also, within such a huge organization, it becomes difficult to clearly identify which promotions are available. the city of los angeles is a leader in the field of", "sum_t5_words": 87, "sum_t5_runtime": 6.943, "runtime": 0.005, "nltk_category": "Construction & Engineering", "nltk_category_score": 0.3025852143764496, "nltk_category_runtime": 18.669, "nltk_subcategory": "Quality", "nltk_subcategory_score": 0.28565606474876404, "nltk_subcategory_runtime": 29.731, "category": "Construction & Engineering", "category_score": 0.3025852143764496, "subcategory": "Quality", "subcategory_score": 0.28565606474876404, "runtime_cat": 48.4, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.759", "language_code": "en", "language_score": "0.9999974864889402", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "data science good cola complete pipeline structuring analysis recommendation improve hiring process decision workforce city los angeles serve backbone number service organization unique hiring situation onethird worker retiring soon opened number job role organization want improve job bulletin fill open position data present unstructured form need converted structured format analysed obtain actionable insight content tone format job bulletin strongly influence quality applicant also within huge organization also becomes difficult clearly identify promotion available key objective keeping challenge mind ideal solution city los angeles following key objective develop nlp framework accurately structurize job description develop analysis framework identify implict bias text encourage diversity develop system clearly identify promotion pathway within organization submission following part kernel submission order part 1 job bulletin structuring engine city los angeles part 2 encourage diversity remove unconsious bias job bulletin deep analysis part 3 impact content tone language ctl analysis cola part 4 increasing discoverability promotional pathway explicit part 5 implicit promotional pathway discoverability first kernel complete job bulletin entity extraction data structuring engine developed second kernel deep analysis unconscious bias performed framework shared validate reproduce result third kernel impact content tone language measured finally last two kernel methodology shared visualize promotion pathway explict implict identifying possible promotion pathway role part 1 job bulletin structuring engine part part 1 part 2 part 3 part 4 part 5 table contents1 approach overview 2 complete code implementation 21 bulletinparser class 22 formatter class 23 extractor class 3 final structured csv 4 code documentation 5 reusable python package 6 key highlight approach 1 approach overviewin challenge corpus text file shared every file job bulletin job role task parse text file extract different entity piece information produce welldefined structured file task typical example text parsing problem end goal simplify text data meaningful entitiesi developed python based engine called job bulletin structuring engine take input corpus text file generates structured file output overall architecture diagram described architcuture three main class bulletin parsing class b formatter class c extractor class first class bulletin parsing class core class used extract different entity different field us different technique text mining information reterival obtain entity layout based pattern identification keyword based pattern identification regular expression matching using technique developed systematic hierarichial parsing rule tailored specific entity general entity entity mean different fieldsinformation extracted text file process developing nlp text mining based rule iterative randomly read explored 50 text file observed key pattern develop parsing rule test validate identify failure case iterated second class formatter class result different entity passed input standardized cleaned formatted desired format validated result stored csv file given output finally third class extractor class used execute overall parsing cleaning process based user input key feature reusable generic function engine consists code snippet generic code many fileds cleaning function many case extracted entity contain noise hence many custom function clean result added code documentation comprehensive documentation code text parsing rule also shared edge case handelling since unstructured problem many edge case text parsing incorporated many case possible give best possible result 2 complete code implementation documentationthe next section contains entire welldocumentated source code follows pep8 guideline us best coding practice section 5 also shared python package used produce result 2 line code package link httpspypiorgprojectpycola 21 bulletinparser classthe first component bulletinparser class whose role obtain entity information using different text mining rule", "tags_descriptive": ["Natural Language Processing (NLP)"]}