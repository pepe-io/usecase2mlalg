{"title": "300% Faster Average Normalized Happiness Function", "description": "SummaryThis is not a typical machine learning problem, but it's a very interesting optimization one. The possibility to evaluate fast the solutions it's going to be very important. The following implementation of the Average Normalized Happiness function was originally provided by organizers here but with small changes it can run in almost 70% less time update: I have added a more extended analysis of the time execution comparison and changed the name of the kernel. The original one was confusing: \"70% Faster Average Normalized Happiness Function\". The optimized script takes 70% less time to execute than the original one, but that means it is about 300% faster.", "link": "https://www.kaggle.com/lbronchal/300-faster-average-normalized-happiness-function", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": [], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2017-12-14 10:26:12", "date_scraped": "2020-12-13 16:57:44", "words": 107, "sentences": 5, "runtime": 0.001, "description_category": "Utilities", "description_category_score": 0.115001380443573, "description_category_runtime": 9.344, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.7091709971427917, "description_subcategory_runtime": 14.394, "category": "Utilities", "category_score": 0.115001380443573, "subcategory": "Machine Learning", "subcategory_score": 0.7091709971427917, "runtime_cat": 23.738, "programming_language": "Jupyter Notebook", "ml_score": "0.5", "engagement_score": "0.68", "language_code": "en", "language_score": "0.9999964170579225", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "summarythis typical machine learning problem interesting optimization one possibility evaluate fast solution going important following implementation average normalized happiness function originally provided organizer small change run almost 70 le time update added extended analysis time execution comparison changed name kernel original one confusing 70 faster average normalized happiness function optimized script take 70 le time execute original one mean 300 faster", "tags_descriptive": []}