{"title": "Two branches Xception LB ~ 0.3", "description": "IntroductionLet's try to understand how to use channels in learning. First variant is combine them all together like here In our case we will use two branch of network - first one is about data and second one is about \"The protein of interest\". We will get 2 images from 4 sources:  Yellow, blue and red channel - we create RGB image (yellow channel will be in fact green color now); Source green channel will be grayscale image but with 3 equal channel (condition for using Imagenet weights)  Let's start from imports and data loading:", "link": "https://www.kaggle.com/kwentar/two-branches-xception-lb-0-3", "tags": ["Classification"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "keras", "tensorflow", "skimage"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2018-10-13 20:28:02", "date_scraped": "2020-12-12 21:26:51", "words": 97, "sentences": 3, "runtime": 0.001, "description_category": "Biotechnological & Life Sciences", "description_category_score": 0.3061222434043884, "description_category_runtime": 8.766, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.3493139445781708, "description_subcategory_runtime": 13.359, "category": "Biotechnological & Life Sciences", "category_score": 0.3061222434043884, "subcategory": "Machine Learning", "subcategory_score": 0.3493139445781708, "runtime_cat": 22.125, "programming_language": "Jupyter Notebook", "ml_score": "0.7", "engagement_score": "0.719", "language_code": "en", "language_score": "0.9999981381387881", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "introductionlets try understand use channel learning first variant combine together like case use two branch network first one data second one protein interest get 2 image 4 source yellow blue red channel create rgb image yellow channel fact green color source green channel grayscale image 3 equal channel condition using imagenet weight let start import data loading", "tags_descriptive": ["Classification"]}