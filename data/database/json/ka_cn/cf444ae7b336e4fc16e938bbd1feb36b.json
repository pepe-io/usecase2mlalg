{"title": "Dog Memorizer GAN", "description": "Dog Memorizer GANDISCLAIMER: This may not be a valid comp solutionIn this kernel we attempt to create a new kind of semi-supervised GAN. (Typical GAN design is presented in Nanashi's great tutorial here). Instead of having the Generator and Discriminator learn at the same time, we will first train the Discriminator to memorize all the training images. Next the Discriminator will teach the images to the Generator. We give the Generator poor memory (with a bottleneck) in hopes that it will learn to generalize. For our Kaggle submission, we will ask this Generator to output a mixture of (the generalized) images it has learned. Since the images are stored in a conv net, we hope to get a generalized conceptual mixture (versus a pixel blend). (This kernel is inspired by the tutorial here and by my previous kernels here and here).  A GAN consists of a Generator and Discriminator. After being trained, a Generator is a robot artist that draws dog images. During training the Discriminator teaches the Generator how to draw a dog. (And typically the G teaches the D to disguish real from fake dogs). The Generator never sees any images of dogs. Instead it continually attempts to draw a dog and is coached by the Discriminator. In this kernel, the Memorizer Generator is coached to memorize images from the training set. (We hope generalization arises from poor memory). In contrast, a Generalizing Generator is coached to generalize images! Load and Crop Images", "link": "https://www.kaggle.com/cdeotte/dog-memorizer-gan", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["keras", "tensorflow"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-07-06 16:06:07", "date_scraped": "2020-12-12 20:11:09", "words": 246, "sentences": 17, "sum_nltk": "Dog Memorizer GANDISCLAIMER: This may not be a valid comp solutionIn this kernel we attempt to create a new kind of semi-supervised GAN.\n(Typical GAN design is presented in Nanashi's great tutorial here).\nInstead of having the Generator and Discriminator learn at the same time, we will first train the Discriminator to memorize all the training images.\nNext the Discriminator will teach the images to the Generator.\nWe give the Generator poor memory (with a bottleneck) in hopes that it will learn to generalize.\nFor our Kaggle submission, we will ask this Generator to output a mixture of (the generalized) images it has learned.\nSince the images are stored in a conv net, we hope to get a generalized conceptual mixture (versus a pixel blend).\nA GAN consists of a Generator and Discriminator.\nAfter being trained, a Generator is a robot artist that draws dog images.\nDuring training the Discriminator teaches the Generator how to draw a dog.\n(And typically the G teaches the D to disguish real from fake dogs).\nInstead it continually attempts to draw a dog and is coached by the Discriminator.\nIn this kernel, the Memorizer Generator is coached to memorize images from the training set.\n(We hope generalization arises from poor memory).", "sum_nltk_words": 194, "sum_nltk_runtime": 0.003, "sum_t5": "a kernel is designed to create a semi-supervised dog-drawing system. instead of having the Generator and Discriminator learn at the same time, we will first train the Discriminator to memorize all the training images. we give the Generator poor memory in hopes that it will learn to generalize. the kernel is inspired by the tutorial here and by my previous kernels. a generalizing generator is coached to generalize images. a gAN is a robot artist that draws dog images", "sum_t5_words": 79, "sum_t5_runtime": 6.408, "runtime": 0.0, "nltk_category": "Agriculture", "nltk_category_score": 0.37659984827041626, "nltk_category_runtime": 19.371, "nltk_subcategory": "General", "nltk_subcategory_score": 0.9439747333526611, "nltk_subcategory_runtime": 31.11, "category": "Agriculture", "category_score": 0.37659984827041626, "subcategory": "General", "subcategory_score": 0.9439747333526611, "runtime_cat": 50.481, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.767", "language_code": "en", "language_score": "0.9999976089551276", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "dog memorizer gandisclaimer may valid comp solutionin kernel attempt create new kind semisupervised gan typical gan design presented nanashis great tutorial instead generator discriminator learn time first train discriminator memorize training image next discriminator teach image generator give generator poor memory bottleneck hope learn generalize kaggle submission ask generator output mixture generalized image learned since image stored conv net hope get generalized conceptual mixture versus pixel blend kernel inspired tutorial previous kernel gan consists generator discriminator trained generator robot artist draw dog image training discriminator teach generator draw dog typically g teach disguish real fake dog generator never see image dog instead continually attempt draw dog coached discriminator kernel memorizer generator coached memorize image training set hope generalization arises poor memory contrast generalizing generator coached generalize image load crop image", "tags_descriptive": []}