{"title": "Intro to Santa's 2019: Viz, Costs[22\u03bcs] and Search", "description": "In this notebook, we'll go through some exploratory data analysis, visualize these data points to gain deeper insights, and then build the cost function according to the problem formulation and do a bit of a search for the optimum. The Problem Santa's worhshop runs like a well-oiled machine and the accountants run a tight ship. Let's have a look at how we can accommodate as many families as possible without breaking the bank entirely. The Deets: 5,000 families 100 days 125 to 300 per day (hard limit)  The Costs:Consolation Gifts:This should be interesting to look at. Every choice has a cost and the lower we go in priority, the more gratuitous we get with the families. Look at 9 and ++ getting helicopter rides for each person. Ooph!   choice Gift Card Buffet Helicopter      (fixed) (per P) (per P)   0 0 0 0   1 50 0 0   2 50 9 0   3 100 9 0   4 200 9 0   5 200 18 0   6 300 18 0   7 300 36 0   8 400 36 0   9 500 36 199   ++ 500 36 398    Accounting:Accounting runs a tight, recursive ship. Nd is the number of occupants on the day d. Starting 100 days before, working your way towards Christmas. accounting penalty=1\u2211d=100Nd\u2212125400\u22c5N(0.5+|Nd\u2212Nd+1|50)dSources:Blatantly copying stuff from these notebooks. Give them an upvote!  https://www.kaggle.com/inversion/santa-s-2019-starter-notebook (Get a good initial idea) https://www.kaggle.com/chewzy/santa-finances-a-closer-look-at-the-costs (Nice EDA) https://www.kaggle.com/nickel/santa-s-2019-fast-pythonic-cost-23-s (Really fast Pythonic cost, which I adapted) https://www.kaggle.com/xhlulu/santa-s-2019-stochastic-product-search (Great impementation of random search, which I adapted) https://www.kaggle.com/ilu000/greedy-dual-and-tripple-shuffle-with-fast-scoring (Better data, which I'm using in the newer kernels.)", "link": "https://www.kaggle.com/jesperdramsch/intro-to-santa-s-2019-viz-costs-22-s-and-search", "tags": ["Exploratory Data Analysis"], "kind": ["Project", "(Notebook)"], "ml_libs": [], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-12-04 02:00:21", "date_scraped": "2020-12-13 16:59:00", "words": 288, "sentences": 11, "sum_nltk": "In this notebook, we'll go through some exploratory data analysis, visualize these data points to gain deeper insights, and then build the cost function according to the problem formulation and do a bit of a search for the optimum.\nThe Problem Santa's worhshop runs like a well-oiled machine and the accountants run a tight ship.\nLet's have a look at how we can accommodate as many families as possible without breaking the bank entirely.\nThe Deets: 5,000 families 100 days 125 to 300 per day (hard limit)  The Costs:Consolation Gifts:This should be interesting to look at.\nEvery choice has a cost and the lower we go in priority, the more gratuitous we get with the families.\nchoice Gift Card Buffet Helicopter      (fixed) (per P) (per P)   0 0 0 0   1 50 0 0   2 50 9 0   3 100 9 0   4 200 9 0   5 200 18 0   6 300 18 0   7 300 36 0   8 400 36 0   9 500 36 199   ++ 500 36 398    Accounting:Accounting runs a tight, recursive ship.\nNd is the number of occupants on the day d.\nStarting 100 days before, working your way towards Christmas.", "sum_nltk_words": 219, "sum_nltk_runtime": 0.003, "sum_t5": "a new notebook shows how to budget for a holiday without breaking the bank. the cost of helicopter rides is a recursive cost. the notebooks are available on kaggle.com and xhlulu. the cost of helicopters is a recursive cost. the notebooks are available on kaggle.com and xhlulu. a new notebook is available for a limited time only.", "sum_t5_words": 57, "sum_t5_runtime": 6.445, "runtime": 0.005, "nltk_category": "Accounting", "nltk_category_score": 0.8805044889450073, "nltk_category_runtime": 19.162, "nltk_subcategory": "Judicial Applied", "nltk_subcategory_score": 0.4333173632621765, "nltk_subcategory_runtime": 30.656, "category": "Accounting", "category_score": 0.8805044889450073, "subcategory": "Judicial Applied", "subcategory_score": 0.4333173632621765, "runtime_cat": 49.819, "programming_language": "Jupyter Notebook", "ml_score": "0.5", "engagement_score": "0.682", "language_code": "en", "language_score": "0.9999948616184293", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "notebook well go exploratory data analysis visualize data point gain deeper insight build cost function according problem formulation bit search optimum problem santa worhshop run like welloiled machine accountant run tight ship let look accommodate many family possible without breaking bank entirely deets 5000 family 100 day 125 300 per day hard limit costsconsolation giftsthis interesting look every choice cost lower go priority gratuitous get family look 9 getting helicopter ride person ooph choice gift card buffet helicopter fixed per p per p 0 0 0 0 1 50 0 0 2 50 9 0 3 100 9 0 4 200 9 0 5 200 18 0 6 300 18 0 7 300 36 0 8 400 36 0 9 500 36 199 500 36 398 accountingaccounting run tight recursive ship nd number occupant day starting 100 day working way towards christmas accounting penalty1d100nd125400n05ndnd150dsourcesblatantly copying stuff notebook give upvote httpswwwkagglecominversionsantas2019starternotebook get good initial idea httpswwwkagglecomchewzysantafinancesacloserlookatthecosts nice eda httpswwwkagglecomnickelsantas2019fastpythoniccost23s really fast pythonic cost adapted httpswwwkagglecomxhlulusantas2019stochasticproductsearch great impementation random search adapted httpswwwkagglecomilu000greedydualandtrippleshufflewithfastscoring better data im using newer kernel", "tags_descriptive": ["Exploratory Data Analysis"]}