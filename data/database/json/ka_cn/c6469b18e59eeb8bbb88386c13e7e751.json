{"title": "Quick and dirty regression", "description": "General informationIn this kernel I introduce a regression approach to this task. There were already several competitions on kaggle with kappa metric. Usually a regression approach with thresholds worked the best. I use the code for feature generation from this kernel: https://www.kaggle.com/braquino/890-features And modelling is taken from my previous kernel. The code was changed to regression quite fast, so it may look not nice for now.", "link": "https://www.kaggle.com/artgor/quick-and-dirty-regression", "tags": ["Regression", "Feature Engineering"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "xgboost", "catboost", "lightgbm"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-11-21 16:10:58", "date_scraped": "2020-12-12 18:40:29", "words": 66, "sentences": 5, "runtime": 0.002, "description_category": "Real Estate, Rental & Leasing", "description_category_score": 0.26068711280822754, "description_category_runtime": 7.404, "description_subcategory": "General", "description_subcategory_score": 0.9967008829116821, "description_subcategory_runtime": 11.577, "category": "Real Estate, Rental & Leasing", "category_score": 0.26068711280822754, "subcategory": "General", "subcategory_score": 0.9967008829116821, "runtime_cat": 18.981, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.799", "language_code": "en", "language_score": "0.9999974464502652", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "general informationin kernel introduce regression approach task already several competition kaggle kappa metric usually regression approach threshold worked best use code feature generation kernel httpswwwkagglecombraquino890features modelling taken previous kernel code changed regression quite fast may look nice", "tags_descriptive": ["Regression", "Feature Engineering"]}