{"title": "I will sell everything for free (~0.55)", "description": "Mercari Price Suggestion ChallengeThis is first of its kind and kernel only competition, and stage2 files will not be downloaded and will be available only in kernels. In this notebook, I am doing basic data exploration and reporting my findings. I will be making a simple model at the end to just as to make it complete. Val loss will be reported at the end of this notebook. NOTE - If you find this kernel useful, please upvote, and if you have any suggestion or if anything is not clear please comment, I will try to explain my work In this notebook we will extract many features and make a simple model which runs faster than Bojan :P I will be extracting following features -  Yes/No features  - if description present, if brand name present  Category and brand encoding - category has three levels and we will be seperating each level and then provide encoding for all three levels.  SVD comp on if-idf calculated over item description - self explanatory SVD comp on if-itf calculated over product name - self explanatory item_condition_id - use it without processing shipping - use it without processing  Only very few features in first round of feature extraction  We will train a XGB model to check how the extracted features are performing PS_1:  These features are working very well, please change n_comp in SVD and change the number of iterations in XGB from 80 to 1000, you will get very high accuracies. PS_2: I am learning markov models for predicting probability of author given sentence ( with history of last 3 words), I have taken a part of code from internet and I have written a probability function, but that function is faulty and I am having difficulty fixing it. If you know markov models, please contact or have a look at notebook", "link": "https://www.kaggle.com/maheshdadhich/i-will-sell-everything-for-free-0-55", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "xgboost", "nltk"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2017-11-24 13:18:37", "date_scraped": "2020-12-13 14:05:42", "words": 315, "sentences": 8, "sum_nltk": "I will be making a simple model at the end to just as to make it complete.\nNOTE - If you find this kernel useful, please upvote, and if you have any suggestion or if anything is not clear please comment, I will try to explain my work In this notebook we will extract many features and make a simple model which runs faster than Bojan :P I will be extracting following features -  Yes/No features  - if description present, if brand name present  Category and brand encoding - category has three levels and we will be seperating each level and then provide encoding for all three levels.\nSVD comp on if-idf calculated over item description - self explanatory SVD comp on if-itf calculated over product name - self explanatory item_condition_id - use it without processing shipping - use it without processing  Only very few features in first round of feature extraction  We will train a XGB model to check how the extracted features are performing PS_1:  These features are working very well, please change n_comp in SVD and change the number of iterations in XGB from 80 to 1000, you will get very high accuracies.\nIf you know markov models, please contact or have a look at notebook", "sum_nltk_words": 212, "sum_nltk_runtime": 0.003, "sum_t5": "Mercari Price Suggestion Challenge is first of its kind and kernel only competition. stage2 files will not be downloaded and will be available only in kernels. in this notebook, i am doing basic data exploration and reporting my findings. i will be making a simple model at the end to just as to make it complete. if you find this kernel useful, please upvote, and if anything is not clear please comment.", "sum_t5_words": 72, "sum_t5_runtime": 5.805, "runtime": 0.003, "nltk_category": "Accommodation & Food", "nltk_category_score": 0.15934307873249054, "nltk_category_runtime": 17.597, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.8042082190513611, "nltk_subcategory_runtime": 27.863, "category": "Accommodation & Food", "category_score": 0.15934307873249054, "subcategory": "Machine Learning", "subcategory_score": 0.8042082190513611, "runtime_cat": 45.46, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.749", "language_code": "en", "language_score": "0.9999964121933338", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "mercari price suggestion challengethis first kind kernel competition stage2 file downloaded available kernel notebook basic data exploration reporting finding making simple model end make complete val loss reported end notebook note find kernel useful please upvote suggestion anything clear please comment try explain work notebook extract many feature make simple model run faster bojan p extracting following feature yesno feature description present brand name present category brand encoding category three level seperating level provide encoding three level svd comp ifidf calculated item description self explanatory svd comp ifitf calculated product name self explanatory item_condition_id use without processing shipping use without processing feature first round feature extraction train xgb model check extracted feature performing ps_1 feature working well please change n_comp svd change number iteration xgb 80 1000 get high accuracy ps_2 learning markov model predicting probability author given sentence history last 3 word taken part code internet written probability function function faulty difficulty fixing know markov model please contact look notebook", "tags_descriptive": []}