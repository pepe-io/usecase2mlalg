{"title": "Fastai (AWD-LSTM) solution (~0.71 LB)", "description": "Coreference resolution with fast.aiIn this notebook, we will explore ULMFiT approach to solve this task. With proper fine-tuning, you can get decent results in a matter of 20 minutes. Some 15 epochs of fine-tuning will get you up to 20-ish place. Changes in this version:  More civilized approach to validation. The model uses the representation of the last token of the entity instead of the first token. With a unidirectional encoder, this might be the right thing to do.  I will be grateful for any suggestions, especially about converting two logits/probabilities into the three classes without the need for an additional layer. Collect the data", "link": "https://www.kaggle.com/mamamot/fastai-awd-lstm-solution-0-71-lb", "tags": ["NLP"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "spacy"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-03-02 10:51:13", "date_scraped": "2020-12-12 20:09:27", "words": 107, "sentences": 8, "runtime": 0.002, "description_category": "Utilities", "description_category_score": 0.36794883012771606, "description_category_runtime": 10.371, "description_subcategory": "Quality", "description_subcategory_score": 0.5337788462638855, "description_subcategory_runtime": 16.234, "category": "Utilities", "category_score": 0.36794883012771606, "subcategory": "Quality", "subcategory_score": 0.5337788462638855, "runtime_cat": 26.605, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.701", "language_code": "en", "language_score": "0.9999970542656731", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "coreference resolution fastaiin notebook explore ulmfit approach solve task proper finetuning get decent result matter 20 minute 15 epoch finetuning get 20ish place change version civilized approach validation model us representation last token entity instead first token unidirectional encoder might right thing grateful suggestion especially converting two logitsprobabilities three class without need additional layer collect data", "tags_descriptive": ["Natural Language Processing (NLP)"]}