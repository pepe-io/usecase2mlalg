{"title": "Simple Convolutional N. Network with Tensorflow", "description": "UPDATE : I perform many updates to provide a better explanation of my code. In addition, I added layers and dropout in my CNN to have better results.Convolutional Neural Network with tensorflowMy goal is to use Tensorflow (not Keras) for this competition. Just a quick word about Keras. In order to have better result, it's better to use pre-trained model which can be export from Keras and do transfert leraning.To quickly summarize, you can reuse some weights from the pre-trained models and add or remove some of the layers in order to create a new model. Here we will not do it. We just want t create from scratch our own CNN. I share a Python code which shows how to use Tensorflow to build a simple convolutional network (2 layers of convolutional network). I learn a lot from Hvass-Labs github so go to see his tutorial, it's definitely one of the best. As you will see, I copy a lot from his code for the convolutional network part. To simplify the game, I will reduce the dataset with the 8 main breeds (take only 3 or 5 if you want to run the code faster).. Please let me know if you manage to improve the results (by using Tensorflow) and how did you do? I really need your help as you will see the results are not good. As well, if you find some mistakes or have some questions, do not hesitate to put a comment. I will continue to add more informations on this code to make it more clear. ArchitectureWe will create a Convolutional Neural Network (CNN) which willl be able to classify dogs depending on their breed. Our CNN architecture will be as followed:  Convolutional Layer n\u00b01 with 32 filters Max pooling Relu   Convolutional Layer n\u00b02 with 64 filters Max pooling Relu   Convolutional Layer n\u00b03 with 128 filters Max pooling Relu DropOut   Flatten Layer Fully Connected Layer with 500 nodes Relu DropOut   Fully Connected Layer with n nodes (n = number of breeds)  Preliminary work1. PackagesLet's import all the packages we need.", "link": "https://www.kaggle.com/kaggleslayer/simple-convolutional-n-network-with-tensorflow", "tags": ["CV"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "tensorflow"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2017-12-05 08:41:05", "date_scraped": "2020-12-12 18:55:48", "words": 356, "sentences": 16, "sum_nltk": "In addition, I added layers and dropout in my CNN to have better results.Convolutional Neural Network with tensorflowMy goal is to use Tensorflow (not Keras) for this competition.\nIn order to have better result, it's better to use pre-trained model which can be export from Keras and do transfert leraning.To quickly summarize, you can reuse some weights from the pre-trained models and add or remove some of the layers in order to create a new model.\nWe just want t create from scratch our own CNN.\nI share a Python code which shows how to use Tensorflow to build a simple convolutional network (2 layers of convolutional network).\nAs you will see, I copy a lot from his code for the convolutional network part.\nTo simplify the game, I will reduce the dataset with the 8 main breeds (take only 3 or 5 if you want to run the code faster)..\nPlease let me know if you manage to improve the results (by using Tensorflow) and how did you do?\nI really need your help as you will see the results are not good.\nArchitectureWe will create a Convolutional Neural Network (CNN) which willl be able to classify dogs depending on their breed.", "sum_nltk_words": 195, "sum_nltk_runtime": 0.004, "sum_t5": "a new code shows how to use Tensorflow to build a convolutional network. the code is based on a pre-trained model which can be exported from Keras. to have better result, it's better to use pre-trained models and do transfert leraning. if you manage to improve the results, please let me know.........", "sum_t5_words": 52, "sum_t5_runtime": 6.249, "runtime": 0.01, "nltk_category": "Education & Research", "nltk_category_score": 0.27466505765914917, "nltk_category_runtime": 18.829, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.9426781535148621, "nltk_subcategory_runtime": 29.84, "category": "Education & Research", "category_score": 0.27466505765914917, "subcategory": "Machine Learning", "subcategory_score": 0.9426781535148621, "runtime_cat": 48.669, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.75", "language_code": "en", "language_score": "0.9999978202650239", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "update perform many update provide better explanation code addition added layer dropout cnn better resultsconvolutional neural network tensorflowmy goal use tensorflow kera competition quick word kera order better result better use pretrained model export kera transfert leraningto quickly summarize reuse weight pretrained model add remove layer order create new model want create scratch cnn share python code show use tensorflow build simple convolutional network 2 layer convolutional network learn lot hvasslabs github go see tutorial definitely one best see copy lot code convolutional network part simplify game reduce dataset 8 main breed take 3 5 want run code faster please let know manage improve result using tensorflow really need help see result good well find mistake question hesitate put comment continue add information code make clear architecturewe create convolutional neural network cnn willl able classify dog depending breed cnn architecture followed convolutional layer n1 32 filter max pooling relu convolutional layer n2 64 filter max pooling relu convolutional layer n3 128 filter max pooling relu dropout flatten layer fully connected layer 500 node relu dropout fully connected layer n node n number breed preliminary work1 packageslets import package need", "tags_descriptive": ["Computer Vision (CV)"]}