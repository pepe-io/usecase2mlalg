{"title": "FirstLook", "description": "Hello Kagglers!! I hope you are busy doing analysis and building models on Kaggle.  This competition is hosted by the 2018 CVPR workshop on autonomous driving (WAD). Here Kagglers are challenged to develop a robust segmentation algorithm that can be used for self-driving cars. I have been working in this field since last year, so I know how crucial this part is. Before we dive into the data analysis part, I would like to elaborate on some important aspects regarding segmentation:  For a self-driving car, segmentation or to be more precise semantic segmentation gives your car a view of what lies ahead of it. Though little bit computationally expensive compared to the algorithms generating bounding boxes, semantic segmentation gives a car much more idea about scene understanding. Also, it overcomes all those critical situations where bounding box fails miserably.  It is not possible to label each and every type of object/instance on the road. This poses another challenge i.e. how to interpret something that is labeled by the model as an unknown instance. How do you interpret the label map generated in this case?  Most important point Self-driving cars run with chipsets integrated within the car system. Though most people use Drive PX2 but not all of them. Self-driving car makes sense only when your model is able to run on an embedded device and you get efficient, if not almost real-time, FPS.  So, don't ensemble first. Try to develop something that is lightweight and is capable of running on an embedded device because that is the model for which this competition is hosted   Let's dive into the dataset!!", "link": "https://www.kaggle.com/efezinoerome/firstlook", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "skimage"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2018-04-23 21:21:32", "date_scraped": "2020-12-12 18:34:37", "words": 276, "sentences": 15, "sum_nltk": "Here Kagglers are challenged to develop a robust segmentation algorithm that can be used for self-driving cars.\nBefore we dive into the data analysis part, I would like to elaborate on some important aspects regarding segmentation:  For a self-driving car, segmentation or to be more precise semantic segmentation gives your car a view of what lies ahead of it.\nThough little bit computationally expensive compared to the algorithms generating bounding boxes, semantic segmentation gives a car much more idea about scene understanding.\nIt is not possible to label each and every type of object/instance on the road.\nThis poses another challenge i.e. how to interpret something that is labeled by the model as an unknown instance.\nHow do you interpret the label map generated in this case?\nMost important point Self-driving cars run with chipsets integrated within the car system.\nSelf-driving car makes sense only when your model is able to run on an embedded device and you get efficient, if not almost real-time, FPS.\nTry to develop something that is lightweight and is capable of running on an embedded device because that is the model for which this competition is hosted   Let's dive into the dataset!!", "sum_nltk_words": 192, "sum_nltk_runtime": 0.003, "sum_t5": "a competition is hosted by the 2018 CVPR workshop on autonomous driving. the participants are challenged to develop a robust segmentation algorithm. the algorithm can be used for self-driving cars. the winner will be announced on november 8. back to mail online home. back to the page you came from.. back to the page you came from.. back to the page you came from.. back to the page you came from.", "sum_t5_words": 71, "sum_t5_runtime": 5.878, "runtime": 0.0, "nltk_category": "Utilities", "nltk_category_score": 0.37532955408096313, "nltk_category_runtime": 17.258, "nltk_subcategory": "Judicial Applied", "nltk_subcategory_score": 0.6341341733932495, "nltk_subcategory_runtime": 26.909, "category": "Utilities", "category_score": 0.37532955408096313, "subcategory": "Judicial Applied", "subcategory_score": 0.6341341733932495, "runtime_cat": 44.167, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.58", "language_code": "en", "language_score": "0.9999984390688856", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "hello kagglers hope busy analysis building model kaggle competition hosted 2018 cvpr workshop autonomous driving wad kagglers challenged develop robust segmentation algorithm used selfdriving car working field since last year know crucial part dive data analysis part would like elaborate important aspect regarding segmentation selfdriving car segmentation precise semantic segmentation give car view lie ahead though little bit computationally expensive compared algorithm generating bounding box semantic segmentation give car much idea scene understanding also overcomes critical situation bounding box fails miserably possible label every type objectinstance road pose another challenge ie interpret something labeled model unknown instance interpret label map generated case important point selfdriving car run chipsets integrated within car system though people use drive px2 selfdriving car make sense model able run embedded device get efficient almost realtime fps dont ensemble first try develop something lightweight capable running embedded device model competition hosted let dive dataset", "tags_descriptive": []}