{"title": "TensorFlow 2.x + TensorFlow Hub End-to-End Example", "description": "Preface: This is my first Kernel (I hope I'm doing it right)! I'd love to do more like this. So if you have any feedback or advice, let me know in the comments or on Twitter.   Using Transfer Learning and TensorFlow 2.x to Classify Different Dog BreedsWho's that doggy in the window? Dogs are incredible. But have you ever been sitting at a cafe, seen a dog and not known what breed it is? I have. And then someone says, \"it's an English Terrier\" and you think, how did they know that? In this project we're going to be using machine learning to help us identify different breeds of dogs. To do this, we'll be using data from the Kaggle dog breed identification competition. It consists of a collection of 10,000+ labelled images of 120 different dog breeds. This kind of problem is called multi-class image classification. It's multi-class because we're trying to classify mutliple different breeds of dog. If we were only trying to classify dogs versus cats, it would be called binary classification. Multi-class image classification is an important problem because it's the same kind of technology Tesla uses in their self-driving cars or Airbnb uses in atuomatically adding information to their listings. Since the most important step in a deep learng problem is getting the data ready (turning it into numbers), that's what we're going to start with. We're going to go through the following TensorFlow/Deep Learning workflow:   Get data ready (download from Kaggle, store, import). Prepare the data (preprocessing, the 3 sets, X & y). Choose and fit/train a model (TensorFlow Hub, tf.keras.applications, TensorBoard, EarlyStopping). Evaluating a model (making predictions, comparing them with the ground truth labels). Improve the model through experimentation (start with 1000 images, make sure it works, increase the number of images). Save, sharing and reloading your model (once you're happy with the results).  For preprocessing our data, we're going to use TensorFlow 2.x. The whole premise here is to get our data into Tensors (arrays of numbers which can be run on GPUs) and then allow a machine learning model to find patterns between them. For our machine learning model, we're going to be using a pretrained deep learning model from TensorFlow Hub. The process of using a pretrained model and adapting it to your own problem is called transfer learning. We do this because rather than train our own model from scratch (could be timely and expensive), we leverage the patterns of another model which has been trained to classify images. Getting our workspace readyBefore we get started, since we'll be using TensorFlow 2.x and TensorFlow Hub (TensorFlow Hub), let's import them. And we'll also check if we're using a GPU.", "link": "https://www.kaggle.com/mrdbourke/tensorflow-2-x-tensorflow-hub-end-to-end-example", "tags": ["DL", "Transfer Learning"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "keras", "tensorflow", "pattern"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2020-02-14 04:54:52", "date_scraped": "2020-12-12 18:55:48", "words": 455, "sentences": 25, "sum_nltk": "Using Transfer Learning and TensorFlow 2.x to Classify Different Dog BreedsWho's that doggy in the window?\nIn this project we're going to be using machine learning to help us identify different breeds of dogs.\nIt consists of a collection of 10,000+ labelled images of 120 different dog breeds.\nThis kind of problem is called multi-class image classification.\nIt's multi-class because we're trying to classify mutliple different breeds of dog.\nSince the most important step in a deep learng problem is getting the data ready (turning it into numbers), that's what we're going to start with.\nWe're going to go through the following TensorFlow/Deep Learning workflow:   Get data ready (download from Kaggle, store, import).\nFor preprocessing our data, we're going to use TensorFlow 2.x. The whole premise here is to get our data into Tensors (arrays of numbers which can be run on GPUs) and then allow a machine learning model to find patterns between them.\nFor our machine learning model, we're going to be using a pretrained deep learning model from TensorFlow Hub. The process of using a pretrained model and adapting it to your own problem is called transfer learning.", "sum_nltk_words": 185, "sum_nltk_runtime": 0.006, "sum_t5": "machine learning is a powerful tool for identifying different breeds of dogs. the most important step in a deep learning problem is getting the data ready. the whole premise is to use a combination of a tensorflow and transfer learning. the goal is to help people understand the differences between different breeds of dogs. a san francisco-based company is developing a machine learning solution. a san francisco-based company is developing a machine learning solution", "sum_t5_words": 74, "sum_t5_runtime": 6.992, "runtime": 0.0, "nltk_category": "Utilities", "nltk_category_score": 0.25644224882125854, "nltk_category_runtime": 18.017, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.9896792769432068, "nltk_subcategory_runtime": 29.361, "category": "Utilities", "category_score": 0.25644224882125854, "subcategory": "Machine Learning", "subcategory_score": 0.9896792769432068, "runtime_cat": 47.38, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.714", "language_code": "en", "language_score": "0.9999971508620334", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "preface first kernel hope im right id love like feedback advice let know comment twitter using transfer learning tensorflow 2x classify different dog breedswhos doggy window dog incredible ever sitting cafe seen dog known breed someone say english terrier think know project going using machine learning help u identify different breed dog well using data kaggle dog breed identification competition consists collection 10000 labelled image 120 different dog breed kind problem called multiclass image classification multiclass trying classify mutliple different breed dog trying classify dog versus cat would called binary classification multiclass image classification important problem kind technology tesla us selfdriving car airbnb us atuomatically adding information listing since important step deep learng problem getting data ready turning number thats going start going go following tensorflowdeep learning workflow get data ready download kaggle store import prepare data preprocessing 3 set x choose fittrain model tensorflow hub tfkerasapplications tensorboard earlystopping evaluating model making prediction comparing ground truth label improve model experimentation start 1000 image make sure work increase number image save sharing reloading model youre happy result preprocessing data going use tensorflow 2x whole premise get data tensor array number run gpus allow machine learning model find pattern machine learning model going using pretrained deep learning model tensorflow hub process using pretrained model adapting problem called transfer learning rather train model scratch could timely expensive leverage pattern another model trained classify image getting workspace readybefore get started since well using tensorflow 2x tensorflow hub tensorflow hub let import well also check using gpu", "tags_descriptive": ["Deep Learning (DL)", "Transfer Learning"]}