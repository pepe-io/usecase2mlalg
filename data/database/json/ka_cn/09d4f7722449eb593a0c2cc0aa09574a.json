{"title": "RB's CenterNet Baseline Pytorch without Dropout", "description": "IntroductionThis notebook is modification of Ruslan Baynazarov's baseline kernel ver.14 CenterNet Baseline with PL score = 0.038, The uploaded model has been trained with the code below for 6 epochs (appx.6 hours) without image augmentations. Here it is to be trained for another 3 epochs. The changes I made in the order of the perceived significance to the CV/PL score:1) changed dropout rate in the EfficientNet B0 base model from 0.2 to 0.02 2) select threshold = -1.5 to filter logits so that the ratio of number of predicted cars to number of images approximates the one of the training set 3) use test_masks to remove cars from test predictions 4) cars appearing outside of image boundaries are dropped (removed 997 cars out of 49,626 total ) 5) Removed broken images thanks to https://www.kaggle.com/c/pku-autonomous-driving/discussion/117621 6) changed StepLR learning rate scheduler to MultiStepLR (gamma=0.5) 7) pixel wise augmentations (albumentations lib) 8) normalized images with subtracting total means per channel and dividing by standard deviation All other building blocks laid out in CenterNet Baseline kernel ver.14 are intact. (preprocessing, efficientnet-B0 backbone, Adam optimizer) What did not work. using efficientnet B4, B5. The reason might be that the batch size of only 1 image could be fit to Tesla P100 GPU gradient accumulation did not improve score. Batch Normalization layers are quoted to be the possible reason was not able to change BatchNorm to GroupNorm, and I am still not sure if it would help (would be delighted if you could comment with lines of such code)  References:Took 3D visualization code from https://www.kaggle.com/zstusnoopy/visualize-the-location-and-3d-bounding-box-of-car CenterNet paper https://arxiv.org/pdf/1904.07850.pdf CenterNet repository https://github.com/xingyizhou/CenterNet Will be grateful for pointing to the bugs and advising corrections", "link": "https://www.kaggle.com/isakev/rb-s-centernet-baseline-pytorch-without-dropout", "tags": ["CV"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "pytorch", "albumentations"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2020-01-04 17:19:53", "date_scraped": "2020-12-13 15:26:06", "words": 278, "sentences": 7, "sum_nltk": "IntroductionThis notebook is modification of Ruslan Baynazarov's baseline kernel ver.14 CenterNet Baseline with PL score = 0.038, The uploaded model has been trained with the code below for 6 epochs (appx.6 hours) without image augmentations.\nThe changes I made in the order of the perceived significance to the CV/PL score:1) changed dropout rate in the EfficientNet B0 base model from 0.2 to 0.02 2) select threshold = -1.5 to filter logits so that the ratio of number of predicted cars to number of images approximates the one of the training set 3) use test_masks to remove cars from test predictions 4) cars appearing outside of image boundaries are dropped (removed 997 cars out of 49,626 total ) 5) Removed broken images thanks to https://www.kaggle.com/c/pku-autonomous-driving/discussion/117621 6) changed StepLR learning rate scheduler to MultiStepLR (gamma=0.5) 7) pixel wise augmentations (albumentations lib) 8) normalized images with subtracting total means per channel and dividing by standard deviation All other building blocks laid out in CenterNet Baseline kernel ver.14 are intact.\nBatch Normalization layers are quoted to be the possible reason was not able to change BatchNorm to GroupNorm, and I am still not sure if it would help (would be delighted if you could comment with lines of such code)  References:Took 3D visualization code from https://www.kaggle.com/zstusnoopy/visualize-the-location-and-3d-bounding-box-of-car CenterNet paper https://arxiv.org/pdf/1904.07850.pdf CenterNet repository https://github.com/xingyizhou/CenterNet Will be grateful for pointing to the bugs and advising corrections", "sum_nltk_words": 228, "sum_nltk_runtime": 0.003, "sum_t5": "notebook is modification of Ruslan Baynazarov's baseline kernel ver.14. the uploaded model has been trained for 6 epochs (appx.6 hours) without image augmentations. here it is to be trained for another 3 epochs. the reason might be that the batch size of only 1 image could be fit to Tesla P100 GPU gradient accumulation did not improve score. the code below has been modified to make it easier to use.", "sum_t5_words": 70, "sum_t5_runtime": 6.441, "runtime": 0.004, "nltk_category": "Wholesale & Retail", "nltk_category_score": 0.14372758567333221, "nltk_category_runtime": 28.664, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.967337965965271, "nltk_subcategory_runtime": 46.065, "category": "Wholesale & Retail", "category_score": 0.14372758567333221, "subcategory": "Machine Learning", "subcategory_score": 0.967337965965271, "runtime_cat": 74.73, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.681", "language_code": "en", "language_score": "0.9999973486700017", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "introductionthis notebook modification ruslan baynazarovs baseline kernel ver14 centernet baseline pl score 0038 uploaded model trained code 6 epoch appx6 hour without image augmentation trained another 3 epoch change made order perceived significance cvpl score1 changed dropout rate efficientnet b0 base model 02 002 2 select threshold 15 filter logits ratio number predicted car number image approximates one training set 3 use test_masks remove car test prediction 4 car appearing outside image boundary dropped removed 997 car 49626 total 5 removed broken image thanks httpswwwkagglecomcpkuautonomousdrivingdiscussion117621 6 changed steplr learning rate scheduler multisteplr gamma05 7 pixel wise augmentation albumentations lib 8 normalized image subtracting total mean per channel dividing standard deviation building block laid centernet baseline kernel ver14 intact preprocessing efficientnetb0 backbone adam optimizer work using efficientnet b4 b5 reason might batch size 1 image could fit tesla p100 gpu gradient accumulation improve score batch normalization layer quoted possible reason able change batchnorm groupnorm still sure would help would delighted could comment line code referencestook 3d visualization code httpswwwkagglecomzstusnoopyvisualizethelocationand3dboundingboxofcar centernet paper httpsarxivorgpdf190407850pdf centernet repository httpsgithubcomxingyizhoucenternet grateful pointing bug advising correction", "tags_descriptive": ["Computer Vision (CV)"]}