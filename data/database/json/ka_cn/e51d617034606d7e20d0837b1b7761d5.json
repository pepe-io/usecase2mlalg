{"title": "End-to-end model: CT scans + Tabular", "description": "1. End-to-end model: CT scans latent features + Tabular featuresThis model is a simple end-to-end solution that uses CT scans latent features and tabular features to generate predictions. The CT scans latent features are obtained by encoding pre-processed 3D CT scan tensors, using a pre-trained AutoEncoder for that. The tabular features are obtained by pre-processing the tabular data (more about it here). I am not including here the code used to train the AutoEncoder. I pretrained it in another notebook, and saved the weights in a public dataset. The overal model looks like the image below:  This version runs on CPU, end-to-end. However, it is slow. Improvements/next steps at the end.", "link": "https://www.kaggle.com/carlossouza/end-to-end-model-ct-scans-tabular", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "pytorch", "skimage"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2020-07-24 03:49:21", "date_scraped": "2020-12-13 14:44:51", "words": 112, "sentences": 9, "runtime": 0.002, "description_category": "Healthcare", "description_category_score": 0.2002343237400055, "description_category_runtime": 11.943, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9857764840126038, "description_subcategory_runtime": 18.071, "category": "Healthcare", "category_score": 0.2002343237400055, "subcategory": "Machine Learning", "subcategory_score": 0.9857764840126038, "runtime_cat": 30.015, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.752", "language_code": "en", "language_score": "0.9999971209631582", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "1 endtoend model ct scan latent feature tabular featuresthis model simple endtoend solution us ct scan latent feature tabular feature generate prediction ct scan latent feature obtained encoding preprocessed 3d ct scan tensor using pretrained autoencoder tabular feature obtained preprocessing tabular data including code used train autoencoder pretrained another notebook saved weight public dataset overal model look like image version run cpu endtoend however slow improvementsnext step end", "tags_descriptive": []}