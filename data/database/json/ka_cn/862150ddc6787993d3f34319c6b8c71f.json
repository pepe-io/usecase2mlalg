{"title": "XGBoost baseline - multilabel classification", "description": "Framing as a binary classification problemIn this notebook I create a baseline model using XGBoost and framing the problem as a n-binary classification problems (where n=206 and is the total number of classes). I make use of the MultiOutputClassifier wrapper in sklearn. This has the advantages that :  You can use models capable only of binary classification It is easy to implement  But has the disadvantages that:  You lose any correlation between labels which could be useful to the model You need to train n models and is therefore slow  Updates (started version 9)  v9:  dropped ctl_vehicle instances in-fold, kept in validation", "link": "https://www.kaggle.com/fchmiel/xgboost-baseline-multilabel-classification", "tags": ["Classification", "Xgboost"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "xgboost"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2020-09-10 11:05:23", "date_scraped": "2020-12-13 13:16:12", "words": 108, "sentences": 3, "runtime": 0.005, "description_category": "Accommodation & Food", "description_category_score": 0.1337645947933197, "description_category_runtime": 9.938, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9091258645057678, "description_subcategory_runtime": 15.439, "category": "Accommodation & Food", "category_score": 0.1337645947933197, "subcategory": "Machine Learning", "subcategory_score": 0.9091258645057678, "runtime_cat": 25.378, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.762", "language_code": "en", "language_score": "0.9999974639065021", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "framing binary classification problemin notebook create baseline model using xgboost framing problem nbinary classification problem n206 total number class make use multioutputclassifier wrapper sklearn advantage use model capable binary classification easy implement disadvantage lose correlation label could useful model need train n model therefore slow update started version 9 v9 dropped ctl_vehicle instance infold kept validation", "tags_descriptive": ["Classification", "Xgboost"]}