{"title": "DenseNet Transfer Learning - iWildCam 2019", "description": "DenseNet Transfer Learning - iWildCam 2019Breakdown of this notebook:  Loading the 32x32 dataset: Load the data generated in Reducing Image Sizes to 32x32. Create Callback for F1 Score: F1-macro score is the official metric of the competition. We create a callback to keep track of that value as we train the model. Creating and Training the Model: Create a DenseNet model, and load weights pretrained on ImageNet. Train it on the entire dataset. Evaluation: Display the plots from the training history. Submission: Run predictions with model.predict, and create submission csv file.  References cifar10_cnn_keras.py: Heavily inspired from this tutorial created by the Keras team. The architecture and training process is directly taken from them. Keras CNN Starter - PetFinder: History plot and submission are inspired by this kernel Reducing Image Sizes to 32x32: Image data (X_train, X_test) come from the output of this kernel. How to compute f1 score for each epoch in Keras: Needed to compute the F1 Score after each epoch. CNN Baseline - iWildCam 2019: This is a fork of this notebook.", "link": "https://www.kaggle.com/xhlulu/densenet-transfer-learning-iwildcam-2019", "tags": ["DL", "Classification", "CNN"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "keras", "tensorflow"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-03-29 01:02:12", "date_scraped": "2020-12-13 12:12:46", "words": 176, "sentences": 12, "runtime": 0.002, "description_category": "Biotechnological & Life Sciences", "description_category_score": 0.11669980734586716, "description_category_runtime": 17.969, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9501725435256958, "description_subcategory_runtime": 28.531, "category": "Biotechnological & Life Sciences", "category_score": 0.11669980734586716, "subcategory": "Machine Learning", "subcategory_score": 0.9501725435256958, "runtime_cat": 46.5, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.752", "language_code": "en", "language_score": "0.9999963207905267", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "densenet transfer learning iwildcam 2019breakdown notebook loading 32x32 dataset load data generated reducing image size 32x32 create callback f1 score f1macro score official metric competition create callback keep track value train model creating training model create densenet model load weight pretrained imagenet train entire dataset evaluation display plot training history submission run prediction modelpredict create submission csv file reference cifar10_cnn_keraspy heavily inspired tutorial created kera team architecture training process directly taken kera cnn starter petfinder history plot submission inspired kernel reducing image size 32x32 image data x_train x_test come output kernel compute f1 score epoch kera needed compute f1 score epoch cnn baseline iwildcam 2019 fork notebook", "tags_descriptive": ["Deep Learning (DL)", "Classification", "Convolutional Neural Network (CNN)"]}