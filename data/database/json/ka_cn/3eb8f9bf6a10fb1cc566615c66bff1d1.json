{"title": "[PyTorch] Deep Time Series Classification", "description": "Deep Time Series ClassificationThe time series classification problem seems to be a great choice to apply Deep Learning models. However, even deep models cannot magically give you good results if the data wasn't propertly prepared. The CareerCon 2019 competition was all about time series classification. In one of my previous kernels, I've tried to apply LSTM model to the dataset and didn't get too impressive accuracy. Also, I was experimenting with 1-d convolutions but again without any luck. So finally, I decided to go with a more simple apporach. Nevertheless, when the competition was ended, one of the best solutions implemented by prith189 uses Deep Learning to achieve a decent result on both public and private leaderboard. In this notebook, we're going to use PyTorch to create a clone of the mentioned solution and see if we can improve it a bit using modern training techniques.  ImportsIn addition to PyTorch, we use \"standard\" Python's data science stack. Also, there are couple of additional functions from the standard library used in utils and snippets.", "link": "https://www.kaggle.com/purplejester/pytorch-deep-time-series-classification", "tags": ["DL", "Classification", "Classification"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-04-20 16:29:21", "date_scraped": "2020-12-12 17:33:04", "words": 174, "sentences": 10, "runtime": 0.005, "description_category": "Real Estate, Rental & Leasing", "description_category_score": 0.33122989535331726, "description_category_runtime": 15.404, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.7352315783500671, "description_subcategory_runtime": 24.504, "category": "Real Estate, Rental & Leasing", "category_score": 0.33122989535331726, "subcategory": "Machine Learning", "subcategory_score": 0.7352315783500671, "runtime_cat": 39.907, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.756", "language_code": "en", "language_score": "0.9999958982644752", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "deep time series classificationthe time series classification problem seems great choice apply deep learning model however even deep model cannot magically give good result data wasnt propertly prepared careercon 2019 competition time series classification one previous kernel ive tried apply lstm model dataset didnt get impressive accuracy also experimenting 1d convolution without luck finally decided go simple apporach nevertheless competition ended one best solution implemented prith189 us deep learning achieve decent result public private leaderboard notebook going use pytorch create clone mentioned solution see improve bit using modern training technique importsin addition pytorch use standard python data science stack also couple additional function standard library used utils snippet", "tags_descriptive": ["Deep Learning (DL)", "Classification", "Classification"]}