{"title": "Retraining Inception v3", "description": "Note: The code in this notebook is meant to be run locally, NOT in kaggle's cloud! My approach to this was to use the Inception v3 model, which is trained on a very broad array of images and then just re-train the final layer to focus only on classifying invasive and non-invasive. There is a really good Codelab from Google that goes over the whole procedure of retraining Inception v3. If you follow the Codelab, you will eventually get to the optional step \"Training on your own categories\". This was the trigger for me to search for a dataset and I found this one, which even has a real-life purpose. Cool! In this notebook I show you the only things I implemented in order to adapt this dataset to the retrain workflow covered in the codelab:", "link": "https://www.kaggle.com/mbeierling/retraining-inception-v3", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["tensorflow"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2017-06-04 01:20:55", "date_scraped": "2020-12-13 12:11:50", "words": 136, "sentences": 5, "runtime": 0.001, "description_category": "Healthcare", "description_category_score": 0.1626890003681183, "description_category_runtime": 12.627, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9593439102172852, "description_subcategory_runtime": 19.322, "category": "Healthcare", "category_score": 0.1626890003681183, "subcategory": "Machine Learning", "subcategory_score": 0.9593439102172852, "runtime_cat": 31.949, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.714", "language_code": "en", "language_score": "0.9999972200886509", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "note code notebook meant run locally kaggles cloud approach use inception v3 model trained broad array image retrain final layer focus classifying invasive noninvasive really good codelab google go whole procedure retraining inception v3 follow codelab eventually get optional step training category trigger search dataset found one even reallife purpose cool notebook show thing implemented order adapt dataset retrain workflow covered codelab", "tags_descriptive": []}