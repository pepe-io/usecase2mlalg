{"title": "Keras EfficientNet B3 Training + Inference", "description": "This competition provides a lot of room for interresting experimentations. In this kernel I use a rather easy way to train a standard EfficientNet B3 model with a custom head layer and Generalized mean pool. I use only basic image preprocessing with a scaling factor. To save on training time I use a different training set on each epoch. This gives a nice boost of about 0.005 to 0.008 compared to a fixed training set when using train/test split or cross-validation. The downside is that the validation has some less value. This kernel contains the inference part where I use 3 models from the training. For the complete code to train it yourself you can download it from my github. I trained it for 80 epochs on my 1070 Ti (roughly 1,5 days). I hope you like it and if you find this kernel helpfull..then please don't forget to upvote it.", "link": "https://www.kaggle.com/rsmits/keras-efficientnet-b3-training-inference", "tags": ["DL", "Classification", "CV"], "kind": ["Project", "(Notebook)"], "ml_libs": ["keras", "tensorflow"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2020-02-26 07:28:50", "date_scraped": "2020-12-12 17:09:20", "words": 151, "sentences": 10, "runtime": 0.001, "description_category": "Real Estate, Rental & Leasing", "description_category_score": 0.14686988294124603, "description_category_runtime": 13.359, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9579960703849792, "description_subcategory_runtime": 20.584, "category": "Real Estate, Rental & Leasing", "category_score": 0.14686988294124603, "subcategory": "Machine Learning", "subcategory_score": 0.9579960703849792, "runtime_cat": 33.943, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.769", "language_code": "en", "language_score": "0.9999976168674836", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "competition provides lot room interresting experimentation kernel use rather easy way train standard efficientnet b3 model custom head layer generalized mean pool use basic image preprocessing scaling factor save training time use different training set epoch give nice boost 0005 0008 compared fixed training set using traintest split crossvalidation downside validation le value kernel contains inference part use 3 model training complete code train download github trained 80 epoch 1070 ti roughly 15 day hope like find kernel helpfullthen please dont forget upvote", "tags_descriptive": ["Deep Learning (DL)", "Classification", "Computer Vision (CV)"]}