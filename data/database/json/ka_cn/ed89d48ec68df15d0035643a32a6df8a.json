{"title": "Visualizing K-Means with Leaf Dataset", "description": "Visualizing K-Means with Leaf DatasetThis script is about perhaps the simplest and most popular unsupervised learning algorithm out there: the K-Means clustering algorithm. In this script we will apply K-Means on a small dataset of 1600 binary leaf images with different shapes and try to get a feel for the distribution of leaf images using different visualizations that clarify different aspects about how one can interpret K-Means results. We will then continue to see if the K-Means features (distances from cluster centers) are informative in terms of classifying leafs and determine what is the optimal K (number of clusters) for the sake of leaf type classification. Note: This script is a follow-up script to the PCA script which is very similar but about PCA.", "link": "https://www.kaggle.com/selfishgene/visualizing-k-means-with-leaf-dataset", "tags": ["K-means", "Model Comparison"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "skimage", "pattern"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2017-10-26 01:50:11", "date_scraped": "2020-12-13 13:03:36", "words": 124, "sentences": 4, "runtime": 0.0, "description_category": "Education & Research", "description_category_score": 0.11126133054494858, "description_category_runtime": 11.899, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9469812512397766, "description_subcategory_runtime": 18.482, "category": "Education & Research", "category_score": 0.11126133054494858, "subcategory": "Machine Learning", "subcategory_score": 0.9469812512397766, "runtime_cat": 30.382, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.756", "language_code": "en", "language_score": "0.9999939803372102", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "visualizing kmeans leaf datasetthis script perhaps simplest popular unsupervised learning algorithm kmeans clustering algorithm script apply kmeans small dataset 1600 binary leaf image different shape try get feel distribution leaf image using different visualization clarify different aspect one interpret kmeans result continue see kmeans feature distance cluster center informative term classifying leaf determine optimal k number cluster sake leaf type classification note script followup script pca script similar pca", "tags_descriptive": ["K-means", "Model Comparison"]}