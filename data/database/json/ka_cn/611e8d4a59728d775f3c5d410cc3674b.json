{"title": "[lb>0.63]XGBoost Baseline", "description": "XGBoost BaselineThis notebook rephrases the challenge of predicting stock returns as the challenge of predicting whether a stock will go up. The evaluation  asks you to predict a confidence value between -1 and 1. The predicted confidence value gets then multiplied with the actual return. If your confidence is in the wrong direction (ie. you predict positive values while returns are actually negative), you loose on the metric. If your direction is right however, you want your confidence be as large as possible. Stocks can only go up or down, if the stock is not going up, it must go down (at least a little bit). So if we know our model confidence in the stock going up, then our new confidence is: \u02c6y=up\u2212(1\u2212up)=2\u2217up\u22121 We are left with a \"simple\" binary classification problem, for which there are a number of good tool, here we use XGBoost, but pick your poison. Edit: Updated XGB tuning to the ones suggested by https://www.kaggle.com/alluxia/lb-0-6326-tuned-xgboost-baseline", "link": "https://www.kaggle.com/jannesklaas/lb-0-63-xgboost-baseline", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "xgboost"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2018-09-29 19:17:15", "date_scraped": "2020-12-13 18:02:27", "words": 161, "sentences": 9, "runtime": 0.0, "description_category": "Finance", "description_category_score": 0.21992313861846924, "description_category_runtime": 16.6, "description_subcategory": "Tools", "description_subcategory_score": 0.22351934015750885, "description_subcategory_runtime": 26.604, "category": "Finance", "category_score": 0.21992313861846924, "subcategory": "Tools", "subcategory_score": 0.22351934015750885, "runtime_cat": 43.205, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.735", "language_code": "en", "language_score": "0.9999971617162072", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "xgboost baselinethis notebook rephrases challenge predicting stock return challenge predicting whether stock go evaluation asks predict confidence value 1 1 predicted confidence value get multiplied actual return confidence wrong direction ie predict positive value return actually negative loose metric direction right however want confidence large possible stock go stock going must go least little bit know model confidence stock going new confidence yup1up2up1 left simple binary classification problem number good tool use xgboost pick poison edit updated xgb tuning one suggested httpswwwkagglecomalluxialb06326tunedxgboostbaseline", "tags_descriptive": []}