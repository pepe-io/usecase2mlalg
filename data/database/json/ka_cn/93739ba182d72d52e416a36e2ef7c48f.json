{"title": "Introduction to Manual Feature Engineering", "description": "Introduction: Manual Feature EngineeringIf you are new to this competition, I highly suggest checking out this notebook to get started. In this notebook, we will explore making features by hand for the Home Credit Default Risk competition. In an earlier notebook, we used only the application data in order to build a model. The best model we made from this data achieved a score on the leaderboard around 0.74. In order to better this score, we will have to include more information from the other dataframes. Here, we will look at using information from the bureau and bureau_balance data. The definitions of these data files are:  bureau: information about client's previous loans with other financial institutions reported to Home Credit. Each previous loan has its own row. bureau_balance: monthly information about the previous loans. Each month has its own row.  Manual feature engineering can be a tedious process (which is why we use automated feature engineering with featuretools!) and often relies on domain expertise. Since I have limited domain knowledge of loans and what makes a person likely to default, I will instead concentrate of getting as much info as possible into the final training dataframe. The idea is that the model will then pick up on which features are important rather than us having to decide that. Basically, our approach is to make as many features as possible and then give them all to the model to use! Later, we can perform feature reduction using the feature importances from the model or other techniques such as PCA. The process of manual feature engineering will involve plenty of Pandas code, a little patience, and a lot of great practice manipulation data. Even though automated feature engineering tools are starting to be made available, feature engineering will still have to be done using plenty of data wrangling for a little while longer.", "link": "https://www.kaggle.com/willkoehrsen/introduction-to-manual-feature-engineering", "tags": ["Feature Engineering"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "lightgbm"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2018-08-01 01:50:27", "date_scraped": "2020-12-12 20:47:32", "words": 313, "sentences": 16, "sum_nltk": "Introduction: Manual Feature EngineeringIf you are new to this competition, I highly suggest checking out this notebook to get started.\nIn this notebook, we will explore making features by hand for the Home Credit Default Risk competition.\nIn an earlier notebook, we used only the application data in order to build a model.\nThe definitions of these data files are:  bureau: information about client's previous loans with other financial institutions reported to Home Credit.\nEach previous loan has its own row.\nbureau_balance: monthly information about the previous loans.\nManual feature engineering can be a tedious process (which is why we use automated feature engineering with featuretools!) and often relies on domain expertise.\nBasically, our approach is to make as many features as possible and then give them all to the model to use!\nThe process of manual feature engineering will involve plenty of Pandas code, a little patience, and a lot of great practice manipulation data.\nEven though automated feature engineering tools are starting to be made available, feature engineering will still have to be done using plenty of data wrangling for a little while longer.", "sum_nltk_words": 178, "sum_nltk_runtime": 0.004, "sum_t5": "this notebook explores making features by hand for the Home Credit Default Risk competition. the best model we made from application data scored around 0.74. the process of manual feature engineering will involve plenty of Pandas code. the best model we made from this data achieved a score on the leaderboard around 0.74. the best model we made from this data scored around 0.74. a winner will be announced on november 8. a winner will be announced on november 8.", "sum_t5_words": 80, "sum_t5_runtime": 6.184, "runtime": 0.003, "nltk_category": "Finance", "nltk_category_score": 0.06277462095022202, "nltk_category_runtime": 15.501, "nltk_subcategory": "Tools", "nltk_subcategory_score": 0.08851335197687149, "nltk_subcategory_runtime": 24.972, "category": "Finance", "category_score": 0.06277462095022202, "subcategory": "Tools", "subcategory_score": 0.08851335197687149, "runtime_cat": 40.473, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.818", "language_code": "en", "language_score": "0.9999981262847617", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "introduction manual feature engineeringif new competition highly suggest checking notebook get started notebook explore making feature hand home credit default risk competition earlier notebook used application data order build model best model made data achieved score leaderboard around 074 order better score include information dataframes look using information bureau bureau_balance data definition data file bureau information client previous loan financial institution reported home credit previous loan row bureau_balance monthly information previous loan month row manual feature engineering tedious process use automated feature engineering featuretools often relies domain expertise since limited domain knowledge loan make person likely default instead concentrate getting much info possible final training dataframe idea model pick feature important rather u decide basically approach make many feature possible give model use later perform feature reduction using feature importance model technique pca process manual feature engineering involve plenty panda code little patience lot great practice manipulation data even though automated feature engineering tool starting made available feature engineering still done using plenty data wrangling little longer", "tags_descriptive": ["Feature Engineering"]}