{"title": "Time Series EDA - Malware - [0.64]", "description": "Time Series EDA for Microsoft MalwareFollowing Aditya Soni's great advice, I downloaded timestamps from Microsoft for all 18 million data observations in train.csv and test.csv. Timestamps highlight the unique challenge of this competition. The training data are mostly from August and September 2018 while the test data are mostly from October and November 2018. We are challenged to build a time independent model. Furthermore, there are 80 mostly categorical variables with an average of 1000 categories each. If we naively one hot encode each variable, we would add 80,000 new variables! Therefore we are also challenged to encode data efficiently. In this kernel, we perform EDA, discuss encodings, and build a simple linear logistic model.", "link": "https://www.kaggle.com/cdeotte/time-series-eda-malware-0-64", "tags": ["Exploratory Data Analysis", "Feature Engineering"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "statsmodels"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-01-26 01:06:42", "date_scraped": "2020-12-13 14:13:18", "words": 115, "sentences": 7, "runtime": 0.001, "description_category": "Real Estate, Rental & Leasing", "description_category_score": 0.08796761929988861, "description_category_runtime": 11.026, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.35221460461616516, "description_subcategory_runtime": 17.063, "category": "Real Estate, Rental & Leasing", "category_score": 0.08796761929988861, "subcategory": "Machine Learning", "subcategory_score": 0.35221460461616516, "runtime_cat": 28.09, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.751", "language_code": "en", "language_score": "0.9999975381610909", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "time series eda microsoft malwarefollowing aditya sonis great advice downloaded timestamps microsoft 18 million data observation traincsv testcsv timestamps highlight unique challenge competition training data mostly august september 2018 test data mostly october november 2018 challenged build time independent model furthermore 80 mostly categorical variable average 1000 category naively one hot encode variable would add 80000 new variable therefore also challenged encode data efficiently kernel perform eda discus encoding build simple linear logistic model", "tags_descriptive": ["Exploratory Data Analysis", "Feature Engineering"]}