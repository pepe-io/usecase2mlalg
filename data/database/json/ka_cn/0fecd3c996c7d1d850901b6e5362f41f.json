{"title": "Training Cellular Automata Part II: Learning Tasks", "description": "In my previous notebook we explored how we could use a CNN to create a cellular automata (CA) by recurrently passing the state of the grid through itself. Now we'll solve one of the tasks arseny-n solved with a hard coded CA by learning the CA instead!", "link": "https://www.kaggle.com/teddykoker/training-cellular-automata-part-ii-learning-tasks", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": [], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2020-03-01 17:48:17", "date_scraped": "2020-12-12 16:09:11", "words": 47, "sentences": 2, "runtime": 0.0, "description_category": "Utilities", "description_category_score": 0.3674968481063843, "description_category_runtime": 5.195, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.8484114408493042, "description_subcategory_runtime": 7.71, "category": "Utilities", "category_score": 0.3674968481063843, "subcategory": "Machine Learning", "subcategory_score": 0.8484114408493042, "runtime_cat": 12.906, "programming_language": "Jupyter Notebook", "ml_score": "0.5", "engagement_score": "0.736", "language_code": "en", "language_score": "0.999998844603922", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "previous notebook explored could use cnn create cellular automaton ca recurrently passing state grid well solve one task arsenyn solved hard coded ca learning ca instead", "tags_descriptive": []}