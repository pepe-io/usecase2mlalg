{"title": "Plant Pathology: Very Concise TPU EfficientNet", "description": "About this kernelIn my last TPU kernel for the flower competition, I wrapped the very comprehensive starter kernel to show how to load TFRecords in order to predict flower categories. In this kernel, I want to show the simplest and most barebone way to load png files (instead of TFRecords). In here, I only included the commands you will need to train the model; no bells and whistles included, which means there are no util functions to display the images or preprocess the images, but just enough content for you to quickly understand how tf.data.Dataset works. If you want to dive deeper in the tf.data.Dataset way of building your input pipeline, please check out this tutorial by Martin, which I followed in order to build this kernel. References https://www.kaggle.com/mgornergoogle/getting-started-with-100-flowers-on-tpu https://codelabs.developers.google.com/codelabs/keras-flowers-data/#0", "link": "https://www.kaggle.com/xhlulu/plant-pathology-very-concise-tpu-efficientnet", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "keras", "tensorflow"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2020-04-25 16:47:16", "date_scraped": "2020-12-13 15:33:04", "words": 130, "sentences": 5, "runtime": 0.005, "description_category": "Utilities", "description_category_score": 0.22519053518772125, "description_category_runtime": 15.188, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.8694581985473633, "description_subcategory_runtime": 23.906, "category": "Utilities", "category_score": 0.22519053518772125, "subcategory": "Machine Learning", "subcategory_score": 0.8694581985473633, "runtime_cat": 39.095, "programming_language": "Jupyter Notebook", "ml_score": "0.7", "engagement_score": "0.725", "language_code": "en", "language_score": "0.9999967591309217", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "kernelin last tpu kernel flower competition wrapped comprehensive starter kernel show load tfrecords order predict flower category kernel want show simplest barebone way load png file instead tfrecords included command need train model bell whistle included mean util function display image preprocess image enough content quickly understand tfdatadataset work want dive deeper tfdatadataset way building input pipeline please check tutorial martin followed order build kernel reference httpswwwkagglecommgornergooglegettingstartedwith100flowersontpu httpscodelabsdevelopersgooglecomcodelabskerasflowersdata0", "tags_descriptive": []}