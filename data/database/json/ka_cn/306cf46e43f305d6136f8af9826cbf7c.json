{"title": "Top 10 with First Genetic Algorithm on GPU! ", "description": "Top 10 Position with First Genetic Algorithm on GPU! How I came up with this solution?For the Kaggle Conway's Reverse Game of Life 2020 competition, I tried many approaches and I also wanted to try something new for me: Genetic Algorithm. I looked up existing Kaggle notebooks using Genetic Algorithm, but none of them were using a GPU accelerator (sorry if I am wrong and missed one). It puzzled me as the GPU is faster than the CPU. I told myself \"challenge accepted, let's make a genetic algorithm on the GPU!\". Implementing this genetic algorithm from scratch was tought but I learned a lot in the process about genetic algorithm (first purpose), but also on pytorch and how to optimize using NVIDIA Nsight. ResultsThis solution performed very well during this competition as this present notebook alone scores in the top-10 leaderboard. This new approach helped improving final solution of our team Under a Penny. I noticed the algorithm is running faster on RTX-2080 than Kaggle's P-100, probably thanks to the newer version of tensor-cores. RequirementsAll we need are :  pytorch to implement the Genetic Algorithm on GPU pandas to load and write .csv files  Implementation", "link": "https://www.kaggle.com/ebouteillon/top-10-with-first-genetic-algorithm-on-gpu", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["pytorch"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2020-11-29 23:21:20", "date_scraped": "2020-12-12 17:58:02", "words": 197, "sentences": 9, "runtime": 0.003, "description_category": "Biotechnological & Life Sciences", "description_category_score": 0.3419094681739807, "description_category_runtime": 17.383, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.832602322101593, "description_subcategory_runtime": 27.719, "category": "Biotechnological & Life Sciences", "category_score": 0.3419094681739807, "subcategory": "Machine Learning", "subcategory_score": 0.832602322101593, "runtime_cat": 45.103, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.577", "language_code": "en", "language_score": "0.9999966816978809", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "top 10 position first genetic algorithm gpu came solutionfor kaggle conways reverse game life 2020 competition tried many approach also wanted try something new genetic algorithm looked existing kaggle notebook using genetic algorithm none using gpu accelerator sorry wrong missed one puzzled gpu faster cpu told challenge accepted let make genetic algorithm gpu implementing genetic algorithm scratch tought learned lot process genetic algorithm first purpose also pytorch optimize using nvidia nsight resultsthis solution performed well competition present notebook alone score top10 leaderboard new approach helped improving final solution team penny noticed algorithm running faster rtx2080 kaggles p100 probably thanks newer version tensorcores requirementsall need pytorch implement genetic algorithm gpu panda load write csv file implementation", "tags_descriptive": []}