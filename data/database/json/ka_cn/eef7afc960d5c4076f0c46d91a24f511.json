{"title": "Alaska2 CNN Multiclass Classifier", "description": "In this kernel i build a CNN based multiclass classifier that given an input image predicts which category the image belongs to namely, (No Hidden Message, JMiPOD, JUNIWARD or UERD). The main highlights of the kernel:  Approach the problem as multiclass classification instead of binary class. Proper split for train and validation set and use competition metric proposed here  to get good estimate of model performance on public lb. Illustrate the use of proper augmentation strategy to improve model performance. Using imagenet pretrained EfficientNet B0 as model backbone for the classifier. One Possible way to convert multiclass probabilities to binary. Use test time augmentation to improve lb score.  I have added some comments at each block which further clarifies some of the above mentioned points. Updates: v3:   New way of converting multiclass probabilities to binary (basically take sum of probabilities of JMiPOD, JUNIWARD and UERD). Trained for 5 more epochs.  v4:   Based on some of the discussion, I decided to increase the number of classes. So, now i train a CNN classifier that separates images into one of the following categories [Normal, JMiPOD_75, JMiPOD_90, JMiPOD_95, JUNIWARD_75, JUNIWARD_90, JUNIWARD_95,UERD_75, UERD_90, UERD_95]. v5:    Train for more epochs. v6:    Train for more epochs. Reduced learning rate every 2 epochs by 0.5.   Added CoarseDropout and Cutout. It seems to improve performance.", "link": "https://www.kaggle.com/meaninglesslives/alaska2-cnn-multiclass-classifier", "tags": ["DL", "Classification"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "pytorch", "albumentations"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2020-06-08 13:46:04", "date_scraped": "2020-12-12 16:29:24", "words": 233, "sentences": 17, "sum_nltk": "In this kernel i build a CNN based multiclass classifier that given an input image predicts which category the image belongs to namely, (No Hidden Message, JMiPOD, JUNIWARD or UERD).\nThe main highlights of the kernel:  Approach the problem as multiclass classification instead of binary class.\nProper split for train and validation set and use competition metric proposed here  to get good estimate of model performance on public lb.\nIllustrate the use of proper augmentation strategy to improve model performance.\nUsing imagenet pretrained EfficientNet B0 as model backbone for the classifier.\nOne Possible way to convert multiclass probabilities to binary.\nUse test time augmentation to improve lb score.\nI have added some comments at each block which further clarifies some of the above mentioned points.\nUpdates: v3:   New way of converting multiclass probabilities to binary (basically take sum of probabilities of JMiPOD, JUNIWARD and UERD).\nSo, now i train a CNN classifier that separates images into one of the following categories [Normal, JMiPOD_75, JMiPOD_90, JMiPOD_95, JUNIWARD_75, JUNIWARD_90, JUNIWARD_95,UERD_75, UERD_90, UERD_95].\nv6:    Train for more epochs.\nv6:    Train for more epochs.\nv6:    Train for more epochs.\nAdded CoarseDropout and Cutout.\nIt seems to improve performance.", "sum_nltk_words": 193, "sum_nltk_runtime": 0.003, "sum_t5": "i build a CNN based multiclass classifier that predicts which category an image belongs to. the main highlights of the kernel are: Approach the problem as multiclass classification instead of binary class. i have added some comments at each block which further clarifies some of the above mentioned points. v6: Reduced learning rate every 2 epochs by 0.5. Added CoarseDropout and Cutout. i have added some comments at each block which further clarifies some of", "sum_t5_words": 75, "sum_t5_runtime": 6.488, "runtime": 0.0, "nltk_category": "Media & Publishing", "nltk_category_score": 0.7093273401260376, "nltk_category_runtime": 24.134, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.9870775938034058, "nltk_subcategory_runtime": 38.718, "category": "Media & Publishing", "category_score": 0.7093273401260376, "subcategory": "Machine Learning", "subcategory_score": 0.9870775938034058, "runtime_cat": 62.853, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.752", "language_code": "en", "language_score": "0.9999961830526577", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "kernel build cnn based multiclass classifier given input image predicts category image belongs namely hidden message jmipod juniward uerd main highlight kernel approach problem multiclass classification instead binary class proper split train validation set use competition metric proposed get good estimate model performance public lb illustrate use proper augmentation strategy improve model performance using imagenet pretrained efficientnet b0 model backbone classifier one possible way convert multiclass probability binary use test time augmentation improve lb score added comment block clarifies mentioned point update v3 new way converting multiclass probability binary basically take sum probability jmipod juniward uerd trained 5 epoch v4 based discussion decided increase number class train cnn classifier separate image one following category normal jmipod_75 jmipod_90 jmipod_95 juniward_75 juniward_90 juniward_95uerd_75 uerd_90 uerd_95 v5 train epoch v6 train epoch reduced learning rate every 2 epoch 05 added coarsedropout cutout seems improve performance", "tags_descriptive": ["Deep Learning (DL)", "Classification"]}