{"title": "Bayesian LR w/ Cauchy Prior in PyMC3", "description": "IntroductionThis competition asks us to build a model of k = 300 features with only N = 250 observations. This resembles the situation often faced by scientists in the real world: we have limited observations and many possible explanations. In a normal scientific context, we could use domain knowledge to help navigate this situation: we would likely know something about these variables' meanings, the accuracy with which they are measured, their temporal orderings, or best of all, their causal relationships.  But, here we have a purely data science context. We have no domain knowledge about these features at all, so we have only our data-science tools to help sort out this mess. First, I'll get my environment ready, load the data, and define some custom helper functions.", "link": "https://www.kaggle.com/derekpowll/bayesian-lr-w-cauchy-prior-in-pymc3", "tags": ["Model Comparison", "Exploratory Data Analysis"], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "theano"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-05-01 07:10:05", "date_scraped": "2020-12-12 19:05:08", "words": 128, "sentences": 6, "runtime": 0.003, "description_category": "Real Estate, Rental & Leasing", "description_category_score": 0.15470530092716217, "description_category_runtime": 11.04, "description_subcategory": "Tools", "description_subcategory_score": 0.631361186504364, "description_subcategory_runtime": 17.263, "category": "Real Estate, Rental & Leasing", "category_score": 0.15470530092716217, "subcategory": "Tools", "subcategory_score": 0.631361186504364, "runtime_cat": 28.302, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.679", "language_code": "en", "language_score": "0.9999959320775229", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "introductionthis competition asks u build model k 300 feature n 250 observation resembles situation often faced scientist real world limited observation many possible explanation normal scientific context could use domain knowledge help navigate situation would likely know something variable meaning accuracy measured temporal ordering best causal relationship purely data science context domain knowledge feature datascience tool help sort mess first ill get environment ready load data define custom helper function", "tags_descriptive": ["Model Comparison", "Exploratory Data Analysis"]}