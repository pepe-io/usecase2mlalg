{"title": "Noise analysis of Porto Seguro's features ", "description": "This notebook displays the results of a search for noisy features. This search has been carried out using Light GBM in RandomForest mode (to avoid the hassle of how many rounds fo I need to run ? ) The file noisy_feature_check_results.csv contains the average importances of each feature and their corresponding shadows over 30 runs. Standard deviation of the importances is also available. Shadows are simply shuffled copies of real features. Comparing features to their shadows is an easy way to assess their genuine forecasting power. This is extensively used in Boruta packages (python and R) For information, Python Boruta packages has selected the following features (the rest is considered noise !!!):  ps_ind_01 ps_ind_03 ps_ind_05_cat ps_ind_07_bin ps_ind_15 ps_ind_16_bin ps_reg_01 ps_reg_02 ps_reg_03 ps_car_01_cat ps_car_03_cat ps_car_07_cat ps_car_12 ps_car_13 ps_car_14 ps_car_15  The classifier used for the task is a LGBMClassifier with the following parameters:  boosting_type=\"rf\", num_leaves=1024, max_depth=6, n_estimators=500, subsample=.623, colsample_bytree=.5  Now let's review some results", "link": "https://www.kaggle.com/ogrellier/noise-analysis-of-porto-seguro-s-features", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": [], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2017-10-23 20:05:32", "date_scraped": "2020-12-13 15:44:39", "words": 156, "sentences": 6, "runtime": 0.003, "description_category": "Finance", "description_category_score": 0.34771427512168884, "description_category_runtime": 20.44, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9517037868499756, "description_subcategory_runtime": 33.186, "category": "Finance", "category_score": 0.34771427512168884, "subcategory": "Machine Learning", "subcategory_score": 0.9517037868499756, "runtime_cat": 53.629, "programming_language": "Jupyter Notebook", "ml_score": "0.5", "engagement_score": "0.748", "language_code": "en", "language_score": "0.9999966815606883", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "notebook display result search noisy feature search carried using light gbm randomforest mode avoid hassle many round fo need run file noisy_feature_check_resultscsv contains average importance feature corresponding shadow 30 run standard deviation importance also available shadow simply shuffled copy real feature comparing feature shadow easy way ass genuine forecasting power extensively used boruta package python r information python boruta package selected following feature rest considered noise ps_ind_01 ps_ind_03 ps_ind_05_cat ps_ind_07_bin ps_ind_15 ps_ind_16_bin ps_reg_01 ps_reg_02 ps_reg_03 ps_car_01_cat ps_car_03_cat ps_car_07_cat ps_car_12 ps_car_13 ps_car_14 ps_car_15 classifier used task lgbmclassifier following parameter boosting_typerf num_leaves1024 max_depth6 n_estimators500 subsample623 colsample_bytree5 let review result", "tags_descriptive": []}