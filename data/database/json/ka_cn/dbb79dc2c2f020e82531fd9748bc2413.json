{"title": "PyMC3 Starter", "description": "PyMC3 StarterThis notebook is intended to show how a simple but effective model might be fit with PyMC3.  We will model the \"strength\" of team as being normally distributed around 0, and assume that each game the probability of a team winning is the (logit of the) difference of the strengths. Specifically, if team i has strength ti, then the chance of beating team j is p(outcomei,j=1)\u223cBernoulli(p=11+exp(ti\u2212tj)). The maximum likelihood estimator of this model would be 1-hot encoding all the teams and fitting logistic regression to it.  This would likely be overfit.  By using PyMC3, we will also get uncertainty bounds on the strength of each team, so we can optimize to some other fitness function if we want.", "link": "https://www.kaggle.com/colincarroll/pymc3-starter", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["theano"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2018-03-02 17:51:11", "date_scraped": "2020-12-13 18:26:55", "words": 122, "sentences": 6, "runtime": 0.002, "description_category": "Finance", "description_category_score": 0.22081612050533295, "description_category_runtime": 12.551, "description_subcategory": "Physical", "description_subcategory_score": 0.27946606278419495, "description_subcategory_runtime": 19.347, "category": "Finance", "category_score": 0.22081612050533295, "subcategory": "Physical", "subcategory_score": 0.27946606278419495, "runtime_cat": 31.899, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.65", "language_code": "en", "language_score": "0.9999971973964362", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "pymc3 starterthis notebook intended show simple effective model might fit pymc3 model strength team normally distributed around 0 assume game probability team winning logit difference strength specifically team strength ti chance beating team j poutcomeij1bernoullip11exptitj maximum likelihood estimator model would 1hot encoding team fitting logistic regression would likely overfit using pymc3 also get uncertainty bound strength team optimize fitness function want", "tags_descriptive": []}