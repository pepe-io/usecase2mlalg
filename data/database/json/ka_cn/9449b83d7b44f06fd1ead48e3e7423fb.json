{"title": "Two Sigma News Official Getting Started Kernel", "description": "August 2019 Update: this competition is closed and is no longer accepting submissions. Thanks for participating!  Two Sigma Financial News Competition Official Getting Started KernelIntroductionIn this competition you will predict how stocks will change based on the market state and news articles.  You will loop through a long series of trading days; for each day, you'll receive an updated state of the market, and a series of news articles which were published since the last trading day, along with impacted stocks and sentiment analysis.  You'll use this information to predict whether each stock will have increased or decreased ten trading days into the future.  Once you make these predictions, you can move on to the next trading day. This competition is different from most Kaggle Competitions in that:  You can only submit from Kaggle Kernels, and you may not use other data sources, GPU, or internet access. This is a two-stage competition.  In Stage One you can edit your Kernels and improve your model, where Public Leaderboard scores are based on their predictions relative to past market data.  At the beginning of Stage Two, your Kernels are locked, and we will re-run your Kernels over the next six months, scoring them based on their predictions relative to live data as those six months unfold. You must use our custom kaggle.competitions.twosigmanews Python module.  The purpose of this module is to control the flow of information to ensure that you are not using future data to make predictions for the current trading day.  In this Starter Kernel, we'll show how to use the twosigmanews module to get the training data, get test features and make predictions, and write the submission file.TL;DR: End-to-End Usage Example from kaggle.competitions import twosigmanews env = twosigmanews.make_env()  (market_train_df, news_train_df) = env.get_training_data() train_my_model(market_train_df, news_train_df)  for (market_obs_df, news_obs_df, predictions_template_df) in env.get_prediction_days():   predictions_df = make_my_predictions(market_obs_df, news_obs_df, predictions_template_df)   env.predict(predictions_df)  env.write_submission_file() Note that train_my_model and make_my_predictions are functions you need to write for the above example to work.", "link": "https://www.kaggle.com/dster/two-sigma-news-official-getting-started-kernel", "tags": ["Finance"], "kind": ["Project", "(Notebook)"], "ml_libs": [], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2018-10-03 21:41:20", "date_scraped": "2020-12-13 18:02:27", "words": 341, "sentences": 12, "sum_nltk": "Two Sigma Financial News Competition Official Getting Started KernelIntroductionIn this competition you will predict how stocks will change based on the market state and news articles.\nYou will loop through a long series of trading days; for each day, you'll receive an updated state of the market, and a series of news articles which were published since the last trading day, along with impacted stocks and sentiment analysis.\nYou'll use this information to predict whether each stock will have increased or decreased ten trading days into the future.\nIn Stage One you can edit your Kernels and improve your model, where Public Leaderboard scores are based on their predictions relative to past market data.\nAt the beginning of Stage Two, your Kernels are locked, and we will re-run your Kernels over the next six months, scoring them based on their predictions relative to live data as those six months unfold.\nYou must use our custom kaggle.competitions.twosigmanews Python module.\nThe purpose of this module is to control the flow of information to ensure that you are not using future data to make predictions for the current trading day.", "sum_nltk_words": 181, "sum_nltk_runtime": 0.004, "sum_t5": "two Sigma Financial News Competition is no longer accepting submissions. you will loop through a long series of trading days. you'll receive an updated state of the market, and a series of news articles published since the last trading day. you'll use this information to predict whether each stock will have increased or decreased ten trading days into the future. you may not use other data sources, GPU, or internet access. a kaggle-based module is used to control the flow of information.", "sum_t5_words": 82, "sum_t5_runtime": 6.832, "runtime": 0.005, "nltk_category": "Finance", "nltk_category_score": 0.7351673245429993, "nltk_category_runtime": 15.84, "nltk_subcategory": "Tools", "nltk_subcategory_score": 0.5503112077713013, "nltk_subcategory_runtime": 25.274, "category": "Finance", "category_score": 0.7351673245429993, "subcategory": "Tools", "subcategory_score": 0.5503112077713013, "runtime_cat": 41.114, "programming_language": "Jupyter Notebook", "ml_score": "0.5", "engagement_score": "0.834", "language_code": "en", "language_score": "0.9999965919107376", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "august 2019 update competition closed longer accepting submission thanks participating two sigma financial news competition official getting started kernelintroductionin competition predict stock change based market state news article loop long series trading day day youll receive updated state market series news article published since last trading day along impacted stock sentiment analysis youll use information predict whether stock increased decreased ten trading day future make prediction move next trading day competition different kaggle competition submit kaggle kernel may use data source gpu internet access twostage competition stage one edit kernel improve model public leaderboard score based prediction relative past market data beginning stage two kernel locked rerun kernel next six month scoring based prediction relative live data six month unfold must use custom kagglecompetitionstwosigmanews python module purpose module control flow information ensure using future data make prediction current trading day starter kernel well show use twosigmanews module get training data get test feature make prediction write submission filetldr endtoend usage example kagglecompetitions import twosigmanews env twosigmanewsmake_env market_train_df news_train_df envget_training_data train_my_modelmarket_train_df news_train_df market_obs_df news_obs_df predictions_template_df envget_prediction_days predictions_df make_my_predictionsmarket_obs_df news_obs_df predictions_template_df envpredictpredictions_df envwrite_submission_file note train_my_model make_my_predictions function need write example work", "tags_descriptive": ["Finance"]}