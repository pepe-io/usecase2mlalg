{"title": "FeatureEngineering + training with weights", "description": "Contents and goalsThis kernel shows how to:  retreave the data; preprocess the data (transforming One-Hot Encoding into Label Encoding); visualise of the data in 1, 2 and 3 dimentions; engineer new features inspired by the visualisation done in the previous step; use proportion of target classes in the test data in the training and model evaluation to improve consistency between local CV and LB. This is extremely important, as it brings the class mixture in agreemnet between available training and submission datasets, thus making local performance evaluation meaningful. Many kernels in the comp either do not have model performance evaluation, or do it without weights, which leads to a gap between local and LB scores. build various models on the train/test spit of the data and evaluate their performance. Hyper-parameters of the models are optimised in a dedicated kernel:  https://www.kaggle.com/mlisovyi/hyper-parameter-optimisation; build voting classifiers and evaluated their performance in a nested cross-validation (CV); prepare submissions Note, that the proportion of the different classes in test is: 0.37053 : 0.49681 : 0.05936 : 0.00103 : 0.01295 : 0.02687 : 0.03242, as is discussed in https://www.kaggle.com/mlisovyi/class-fractions-in-the-test", "link": "https://www.kaggle.com/mlisovyi/featureengineering-training-with-weights", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "lightgbm"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2018-09-11 23:28:20", "date_scraped": "2020-12-12 19:58:02", "words": 185, "sentences": 5, "runtime": 0.002, "description_category": "Real Estate, Rental & Leasing", "description_category_score": 0.20212259888648987, "description_category_runtime": 20.264, "description_subcategory": "Quality", "description_subcategory_score": 0.2201995849609375, "description_subcategory_runtime": 32.768, "category": "Real Estate, Rental & Leasing", "category_score": 0.20212259888648987, "subcategory": "Quality", "subcategory_score": 0.2201995849609375, "runtime_cat": 53.032, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.666", "language_code": "en", "language_score": "0.9999965381766405", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "content goalsthis kernel show retreave data preprocess data transforming onehot encoding label encoding visualise data 1 2 3 dimentions engineer new feature inspired visualisation done previous step use proportion target class test data training model evaluation improve consistency local cv lb extremely important brings class mixture agreemnet available training submission datasets thus making local performance evaluation meaningful many kernel comp either model performance evaluation without weight lead gap local lb score build various model traintest spit data evaluate performance hyperparameters model optimised dedicated kernel httpswwwkagglecommlisovyihyperparameteroptimisation build voting classifier evaluated performance nested crossvalidation cv prepare submission note proportion different class test 037053 049681 005936 000103 001295 002687 003242 discussed httpswwwkagglecommlisovyiclassfractionsinthetest", "tags_descriptive": []}