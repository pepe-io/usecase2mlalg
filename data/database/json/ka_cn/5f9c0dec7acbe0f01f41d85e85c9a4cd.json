{"title": "Baseline object detection tf faster rcnn pub", "description": "Base line model to show how to use tf with Object detection API for inference on the open images datasetOverviewThis is my very first Kaggle kernel! So happy.... This kernel is a proof of concept for using the tf object detection api on the data. I have noticed that many people are detered by Kaggle inability to access the outside world (like colab) so they are not using pre-trained models. The way to do that is to upload the pre trained models as private dataset. In this case I used the goodle trained model from their zoo. It is exptremely slow (44 seconds per image) so on the test set would take.... would take... mmmm very long time. Data used in this kernelLabels for the open images dataset from https://github.com/tensorflow/models/blob/master/research/object_detection/data/oid_bbox_trainable_label_map.pbtxt) Models from: http://download.tensorflow.org/models/object_detection/faster_rcnn_inception_resnet_v2_atrous_oid_14_10_2017.tar.gz http://download.tensorflow.org/models/object_detection/faster_rcnn_inception_resnet_v2_atrous_oid_2018_01_28.tar.gz (I thought there were problems with the newer model but it turned out to be my mistake. The 2017 model is frcnn.pb, the 2018 is frcnn2.pb) I have also uploaded the tf models git as a dataset but haven't played with it directly. The model is faster rcnn with inception v2 as base. It is a very slow process but you can see how it performs on the leaderboard (with few tweaks) currently number 4", "link": "https://www.kaggle.com/moshel/baseline-object-detection-tf-faster-rcnn-pub", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["tensorflow"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2018-07-09 08:34:15", "date_scraped": "2020-12-12 20:15:53", "words": 209, "sentences": 12, "sum_nltk": "Base line model to show how to use tf with Object detection API for inference on the open images datasetOverviewThis is my very first Kaggle kernel!\nThis kernel is a proof of concept for using the tf object detection api on the data.\nI have noticed that many people are detered by Kaggle inability to access the outside world (like colab) so they are not using pre-trained models.\nThe way to do that is to upload the pre trained models as private dataset.\nIn this case I used the goodle trained model from their zoo.\nIt is exptremely slow (44 seconds per image) so on the test set would take....\nData used in this kernelLabels for the open images dataset from https://github.com/tensorflow/models/blob/master/research/object_detection/data/oid_bbox_trainable_label_map.pbtxt) Models from: http://download.tensorflow.org/models/object_detection/faster_rcnn_inception_resnet_v2_atrous_oid_14_10_2017.tar.gz http://download.tensorflow.org/models/object_detection/faster_rcnn_inception_resnet_v2_atrous_oid_2018_01_28.tar.gz (I thought there were problems with the newer model but it turned out to be my mistake.\nThe 2017 model is frcnn.pb, the 2018 is frcnn2.pb) I have also uploaded the tf models git as a dataset but haven't played with it directly.\nThe model is faster rcnn with inception v2 as base.\nIt is a very slow process but you can see how it performs on the leaderboard (with few tweaks) currently number 4", "sum_nltk_words": 192, "sum_nltk_runtime": 0.002, "sum_t5": "tf kernel is a proof of concept for using the tf object detection api on the open images dataset. tf is a very slow process but you can see how it performs on the leaderboard (with few tweaks) currently number 4 is rcnn with inception v2 as base. tf kernel is a github repository for a dataset to test. tf kernel is available for free on github.", "sum_t5_words": 67, "sum_t5_runtime": 6.325, "runtime": 0.0, "nltk_category": "Emergency & Relief", "nltk_category_score": 0.3489965796470642, "nltk_category_runtime": 26.958, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.9924333691596985, "nltk_subcategory_runtime": 42.787, "category": "Emergency & Relief", "category_score": 0.3489965796470642, "subcategory": "Machine Learning", "subcategory_score": 0.9924333691596985, "runtime_cat": 69.746, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.715", "language_code": "en", "language_score": "0.9999951849412758", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "base line model show use tf object detection api inference open image datasetoverviewthis first kaggle kernel happy kernel proof concept using tf object detection api data noticed many people detered kaggle inability access outside world like colab using pretrained model way upload pre trained model private dataset case used goodle trained model zoo exptremely slow 44 second per image test set would take would take mmmm long time data used kernellabels open image dataset httpsgithubcomtensorflowmodelsblobmasterresearchobject_detectiondataoid_bbox_trainable_label_mappbtxt model httpdownloadtensorfloworgmodelsobject_detectionfaster_rcnn_inception_resnet_v2_atrous_oid_14_10_2017targz httpdownloadtensorfloworgmodelsobject_detectionfaster_rcnn_inception_resnet_v2_atrous_oid_2018_01_28targz thought problem newer model turned mistake 2017 model frcnnpb 2018 frcnn2pb also uploaded tf model git dataset havent played directly model faster rcnn inception v2 base slow process see performs leaderboard tweak currently number 4", "tags_descriptive": []}