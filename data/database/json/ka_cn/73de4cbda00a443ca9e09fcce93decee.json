{"title": "Intro to TF Hub for Object Detection", "description": "Introduction to Tensorflow Hub for Object Detection (with SSD+MobileNetV2)The purpose of this kernel is to walk you through the process of downloading a pre-trained TF model from the Tensorflow Hub, building a Tensorflow graph and performing off-the-shelf predictions. This kernel is a fork of the excellent baseline kernel by Vikram, but differs on those points:  We will be using MobileNet v2 instead of Inception-ResNet. This means that the inference will be faster*, but the accuracy ends up worse. This will focus on understanding how Tensorflow works, rather than providing a boilerplate. For a simple solution, please check out this tutorial, which is what Vikram's kernel was inspired from.  * Each image takes roughly 0.2s to process, whereas Inception-ResNet takes around 1.2s. Changelog V6: As pointed out by Nicolas in his kernel and in this discussion thread, the coordinates are inverted between the Kaggle competition and the original TF Hub graph. This version corrects this problem. Please go give them an upvote; this is a really good catch from them!  References Vikram's Original Kernel: https://www.kaggle.com/vikramtiwari/baseline-predictions-using-inception-resnet-v2 TFHub Demo: https://colab.research.google.com/github/tensorflow/hub/blob/master/examples/colab/object_detection.ipynb TFHub Model link: https://tfhub.dev/google/openimages_v4/ssd/mobilenet_v2/1 Discussion on inveted BBox: https://www.kaggle.com/c/open-images-2019-object-detection/discussion/98205 Corrected BBox: https://www.kaggle.com/nhlr21/tf-hub-bounding-boxes-coordinates-corrected/notebook", "link": "https://www.kaggle.com/jian1201/intro-to-tf-hub-for-object-detection", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["tensorflow"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-08-17 07:20:18", "date_scraped": "2020-12-13 14:41:47", "words": 192, "sentences": 9, "runtime": 0.003, "description_category": "Utilities", "description_category_score": 0.16341331601142883, "description_category_runtime": 29.606, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9766103625297546, "description_subcategory_runtime": 48.426, "category": "Utilities", "category_score": 0.16341331601142883, "subcategory": "Machine Learning", "subcategory_score": 0.9766103625297546, "runtime_cat": 78.032, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.573", "language_code": "en", "language_score": "0.9999968891908557", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "introduction tensorflow hub object detection ssdmobilenetv2the purpose kernel walk process downloading pretrained tf model tensorflow hub building tensorflow graph performing offtheshelf prediction kernel fork excellent baseline kernel vikram differs point using mobilenet v2 instead inceptionresnet mean inference faster accuracy end worse focus understanding tensorflow work rather providing boilerplate simple solution please check tutorial vikrams kernel inspired image take roughly 02s process whereas inceptionresnet take around 12 changelog v6 pointed nicolas kernel discussion thread coordinate inverted kaggle competition original tf hub graph version corrects problem please go give upvote really good catch reference vikrams original kernel httpswwwkagglecomvikramtiwaribaselinepredictionsusinginceptionresnetv2 tfhub demo httpscolabresearchgooglecomgithubtensorflowhubblobmasterexamplescolabobject_detectionipynb tfhub model link httpstfhubdevgoogleopenimages_v4ssdmobilenet_v21 discussion inveted bbox httpswwwkagglecomcopenimages2019objectdetectiondiscussion98205 corrected bbox httpswwwkagglecomnhlr21tfhubboundingboxescoordinatescorrectednotebook", "tags_descriptive": []}