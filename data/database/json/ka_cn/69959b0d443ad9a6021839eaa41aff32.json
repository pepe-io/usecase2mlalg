{"title": "Cracking the code: difficulty 2", "description": "Notebook structureThis kernel explains how to crack the cipher algorithm of difficulty level 2. It also describes the plan of attack for further difficulty levels. Plan of attackBased on the competition description, a \"Cipher in the middle\" based attack approach was constructed (shown in the figure below). To find, for example, the cipher 2 encryption algorithm, we will need a cipher 1 texts (generated from a known plain text) and compare it with the corresponding cipher 2. Therefore, it will be necessary to get both the encryption and decryption algorithms for all algorithms.  Two subproblems have to be solved before cracking this code:  We will have to find both the encryption and decryption for the previous difficulty level (resued from Cracking the code: difficulty 1) We must search (in each difficulty level) for one text matching the Ciphertext in order to execute a known-plaintext attack  Reading in our data.All text files are stored in a pandas dataframe. We will store the length in a column as well. Which will turn out to be useful.", "link": "https://www.kaggle.com/bsteenwi/cracking-the-code-difficulty-2", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": [], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-04-09 14:27:13", "date_scraped": "2020-12-12 17:55:04", "words": 177, "sentences": 8, "runtime": 0.01, "description_category": "Utilities", "description_category_score": 0.24273891746997833, "description_category_runtime": 15.153, "description_subcategory": "Quality", "description_subcategory_score": 0.36685389280319214, "description_subcategory_runtime": 24.038, "category": "Utilities", "category_score": 0.24273891746997833, "subcategory": "Quality", "subcategory_score": 0.36685389280319214, "runtime_cat": 39.192, "programming_language": "Jupyter Notebook", "ml_score": "0.5", "engagement_score": "0.637", "language_code": "en", "language_score": "0.9999976092259106", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "notebook structurethis kernel explains crack cipher algorithm difficulty level 2 also describes plan attack difficulty level plan attackbased competition description cipher middle based attack approach constructed shown figure find example cipher 2 encryption algorithm need cipher 1 text generated known plain text compare corresponding cipher 2 therefore necessary get encryption decryption algorithm algorithm two subproblems solved cracking code find encryption decryption previous difficulty level resued cracking code difficulty 1 must search difficulty level one text matching ciphertext order execute knownplaintext attack reading dataall text file stored panda dataframe store length column well turn useful", "tags_descriptive": []}