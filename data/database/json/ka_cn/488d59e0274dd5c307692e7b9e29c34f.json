{"title": "hc-2019q-eda-and-baseline-soln", "description": "Please refer to the problem statement for the full elaboration of the problem. To summarise the problem statement:  You are given a list photos. Each photo is either \"horizontal\" or \"vertical\". Each photo has a list of tags. If the photo is vertical, you will need to merge it with another vertical photo to form a combined photo. The combined photo will contain all the tags from both photos. You will need to provide a sequence of combined and horizontal photos to that maximises the score of your solution. The score of your solution is the sum of scores between all pairs of neighbours in your produced sequence. The score between neighbouring combined/horizontal photos is the minimum of  tags found in both neighbours tags found only in the first neighbour tags found only in the second neighbour    In this notebook, I present a baseline solution that only takes in information of the tag length and not the tags, along with some data analysis and visualisations. This should be sufficient for you to write an algorithm that is improved from this baseline.", "link": "https://www.kaggle.com/huikang/hc-2019q-eda-and-baseline-soln", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": [], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2020-05-31 12:25:50", "date_scraped": "2020-12-12 20:40:57", "words": 186, "sentences": 10, "runtime": 0.005, "description_category": "Construction & Engineering", "description_category_score": 0.1261150985956192, "description_category_runtime": 14.651, "description_subcategory": "Restaurant", "description_subcategory_score": 0.1813260167837143, "description_subcategory_runtime": 23.424, "category": "Construction & Engineering", "category_score": 0.1261150985956192, "subcategory": "Restaurant", "subcategory_score": 0.1813260167837143, "runtime_cat": 38.075, "programming_language": "Jupyter Notebook", "ml_score": "0.5", "engagement_score": "0.634", "language_code": "en", "language_score": "0.9999964511220489", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "please refer problem statement full elaboration problem summarise problem statement given list photo photo either horizontal vertical photo list tag photo vertical need merge another vertical photo form combined photo combined photo contain tag photo need provide sequence combined horizontal photo maximises score solution score solution sum score pair neighbour produced sequence score neighbouring combinedhorizontal photo minimum tag found neighbour tag found first neighbour tag found second neighbour notebook present baseline solution take information tag length tag along data analysis visualisation sufficient write algorithm improved baseline", "tags_descriptive": []}