{"title": "RSNA IH Detection Baseline", "description": "Hey Kaggler!This is part 2 of my eda-baseline exploration of the intracranial hemorrhage detection competition. It covers the implementation of preprocessing and data loading as well as the modelling part. Just jump into it! :-)  If you like to more about dicom, go back to the first part: https://www.kaggle.com/allunia/rsna-ih-detection-eda Table of contents Prepare to start Building up the bruteforce model Image preprocessing Custom Dataloader Preparing the dataframe Exploring train and test images Building up the brutforce model Speeding up & dealing with class imbalance Validation strategy Let it run! :-)   Building up the any-subtype network The custom loss A two output layer network", "link": "https://www.kaggle.com/allunia/rsna-ih-detection-baseline", "tags": [], "kind": ["Project", "(Notebook)"], "ml_libs": ["sklearn", "keras", "tensorflow", "skimage"], "host": "kaggle.com", "license": "Apache-2.0", "language": "english", "date_project": "2019-10-26 11:01:42", "date_scraped": "2020-12-13 16:47:30", "words": 106, "sentences": 3, "runtime": 0.0, "description_category": "Healthcare", "description_category_score": 0.20042742788791656, "description_category_runtime": 11.766, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.613293468952179, "description_subcategory_runtime": 18.219, "category": "Healthcare", "category_score": 0.20042742788791656, "subcategory": "Machine Learning", "subcategory_score": 0.613293468952179, "runtime_cat": 29.985, "programming_language": "Jupyter Notebook", "ml_score": "1.0", "engagement_score": "0.749", "language_code": "en", "language_score": "0.999995618090494", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "hey kagglerthis part 2 edabaseline exploration intracranial hemorrhage detection competition cover implementation preprocessing data loading well modelling part jump like dicom go back first part httpswwwkagglecomalluniarsnaihdetectioneda table content prepare start building bruteforce model image preprocessing custom dataloader preparing dataframe exploring train test image building brutforce model speeding dealing class imbalance validation strategy let run building anysubtype network custom loss two output layer network", "tags_descriptive": []}