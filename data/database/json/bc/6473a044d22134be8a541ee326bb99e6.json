{"title": "Detection PyTorch Notebook", "description": "\u00c3\u00a4\u00c2\u00bb\u00c2\u00a3\u00c3\u00a7\u00c2\u00a0\u00c2\u0081 -\u00c3\u00a3\u00c2\u0080\u00c2\u008a\u00c3\u00a6\u00c2\u00b7\u00c2\u00b1\u00c3\u00a5\u00c2\u00ba\u00c2\u00a6\u00c3\u00a5\u00c2\u00ad\u00c2\u00a6\u00c3\u00a4\u00c2\u00b9\u00c2\u00a0\u00c3\u00a4\u00c2\u00b9\u00c2\u008bPyTorch\u00c3\u00a7\u00c2\u0089\u00c2\u00a9\u00c3\u00a4\u00c2\u00bd\u00c2\u0093\u00c3\u00a6\u00c2\u00a3\u00c2\u0080\u00c3\u00a6\u00c2\u00b5\u00c2\u008b\u00c3\u00a5\u00c2\u00ae\u00c2\u009e\u00c3\u00a6\u00c2\u0088\u00c2\u0098\u00c3\u00a3\u00c2\u0080\u00c2\u008b", "link": "https://github.com/dongdonghy/Detection-PyTorch-Notebook", "category": "Physics", "category_score": 0, "subcategory": "Preventative and Reactive", "subcategory_score": 0, "tags": ["CNN", "CV", "Classification", "Object Detection", "RL", "ReLu", "Regression", "ResNet", "VGG"], "kind": "Project", "ml_libs": ["caffe", "detectron", "imutils", "py-faster-rcnn", "pytorch", "skimage", "tensorflow"], "host": "github.com", "license": "", "language": "vietnamese", "date_project": "2020-08-14 05:05:13", "date_scraped": "2020-12-20 09:50:44", "words": 2, "sentences": 1, "runtime": 0.001, "description_category": "Physics", "description_category_score": 0.031045394018292427, "description_category_runtime": 9.189, "description_subcategory": "Preventative and Reactive", "description_subcategory_score": 0.6220113635063171, "description_subcategory_runtime": 14.001, "runtime_cat": 23.189, "programming_language": "Python", "ml_score": "1.0", "engagement_score": "0.592", "language_code": "vi", "language_score": "0.9999970959233114", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "aaaaa aaaaaaaaoaaaaaa1a aa1apytorchaaaaa12aaaaaaaaaaaaaaaa", "tags_descriptive": ["Convolutional Neural Network (CNN)", "Computer Vision (CV)", "Classification", "Object Detection", "Reinforcement Learning (RL)", "Rectified Linear Unit (ReLU)", "Regression", "ResNet", "VGG"]}