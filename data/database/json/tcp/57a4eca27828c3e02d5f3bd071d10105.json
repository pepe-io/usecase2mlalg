{"title": "Book Recommendation System with Machine Learning", "description": "Recommendation systems are among the most popular applications of data science. They are used to predict the\u00a0Rating\u00a0or\u00a0Preference\u00a0that a user would give to an item.Almost every major company has applied them in some form or the other:\u00a0Amazon\u00a0uses it to suggest products to customers,\u00a0YouTube\u00a0uses it to decide which video to play next on auto play, and\u00a0Facebook\u00a0uses it to recommend pages to like and people to follow.In this Data Science project, you will see how to build a Book Recommendation System model using Machine Learning Techniques.You can download the data sets we need for this task from here:Let\u2019s start with this project#Output(1149780, 3)[\u2018userID\u2019, \u2018ISBN\u2019, \u2018bookRating\u2019]#Output(271360, 8)[\u2018ISBN\u2019, \u2018bookTitle\u2019, \u2018bookAuthor\u2019, \u2018yearOfPublication\u2019, \u2018publisher\u2019, \u2018imageUrlS\u2019, \u2018imageUrlM\u2019, \u2018imageUrlL\u2019]#Output(278858, 3)[\u2018userID\u2019, \u2018Location\u2019, \u2018Age\u2019]To ensure statistical significance, users with less than 200 ratings, and books with less than 100 ratings are excluded.kNN is a machine learning algorithm to find clusters of similar users based on common book ratings, and make predictions using the average rating of top-k nearest neighbors. For example, we first present ratings in a matrix with the matrix having one row for each item (book) and one column for each user.Now we will group by book titles and create a new column for total rating count.Now we will combine the rating data with the total rating count data, this gives us exactly what we need to find out which books are popular and filter out lesser-known books.We convert our table to a 2D matrix, and fill the missing values with zeros (since we will calculate distances between rating vectors). We then transform the values(ratings) of the matrix dataframe into a scipy sparse matrix for more efficient calculations.", "link": "https://thecleverprogrammer.com/2020/05/23/data-science-project-book-recommendation-system-with-machine-learning/", "tags": ["KNN", "Recommender"], "kind": "Project", "ml_libs": ["sklearn"], "host": "thecleverprogrammer.com", "language": "english", "date_project": "2020-05-23 13:03:44", "date_scraped": "2020-12-20 00:00:00", "words": 269, "sentences": 4, "sum_nltk": "Recommendation systems are among the most popular applications of data science.\nThey are used to predict the\u00a0Rating\u00a0or\u00a0Preference\u00a0that a user would give to an item.Almost every major company has applied them in some form or the other:\u00a0Amazon\u00a0uses it to suggest products to customers,\u00a0YouTube\u00a0uses it to decide which video to play next on auto play, and\u00a0Facebook\u00a0uses it to recommend pages to like and people to follow.In this Data Science project, you will see how to build a Book Recommendation System model using Machine Learning Techniques.You can download the data sets we need for this task from here:Let\u2019s start with this project#Output(1149780, 3)[\u2018userID\u2019, \u2018ISBN\u2019, \u2018bookRating\u2019]#Output(271360, 8)[\u2018ISBN\u2019, \u2018bookTitle\u2019, \u2018bookAuthor\u2019, \u2018yearOfPublication\u2019, \u2018publisher\u2019, \u2018imageUrlS\u2019, \u2018imageUrlM\u2019, \u2018imageUrlL\u2019]#Output(278858, 3)[\u2018userID\u2019, \u2018Location\u2019, \u2018Age\u2019]To ensure statistical significance, users with less than 200 ratings, and books with less than 100 ratings are excluded.kNN is a machine learning algorithm to find clusters of similar users based on common book ratings, and make predictions using the average rating of top-k nearest neighbors.\nFor example, we first present ratings in a matrix with the matrix having one row for each item (book) and one column for each user.Now we will group by book titles and create a new column for total rating count.Now we will combine the rating data with the total rating count data, this gives us exactly what we need to find out which books are popular and filter out lesser-known books.We convert our table to a 2D matrix, and fill the missing values with zeros (since we will calculate distances between rating vectors).", "sum_nltk_words": 249, "sum_nltk_runtime": 0.003, "sum_t5": "kNN is a machine learning algorithm to find clusters of similar users based on common book ratings. it can then make predictions using the average rating of top-k nearest neighbors. this data science project will show how to build a book recommendation system model using machine learning techniques. kNN is a machine learning algorithm to find clusters of similar users based on common book ratings. it will then combine the rating data with the total rating count data.", "sum_t5_words": 78, "sum_t5_runtime": 6.199, "runtime": 0.002, "nltk_category": "Media & Publishing", "nltk_category_score": 0.1371069997549057, "nltk_category_runtime": 30.936, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.8991432785987854, "nltk_subcategory_runtime": 48.83, "category": "Media & Publishing", "category_score": 0.1371069997549057, "subcategory": "Machine Learning", "subcategory_score": 0.8991432785987854, "runtime_cat": 79.766, "programming_language": "Python", "ml_score": "1.0", "language_code": "en", "language_score": "0.9999951548050177", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "recommendation system among popular application data science used predict rating preference user would give itemalmost every major company applied form amazon us suggest product customer youtube us decide video play next auto play facebook us recommend page like people followin data science project see build book recommendation system model using machine learning techniquesyou download data set need task herelets start projectoutput1149780 3userid isbn bookratingoutput271360 8isbn booktitle bookauthor yearofpublication publisher imageurls imageurlm imageurlloutput278858 3userid location ageto ensure statistical significance user le 200 rating book le 100 rating excludedknn machine learning algorithm find cluster similar user based common book rating make prediction using average rating topk nearest neighbor example first present rating matrix matrix one row item book one column usernow group book title create new column total rating countnow combine rating data total rating count data give u exactly need find book popular filter lesserknown bookswe convert table 2d matrix fill missing value zero since calculate distance rating vector transform valuesratings matrix dataframe scipy sparse matrix efficient calculation", "tags_descriptive": ["k-nearest neighbors (KNN)", "Recommender"]}