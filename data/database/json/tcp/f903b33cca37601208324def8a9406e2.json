{"title": "Logistic Regression in Machine Learning with Python", "description": "One of the best things about the scikit-learn library in python is that it provides four steps modeling patterns that make it easy for the programmer to train a machine learning classifier. In this article, I will use Logistic Regression with python, to classify the digits which are based on images. After preparing our machine learning model with this logistic regression, we can use it to predict an image labeled with the numbers.The scikit-learn library comes with a preloaded digits dataset. That means we need to load the digits dataset, and we are not required to download any dataset for this classification. Now let\u2019s load our dataset.Now let\u2019s look at some insights from the dataset.Now let\u2019s see what our data contains, I will visualize the images and labels present in the dataset, to know what I need to work with.Now I will split the data into 75 percent training and 25 percent testing sets. The need to break the data into training and testing sets is to ensure that our classification model can fit properly in the new data.Step one is the import the model that we want to use, As this article is based on the logistic regression so, I will import the logistic regression model from the scikit-learn library in python.Step two is to create an instance of the model, which means that we need to store the Logistic Regression model into a variable.Step three will be to train the model. For this, we need the fit the data into our Logistic Regression model.Step four is to predict the labels for the new data,In this step, we need to use the information that we learned while training the model.I will measure the Accuracy of our trained Logistic Regressing Model, where Accuracy is defined as the fraction of correct predictions, which is correct predictions/total number of data points.So our Accuracy gives the output as 95.3 percent, which is generally appreciated.Confusion Matrix is the table used in describing the performance of a Classifier that we have trained using the dataset. Here I will use Matplotlib and Seaborn in python to describe the performance of our trained model.Now let\u2019s visualize our performance using the confusion matrix. First, I will visualize the confusion matrix using the Seaborn library in python.Now let\u2019s visualize our Logistic Regression model\u2019s performance with the confusion matrix using the matplotlib library in python.The Logistic Regression model that you saw above was you give you an idea of how this classifier works with python to train a machine learning model. Now let\u2019s prepare a Logistic Regression model for a real-world example using more significant data to fit our model.Now after loading the MNIST dataset, let\u2019s see some insights into the data.In the output, you will see 70000 images and 70000 labels in this dataset, which sounds very challenging for a real-world problem.Now let\u2019s split the data into training and testing sets. Here I will break the dataset into 60000 images as a training set and 10000 images as a testing set.As I told you earlier, that we need to look at the data before moving forward to see what we need to work with. Here I will visualize the data using the matplotlib library in python.Now let\u2019s follow the scikit-learn\u2019s modeling pattern as I did earlier in the above example.So, this is how you can efficiently train a machine learning model. If you prepare a model in python with Scikit-learn, you will never find it difficult. I hope this article helps you. Feel free to ask questions on Logistic Regression in Machine Learning with Python or any other topic, in the comments section.", "link": "https://thecleverprogrammer.com/2020/07/02/logistic-regression-in-machine-learning-with-python/", "tags": ["Logistic Regression", "Classification", "Regression"], "kind": "Project", "ml_libs": ["pattern", "sklearn"], "host": "thecleverprogrammer.com", "language": "english", "date_project": "2020-07-02 13:39:41", "date_scraped": "2020-12-20 00:00:00", "words": 604, "sentences": 15, "sum_nltk": "After preparing our machine learning model with this logistic regression, we can use it to predict an image labeled with the numbers.The scikit-learn library comes with a preloaded digits dataset.\nThe need to break the data into training and testing sets is to ensure that our classification model can fit properly in the new data.Step one is the import the model that we want to use, As this article is based on the logistic regression so, I will import the logistic regression model from the scikit-learn library in python.Step two is to create an instance of the model, which means that we need to store the Logistic Regression model into a variable.Step three will be to train the model.\nNow let\u2019s prepare a Logistic Regression model for a real-world example using more significant data to fit our model.Now after loading the MNIST dataset, let\u2019s see some insights into the data.In the output, you will see 70000 images and 70000 labels in this dataset, which sounds very challenging for a real-world problem.Now let\u2019s split the data into training and testing sets.\nHere I will visualize the data using the matplotlib library in python.Now let\u2019s follow the scikit-learn\u2019s modeling pattern as I did earlier in the above example.So, this is how you can efficiently train a machine learning model.", "sum_nltk_words": 214, "sum_nltk_runtime": 0.006, "sum_t5": "scikit-learn library comes with a preloaded digits dataset. that means we need to load the digits dataset, and we are not required to download any dataset for this classification. now let\u2019s split the data into 75 percent training and 25 percent testing sets. this is to ensure that our classification model can fit properly in the new data. if we are able to predict labels, we can use the information that we learned while training the model.", "sum_t5_words": 77, "sum_t5_runtime": 6.297, "runtime": 0.004, "nltk_category": "Construction & Engineering", "nltk_category_score": 0.3805703818798065, "nltk_category_runtime": 20.036, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.9815951585769653, "nltk_subcategory_runtime": 32.327, "category": "Construction & Engineering", "category_score": 0.3805703818798065, "subcategory": "Machine Learning", "subcategory_score": 0.9815951585769653, "runtime_cat": 52.363, "programming_language": "Python", "ml_score": "1.0", "language_code": "en", "language_score": "0.9999973753216441", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "one best thing scikitlearn library python provides four step modeling pattern make easy programmer train machine learning classifier article use logistic regression python classify digit based image preparing machine learning model logistic regression use predict image labeled numbersthe scikitlearn library come preloaded digit dataset mean need load digit dataset required download dataset classification let load datasetnow let look insight datasetnow let see data contains visualize image label present dataset know need work withnow split data 75 percent training 25 percent testing set need break data training testing set ensure classification model fit properly new datastep one import model want use article based logistic regression import logistic regression model scikitlearn library pythonstep two create instance model mean need store logistic regression model variablestep three train model need fit data logistic regression modelstep four predict label new datain step need use information learned training modeli measure accuracy trained logistic regressing model accuracy defined fraction correct prediction correct predictionstotal number data pointsso accuracy give output 953 percent generally appreciatedconfusion matrix table used describing performance classifier trained using dataset use matplotlib seaborn python describe performance trained modelnow let visualize performance using confusion matrix first visualize confusion matrix using seaborn library pythonnow let visualize logistic regression model performance confusion matrix using matplotlib library pythonthe logistic regression model saw give idea classifier work python train machine learning model let prepare logistic regression model realworld example using significant data fit modelnow loading mnist dataset let see insight datain output see 70000 image 70000 label dataset sound challenging realworld problemnow let split data training testing set break dataset 60000 image training set 10000 image testing seta told earlier need look data moving forward see need work visualize data using matplotlib library pythonnow let follow scikitlearns modeling pattern earlier exampleso efficiently train machine learning model prepare model python scikitlearn never find difficult hope article help feel free ask question logistic regression machine learning python topic comment section", "tags_descriptive": ["Logistic Regression", "Classification", "Regression"]}