{"title": "Movie Recommendation System with Machine Learning", "description": "Recommendation systems are among the most popular applications of data science. They are used to predict the Rating or Preference that a user would give to an item. Almost every major company has applied them in some form or the other: Amazon uses it to suggest products to customers, YouTube uses it to decide which video to play next on auto play, and Facebook uses it to recommend pages to like and people to follow. In this Data Science project, you will see how to build a basic model of simple as well as content-based recommendation systems. While these models will be nowhere close to the industry standard in terms of complexity, quality or accuracy, it will help you to get started with building more complex models that produce even better results.Download the data sets you need to build this movie recommendation model from here:#Output-[5 rows x 20 columns]Credits: (4803, 4)Movies Dataframe: (4803, 20)Now lets make a recommendations based on the movie\u2019s plot summaries given in the overview column. So if our user gives us a movie title, our goal is to recommend movies that share similar plot summaries.#Output<4803\u00d710417 sparse matrix of type \u201dwith 127220 stored elements in Compressed Sparse Row format>(4803, 10417)#Output-array([0.76163447, 0.76159416, 0.76159416, \u2026, 0.76159416, 0.76159416, 0.76159416])#Output-1341     Obitaemyy Ostrov634      The Matrix3604     Apollo 182130     The American775       Supernova529       Tears of the Sun151       Beowulf311       The Adventures of Pluto Nash847        Semi-Pro942        The Book of LifeName:  original_title, dtype: object", "link": "https://thecleverprogrammer.com/2020/05/20/data-science-project-movie-recommendation-system/", "tags": ["Recommender"], "kind": "Project", "ml_libs": ["pattern", "sklearn"], "host": "thecleverprogrammer.com", "language": "english", "date_project": "2020-05-20 21:29:01", "date_scraped": "2020-12-20 00:00:00", "words": 292, "sentences": 6, "sum_nltk": "Recommendation systems are among the most popular applications of data science.\nAlmost every major company has applied them in some form or the other: Amazon uses it to suggest products to customers, YouTube uses it to decide which video to play next on auto play, and Facebook uses it to recommend pages to like and people to follow.\nIn this Data Science project, you will see how to build a basic model of simple as well as content-based recommendation systems.\nWhile these models will be nowhere close to the industry standard in terms of complexity, quality or accuracy, it will help you to get started with building more complex models that produce even better results.Download the data sets you need to build this movie recommendation model from here:#Output-[5 rows x 20 columns]Credits: (4803, 4)Movies Dataframe: (4803, 20)Now lets make a recommendations based on the movie\u2019s plot summaries given in the overview column.\nSo if our user gives us a movie title, our goal is to recommend movies that share similar plot summaries.#Output<4803\u00d710417 sparse matrix of type \u201dwith 127220 stored elements in Compressed Sparse Row format>(4803, 10417)#Output-array([0.76163447, 0.76159416, 0.76159416, \u2026, 0.76159416, 0.76159416, 0.76159416])#Output-1341     Obitaemyy Ostrov634      The Matrix3604     Apollo 182130     The American775       Supernova529       Tears of the Sun151       Beowulf311       The Adventures of Pluto Nash847        Semi-Pro942        The Book of LifeName:  original_title, dtype: object", "sum_nltk_words": 271, "sum_nltk_runtime": 0.003, "sum_t5": "a data science project will show you how to build a basic model of simple as well as content-based recommendation systems. the model will be nowhere close to the industry standard in terms of complexity, quality or accuracy. it will help you to get started with building more complex models that produce even better results. if you give us a movie title, our goal is to recommend movies that share similar plot summaries. if our user gives us a movie title, our goal is to recommend movies that share similar plot sum", "sum_t5_words": 92, "sum_t5_runtime": 6.723, "runtime": 0.002, "nltk_category": "Media & Publishing", "nltk_category_score": 0.23566463589668274, "nltk_category_runtime": 28.709, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.465525358915329, "nltk_subcategory_runtime": 46.768, "category": "Media & Publishing", "category_score": 0.23566463589668274, "subcategory": "Machine Learning", "subcategory_score": 0.465525358915329, "runtime_cat": 75.476, "programming_language": "Python", "ml_score": "1.0", "language_code": "en", "language_score": "0.9999947085477865", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "recommendation system among popular application data science used predict rating preference user would give item almost every major company applied form amazon us suggest product customer youtube us decide video play next auto play facebook us recommend page like people follow data science project see build basic model simple well contentbased recommendation system model nowhere close industry standard term complexity quality accuracy help get started building complex model produce even better resultsdownload data set need build movie recommendation model hereoutput5 row x 20 columnscredits 4803 4movies dataframe 4803 20now let make recommendation based movie plot summary given overview column user give u movie title goal recommend movie share similar plot summariesoutput480310417 sparse matrix type 127220 stored element compressed sparse row format4803 10417outputarray076163447 076159416 076159416 076159416 076159416 076159416output1341 obitaemyy ostrov634 matrix3604 apollo 182130 american775 supernova529 tear sun151 beowulf311 adventure pluto nash847 semipro942 book lifename original_title dtype object", "tags_descriptive": ["Recommender"]}