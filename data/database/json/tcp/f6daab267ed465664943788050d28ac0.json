{"title": "Email spam Detection with Machine Learning", "description": "Email spam, are also called as junk emails, are unsolicited messages sent in bulk by email (spamming).In this Data Science Project I will show you how to detect email spam using Machine Learning\u00a0technique called\u00a0Natural Language Processing and Python.Import the libraries :Load the data and print the first 5 rows :You can download this data set from here.Now let\u2019s explore the data and get the number of rows & columns :#Output- (5728, 2)To get the column names in the data set :#Output- Index([\u2018text\u2019, \u2018spam\u2019], dtype=\u2019object\u2019)To check for duplicates and remove them :#Output- (5695, 2)To see the number of missing data for each column :#Output- text 0 spam 0 dtype: int64 Stop words in natural language processing, are useless words (data).Now Create a function to clean the text and return the tokens. The cleaning of the text can be done by first removing punctuation and then removing the useless words also known as stop words.Now convert the text into a matrix of token counts :Now we need to split the data into training and testing sets, and then we will use this one row of data for testing to make our prediction later on and test to see if the prediction matches with the actual value.Now we need to create and train the Multinomial Naive Bayes classifier which is suitable for classification with discrete features.To see the classifiers prediction and actual values on the data set :#Output-[0 0 0 \u2026 0 0 0][0 0 0 \u2026 0 0 0]Now let\u2019s see how well our model performed by evaluating the Naive Bayes classifier and the report, confusion matrix & accuracy score.It looks like the model used is 99.71% accurate. Let\u2019s test the model  on the test data set (xtest & \u00a0ytest) by printing the predicted value, and the actual value to see if the model can accurately classify the email text.#Output-[1 0 0 \u2026 0 0 0] [1 0 0 \u2026 0 0 0]Now let\u2019s evaluate the model on the test data set :The classifier accurately identified the email messages as spam or not spam with 99.2 % accuracy on the test data.", "link": "https://thecleverprogrammer.com/2020/05/17/data-science-project-email-spam-detection-with-machine-learning/", "tags": ["NLP", "Naive Bayes", "Classification"], "kind": "Project", "ml_libs": ["sklearn", "nltk"], "host": "thecleverprogrammer.com", "language": "english", "date_project": "2020-05-17 20:14:12", "date_scraped": "2020-12-20 00:00:00", "words": 351, "sentences": 3, "sum_nltk": "The cleaning of the text can be done by first removing punctuation and then removing the useless words also known as stop words.Now convert the text into a matrix of token counts :Now we need to split the data into training and testing sets, and then we will use this one row of data for testing to make our prediction later on and test to see if the prediction matches with the actual value.Now we need to create and train the Multinomial Naive Bayes classifier which is suitable for classification with discrete features.To see the classifiers prediction and actual values on the data set :#Output-[0 0 0 \u2026 0 0 0][0 0 0 \u2026 0 0 0]Now let\u2019s see how well our model performed by evaluating the Naive Bayes classifier and the report, confusion matrix & accuracy score.It looks like the model used is 99.71% accurate.", "sum_nltk_words": 146, "sum_nltk_runtime": 0.003, "sum_t5": "email spam, are also called as junk emails, are unsolicited messages sent in bulk by email (spamming) in this Data Science Project I will show you how to detect email spam using Machine Learning technique called Natural Language Processing and Python. Let\u2019s test the model on the test data set (xtest & ytest) by printing the predicted value, and the actual value to see if the model can accurately classify the email text. if the model is accurate, it will be able to predict the actual value", "sum_t5_words": 87, "sum_t5_runtime": 7.329, "runtime": 0.004, "nltk_category": "Finance", "nltk_category_score": 0.402556836605072, "nltk_category_runtime": 12.857, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.9751749038696289, "nltk_subcategory_runtime": 20.177, "category": "Finance", "category_score": 0.402556836605072, "subcategory": "Machine Learning", "subcategory_score": 0.9751749038696289, "runtime_cat": 33.034, "programming_language": "Python", "ml_score": "1.0", "language_code": "en", "language_score": "0.999996874783383", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "email spam also called junk email unsolicited message sent bulk email spammingin data science project show detect email spam using machine learning technique called natural language processing pythonimport library load data print first 5 row download data set herenow let explore data get number row column output 5728 2to get column name data set output indextext spam dtypeobjectto check duplicate remove output 5695 2to see number missing data column output text 0 spam 0 dtype int64 stop word natural language processing useless word datanow create function clean text return token cleaning text done first removing punctuation removing useless word also known stop wordsnow convert text matrix token count need split data training testing set use one row data testing make prediction later test see prediction match actual valuenow need create train multinomial naive bayes classifier suitable classification discrete featuresto see classifier prediction actual value data set output0 0 0 0 0 00 0 0 0 0 0now let see well model performed evaluating naive bayes classifier report confusion matrix accuracy scoreit look like model used 9971 accurate let test model test data set xtest ytest printing predicted value actual value see model accurately classify email textoutput1 0 0 0 0 0 1 0 0 0 0 0now let evaluate model test data set classifier accurately identified email message spam spam 992 accuracy test data", "tags_descriptive": ["Natural Language Processing (NLP)", "Naive Bayes", "Classification"]}