{"title": "Credit Card Fraud Detection with Machine Learning", "description": "In this article, I will create a model for credit card fraud detection using machine learning predictive model Autoencoder and python.Lets start with importing librariesThe\u00a0data set I am going to use contains data about credit card transactions that occurred during a period of two days, with 492 frauds out of 284,807 transactions. All variables in the data set are numerical. The data has been transformed using PCA transformation(s) due to privacy reasons. The two features that haven\u2019t been changed are Time and Amount. Time contains the seconds elapsed between each transaction and the first transaction in the data set.You can download this data set from here \u2013 Credit cardChecking the shape of dataChecking for null valuesThere are no null values in the data.Checking number of records of each kind of transaction class (Fraud and Non-Fraud)The data set is highly imbalanced. Looking at each of the fraud(1) and non-fraud(0) transactions.Since only 3 of the features (time, amount and Class) are non-anomyzed, let\u2019s explore them.The time does not seem to be a crucial feature in distinguishing normal vs fraud cases. Hence, I will drop it.The numerical amount in fraud and normal cases differ highly, hence we scale them.We will be using\u00a0autoencoders\u00a0for the fraud detection model. Using autoencoders, we train the database only to learn the representation of the non-fraudulent transactions. The reason behind applying this method is to let the model learn the best representation of non-fraudulent cases so that it automatically distinguishes the other case from it.Spiting the data into 80% training and 20% testing", "link": "https://thecleverprogrammer.com/2020/06/10/credit-card-fraud-detection-with-machine-learning/", "tags": ["ReLu", "Classification", "Regression"], "kind": "Project", "ml_libs": ["keras", "sklearn", "tensorflow"], "host": "thecleverprogrammer.com", "language": "english", "date_project": "2020-06-10 23:13:12", "date_scraped": "2020-12-20 00:00:00", "words": 254, "sentences": 9, "sum_nltk": "In this article, I will create a model for credit card fraud detection using machine learning predictive model Autoencoder and python.Lets start with importing librariesThe\u00a0data set I am going to use contains data about credit card transactions that occurred during a period of two days, with 492 frauds out of 284,807 transactions.\nTime contains the seconds elapsed between each transaction and the first transaction in the data set.You can download this data set from here \u2013 Credit cardChecking the shape of dataChecking for null valuesThere are no null values in the data.Checking number of records of each kind of transaction class (Fraud and Non-Fraud)The data set is highly imbalanced.\nHence, I will drop it.The numerical amount in fraud and normal cases differ highly, hence we scale them.We will be using\u00a0autoencoders\u00a0for the fraud detection model.\nUsing autoencoders, we train the database only to learn the representation of the non-fraudulent transactions.\nThe reason behind applying this method is to let the model learn the best representation of non-fraudulent cases so that it automatically distinguishes the other case from it.Spiting the data into 80% training and 20% testing", "sum_nltk_words": 181, "sum_nltk_runtime": 0.003, "sum_t5": "a data set contains 492 frauds out of 284,807 transactions. the data has been transformed using PCA transformation(s) due to privacy reasons. only 3 of the features (time, amount and Class) are non-anomyzed. the numerical amount in fraud and normal cases differ highly, hence we scale them. 80% training and 20% testing will be done on the model. python will be used to test the model on a variety of different systems.", "sum_t5_words": 72, "sum_t5_runtime": 6.324, "runtime": 0.002, "nltk_category": "Finance", "nltk_category_score": 0.7417543530464172, "nltk_category_runtime": 17.48, "nltk_subcategory": "Machine Learning", "nltk_subcategory_score": 0.9955735802650452, "nltk_subcategory_runtime": 28.676, "category": "Finance", "category_score": 0.7417543530464172, "subcategory": "Machine Learning", "subcategory_score": 0.9955735802650452, "runtime_cat": 46.156, "programming_language": "Python", "ml_score": "1.0", "language_code": "en", "language_score": "0.9999966714450801", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "article create model credit card fraud detection using machine learning predictive model autoencoder pythonlets start importing librariesthe data set going use contains data credit card transaction occurred period two day 492 fraud 284807 transaction variable data set numerical data transformed using pca transformation due privacy reason two feature havent changed time amount time contains second elapsed transaction first transaction data setyou download data set credit cardchecking shape datachecking null valuesthere null value datachecking number record kind transaction class fraud nonfraudthe data set highly imbalanced looking fraud1 nonfraud0 transactionssince 3 feature time amount class nonanomyzed let explore themthe time seem crucial feature distinguishing normal v fraud case hence drop itthe numerical amount fraud normal case differ highly hence scale themwe using autoencoders fraud detection model using autoencoders train database learn representation nonfraudulent transaction reason behind applying method let model learn best representation nonfraudulent case automatically distinguishes case itspiting data 80 training 20 testing", "tags_descriptive": ["Rectified Linear Unit (ReLU)", "Classification", "Regression"]}