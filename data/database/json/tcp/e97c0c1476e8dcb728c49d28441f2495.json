{"title": "Gradient Descent Algorithm in Machine Learning", "description": "Gradient Descent is an optimisation algorithm which is capable of providing optimal performance to a wide range of tasks in Machine Learning. The idea behind a Gradient Descent algorithm is to tweak the parameters using loops to minimize the cost function. In this article, I will take you through the Gradient Descent algorithm in Machine Learning.One of the most important parameters of the Gradient Descent algorithm is the size of its steps which is determined by a Hyperparameter known as the learning rate. If the learning rate is very small then our algorithm will need to cover a lot of loops which may take a long time, and if the learning rate is very high then our algorithm may fail to find the best solution.When you use a Gradient Descent algorithm, you should make sure that all the features we use should have a similar scale, otherwise, it will take very long to converge. One thing you should know that this algorithm is evolved from a linear model. So before diving into how we can use this algorithm, I will first create a linear model which is necessary for our task.", "link": "https://thecleverprogrammer.com/2020/07/27/gradient-descent-algorithm-in-machine-learning/", "tags": ["Regression"], "kind": "Project", "ml_libs": ["sklearn"], "host": "thecleverprogrammer.com", "language": "english", "date_project": "2020-07-27 11:54:15", "date_scraped": "2020-12-20 00:00:00", "words": 191, "sentences": 6, "runtime": 0.002, "description_category": "Utilities", "description_category_score": 0.13125695288181305, "description_category_runtime": 15.485, "description_subcategory": "Machine Learning", "description_subcategory_score": 0.9163638949394226, "description_subcategory_runtime": 24.386, "category": "Utilities", "category_score": 0.13125695288181305, "subcategory": "Machine Learning", "subcategory_score": 0.9163638949394226, "runtime_cat": 39.872, "programming_language": "Python", "ml_score": "1.0", "language_code": "en", "language_score": "0.9999961128412601", "learn_score": 1, "explore_score": 0, "compete_score": 0, "description_lemmatized": "gradient descent optimisation algorithm capable providing optimal performance wide range task machine learning idea behind gradient descent algorithm tweak parameter using loop minimize cost function article take gradient descent algorithm machine learningone important parameter gradient descent algorithm size step determined hyperparameter known learning rate learning rate small algorithm need cover lot loop may take long time learning rate high algorithm may fail find best solutionwhen use gradient descent algorithm make sure feature use similar scale otherwise take long converge one thing know algorithm evolved linear model diving use algorithm first create linear model necessary task", "tags_descriptive": ["Regression"]}