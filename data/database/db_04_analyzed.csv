author;contributors;created_at;description;description2;industry;keywords;language_primary;languages;license;link;ml_detected;ml_libs;name;pushed_at;scraped_at;stars;stars_score;title;type
1davegalloway;0;2018-07-19 02:41:45;This analysis investigates the data of test scores, school budgets, and if high budgets actually result in high test scores;School budget vs school results.;Education & Research;[];Jupyter Notebook;['Jupyter Notebook: 96.8%', 'Python: 3.2%'];;https://github.com/1davegalloway/SchoolDistrictAnalysis;0.0;[];PyCity 2;2018-07-25 04:01:33;2020-10-31 00:31:50;0.0;0.0;SchoolDistrictAnalysis;School
A7med01;0;2018-11-04 12:14:31;Animal Identification with Deep Convolutional Neural Networks and fast.ai library;Deep learning for animal identification.;Biotechnological & Life Sciences;['Computer Vision', 'DL', 'Test data', 'Training data', 'classification', 'deep learning', 'layer', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/A7med01/Deep-learning-for-Animal-Identification;1.0;['tensorflow'];Animal Identification;2020-08-13 15:12:16;2020-10-31 00:20:36;11.0;0.311;Deep-learning-for-Animal-Identification;Life-sciences
AayushG159;2;2018-04-13 14:07:44;Identification of plants through plant leaves on the basis of their shape, color and texture features using digital image processing techniques;Identification of plants through plant leaves on the basis of their shape, color and texture.;Biotechnological & Life Sciences;['CV', 'classification', 'filter', 'fitting', 'label', 'model', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/AayushG159/Plant-Leaf-Identification;1.0;['sklearn'];Leaf Identification;2020-08-03 13:25:47;2020-10-30 23:55:15;44.0;0.435;Plant-Leaf-Identification;Life-sciences
aayushmudgal;0;2016-12-21 21:11:52;Reducing Manufacturing Failures - A Kaggle Challenge;Reducing manufacturing failures.;Manufacturing;['Gradient Boosting', 'Gradient boosting', 'Naive Bayes', 'Random forest', 'classification', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 97.1%', 'Python: 2.1%', 'R: 0.8%'];Apache-2.0;https://github.com/aayushmudgal/Reducing-Manufacturing-Failures;1.0;['sklearn', 'xgboost'];Manufacturing Failures;2016-12-23 03:08:34;2020-10-31 00:44:24;2.0;0.152;Reducing-Manufacturing-Failures;Failure
ab-bh;3;;Innovaccer Hackercamp '17 Project for predicting the Disease outbreak in U.S.A for historical data for 1960 - 2011;Machine Learning implementation based on multiple classifier algorithm implementations.;Emergency & Relief;['ML', 'label', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/ab-bh/Disease-Outbreak-Prediction/;1.0;['sklearn'];Predicting Disease Outbreak;2017-12-20 16:38:14;2020-10-31 00:35:37;;0.0;Disease-Outbreak-Prediction;Disaster Management
abhiagar90;2;2015-03-12 13:17:22;Under progress work for constructing a watchdog for Indian corporate and political networks;Constructing a watchdog for Indian corporate and political networks;Government and Public Works;['AI', 'Clustering', 'Generation', 'ML', 'NN', 'RL', 'Training data', 'clustering', 'epoch', 'filter', 'label', 'labeled', 'layer', 'model', 'rank', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 45.6%', 'HTML: 42.2%', 'JavaScript: 8.8%', 'Python: 3.3%', 'SQLPL: 0.1%', 'PHP: 0.0%'];;https://github.com/abhiagar90/power_networks;0.6;[];Power Networks;2016-07-01 16:20:41;2020-10-31 00:56:36;3;0.188;power_networks;Politics
abjer;4;;Social Data Science - a summer school course;Social data science summer school course.;Government and Public Works;['AI', 'Bayesian', 'CV', 'Clustering', 'DL', 'Decision Tree', 'GRU', 'Generation', 'K-Means', 'K-Nearest neighbor', 'Linear regression', 'Logistic regression', 'ML', 'NER', 'NN', 'Natural Language', 'Natural Language Processing', 'RL', 'Random forest', 'ReLu', 'Regression', 'Sentiment Analysis', 'Supervised learning', 'Support Vector Machines', 'Test data', 'Text Classification', 'Understanding', 'Unsupervised learning', 'activation function', 'classification', 'clustering', 'decision tree', 'deep learning', 'filter', 'fitting', 'label', 'labeled', 'layer', 'machine learning', 'model', 'neural network', 'neuron', 'predict', 'recommend', 'regression', 'train', 'unlabeled'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/abjer/sds/;1.0;['gensim', 'nltk', 'sklearn'];Computational Social Science;2018-08-31 15:52:33;2020-10-31 00:50:30;;0.0;sds;Social Policies
abuchowdhury;0;;Mortgage Bank Loan Analytics with ARIMA and Machine Learning;Extensive mortgage loan analytics.;Banking & Insurance;['Decision Tree', 'Gradient Descent', 'K-Nearest neighbor', 'Linear regression', 'Logistic regression', 'ML', 'NN', 'Random forest', 'Regression', 'Support Vector Machines', 'Test data', 'Training data', 'Understanding', 'classification', 'decision tree', 'fitting', 'label', 'loss', 'machine learning', 'model', 'predict', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 98.2%', 'TeX: 1.8%'];;https://github.com/abuchowdhury/Mortgage_Bank_Loan_Analtsics/;1.0;['sklearn', 'statsmodels'];Mortgage Analytics;2019-02-06 18:39:51;2020-10-31 00:19:00;;0.0;Mortgage_Bank_Loan_Analtsics;Consumer Financial
AccelAI;0;;Mini-course for SCU Law;Multiple steps necessary to implement topic modeling on supreme court decisions.;Justice, Law and Regulations;['AI', 'CNN', 'Clustering', 'Convolutional Neural Network', 'DL', 'Generation', 'Logistic regression', 'ML', 'NLP', 'NN', 'Natural Language', 'Natural Language Processing', 'RL', 'Regression', 'Supervised learning', 'Understanding', 'Unsupervised learning', 'artificial intelligence', 'autoencoder', 'chatbot', 'classification', 'clustering', 'deep learning', 'label', 'labeled', 'layer', 'machine learning', 'model', 'neural network', 'predict', 'rank', 'regression', 'unlabeled'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/AccelAI/AI-Law-Minicourse/;1.0;['nltk', 'sklearn', 'spacy', 'textblob'];Supreme Court Topic Modeling;2018-01-29 20:22:08;2020-10-31 00:43:41;;0.0;AI-Law-Minicourse;Judicial Applied
aditink;3;2018-11-10 03:17:04;Project to find optimal routing of ambulances in Ithaca;Project to find optimal routing of ambulances in Ithaca.;Emergency & Relief;['layer'];Jupyter Notebook;['Jupyter Notebook: 57.4%', 'HTML: 42.6%'];;https://github.com/aditink/EMSRouting;0.6;[];Optimal Routing;2018-11-12 05:42:57;2020-10-31 00:35:30;0;0.0;EMSRouting;Ambulance:
adrianakopf;0;2019-04-09 21:35:34;Schools Performance;NJ School Performance;Education & Research;['label'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/adrianakopf/NJPublicSchools;0.6;[];School Performance 4;2019-04-23 01:21:22;2020-10-31 00:31:42;0;0.0;NJPublicSchools;School
aeronetlab;3;2018-03-01 10:20:04;Some useful utils and a sample pipeline for detection of destroyed houses in California by DigitalGlobe imagery;Detection of destroyed houses in California;Emergency & Relief;['Computer Vision', 'DL', 'ML', 'RL', 'Training data', 'U-Net', 'ground truth', 'label', 'labeled', 'model', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 98.4%', 'Python: 1.5%', 'Other: 0.1%'];;https://github.com/aeronetlab/emergency-mapping;1.0;['keras'];Emergency Mapping;2019-10-18 08:42:32;2020-10-31 00:31:58;4;0.214;emergency-mapping;Preventative and Reactive
akarazeev;4;2017-11-24 16:23:09;LegalEngine - qqmbr team - Junction2017;Chat-bot and email notifications.;Justice, Law and Regulations;['ML', 'label', 'machine learning', 'predict'];Jupyter Notebook;['Jupyter Notebook: 92.0%', 'CSS: 2.8%', 'Python: 2.6%', 'HTML: 2.6%'];;https://github.com/akarazeev/LegalTech;1.0;['catboost', 'sklearn'];Chat Bot;2018-08-02 11:34:55;2020-10-31 00:42:07;12;0.319;LegalTech;Tools
Akesari12;0;;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Using ANES data with causal inference models.;Government and Public Works;['AI', 'CNN', 'CV', 'Convolutional Neural Network', 'Decision Tree', 'Linear regression', 'Logistic regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'Natural Language', 'Natural Language Processing', 'RL', 'Random forest', 'ReLu', 'Regression', 'Sentiment Analysis', 'Understanding', 'Validation data', 'classification', 'decision tree', 'filter', 'label', 'layer', 'machine learning', 'model', 'neural network', 'neuron', 'output layer', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Akesari12/LS123_Data_Prediction_Law_Spring-2019/;1.0;['gensim', 'keras', 'nltk', 'sklearn', 'statsmodels', 'textblob'];American Election Causal;2019-04-05 20:51:12;2020-10-31 00:52:52;;0.0;LS123_Data_Prediction_Law_Spring-2019;Election Analysis
akpen;0;2016-12-16 02:11:48;Quantifying the inefficiencies of Transportation Networks;Quantifying the inefficiencies of Transportation Networks;Utilities;['Regression', 'filter', 'model', 'regression'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/akpen/Stockholm-0.1;1.0;['sklearn', 'statsmodels'];Transportation Inefficiencies;2017-02-12 04:22:15;2020-10-31 01:06:21;2;0.152;Stockholm-0.1;Transportation
AlanConstantine;0;2019-04-27 14:51:30;Context-Aware Multi-Modal Transportation Recommendation;Context-Aware Multi-Modal Transportation Recommendation;Utilities;['RL', 'Test data', 'label', 'model', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 97.8%', 'Python: 2.2%'];;https://github.com/AlanConstantine/KDD-Cup-2019-CAMMTR;1.0;['lightgbm', 'sklearn'];Transport Recommendation;2019-05-14 08:13:56;2020-10-31 01:05:27;34;0.413;KDD-Cup-2019-CAMMTR;Transportation
albahnsen;0;2016-05-16 19:37:52;Short Course - Applied Machine Learning for Risk Management;Applied Machine Learning Risk Management;Banking & Insurance;['CV', 'Clustering', 'Computer Vision', 'Decision Tree', 'Gradient Descent', 'K-Means', 'Linear regression', 'Logistic regression', 'ML', 'NN', 'Random forest', 'Regression', 'Speech Recognition', 'Supervised learning', 'Test data', 'Training data', 'Understanding', 'Unsupervised learning', 'classification', 'clustering', 'decision tree', 'filter', 'fitting', 'label', 'machine learning', 'model', 'neural network', 'predict', 'recognition', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/albahnsen/ML_RiskManagement;1.0;['sklearn'];ML Risk;2018-02-08 21:05:23;2020-10-30 23:44:06;127;0.517;ML_RiskManagement;Insurance and Risk
albertwebson;0;2017-07-26 21:03:46;Unsupervised learning of political ideology by word vector projections.;Unsupervised learning of political ideology by word vector projections;Government and Public Works;['model', 'rank', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/albertwebson/Political-Vector-Projector;1.0;['gensim'];Political Ideology;2018-01-06 16:01:47;2020-10-31 00:57:13;5;0.236;Political-Vector-Projector;Politics
albiboni;0;2018-03-06 14:46:12;Structural analysis of the aileron of a Boeing 737;Structural analysis of the aileron of a Boeing 737;Construction & Engineering;[];Python;['Python: 100.0%'];MIT;https://github.com/albiboni/AileronSimulation;0.0;[];Aileron;2018-03-06 16:13:40;2020-10-31 00:23:06;5;0.236;AileronSimulation;Engineering
alifier;0;2017-09-28 21:19:56;A model that predicts if a restaurant is going to fail within the next 4 years.;Predict whether a restaurant is going to fail;Accommodation & Food;['Gradient Boosting', 'Gradient boosting', 'Linear regression', 'Logistic regression', 'ML', 'Random forest', 'Regression', 'Training data', 'classification', 'label', 'machine learning', 'model', 'predict', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/alifier/Restaurant_success_model;1.0;['sklearn'];Restaurant Success;2018-01-07 23:59:43;2020-10-30 23:34:35;39;0.425;Restaurant_success_model;Restaurant
alistairwallace97;5;2018-05-10 10:49:51;Imperial College EEE third year group project designing and producing a device, algorithm and app for tracking respiratory diseases in Olympic athletes;Tracking respiratory diseases in Olympic athletes;Healthcare;['AI', 'CNN', 'Convolutional Neural Network', 'Gradient Descent', 'LSTM', 'NN', 'Propagation', 'R-CNN', 'RNN', 'ReLu', 'Recurrent Neural Network', 'Test data', 'Training data', 'Validation data', 'activation function', 'classification', 'deep learning', 'epoch', 'filter', 'fitting', 'hidden layer', 'input layer', 'label', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'neuron', 'output layer', 'predict', 'recognition', 'recommend', 'reward', 'train'];Jupyter Notebook;['Jupyter Notebook: 55.4%', 'Python: 19.0%', 'Java: 16.2%', 'C++: 7.1%', 'Shell: 1.8%', 'C: 0.5%'];;https://github.com/alistairwallace97/olympian-biotech;1.0;['gensim', 'keras', 'sklearn', 'tensorflow'];Respiratory Disease;2018-06-27 01:14:56;2020-10-31 00:40:22;3;0.188;olympian-biotech;General
altosaar;3;2017-01-17 19:28:52;;Food vectors, see a live demo on the repository's blog. ;Accommodation & Food;['Regression', 'epoch', 'label', 'loss', 'model', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 97.4%', 'Python: 1.6%', 'JavaScript: 0.4%', 'HTML: 0.4%', 'Shell: 0.2%', 'Perl: 0.0%'];MIT;https://github.com/altosaar/food2vec;1.0;['nltk', 'sklearn', 'tensorflow'];Food2vex;2017-07-27 18:59:33;2020-10-30 23:33:51;199;0.548;food2vec;Food
aluo417;0;2018-03-11 06:10:25;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Financial engineering project for option pricing techniques.;Finance;['Regression', 'model', 'predict', 'regression'];Jupyter Notebook;['Jupyter Notebook: 69.4%', 'HTML: 30.0%', 'Other: 0.6%'];;https://github.com/aluo417/Financial-Engineering-Projects;0.6;[];Options and Regression;2018-03-15 23:15:29;2020-10-31 00:38:08;5;0.236;Financial-Engineering-Projects;Trading & Investment
AlvaroMenduina;0;;This is a collection of Jupyter Notebooks for teaching and outreach purposes;Astrodynamics and Statistics;Construction & Engineering;['filter', 'label', 'model', 'train'];Jupyter Notebook;['Jupyter Notebook: 96.5%', 'Python: 3.5%'];;https://github.com/AlvaroMenduina/Jupyter_Notebooks/;0.6;[];Aerospace Engineering;2020-06-22 15:37:10;2020-10-31 00:24:14;;0.0;Jupyter_Notebooks;Engineering
am-aditya;0;;This project contains codes and notebooks related to various use cases for banking.;Estimate the CLV of credit card customers.;Banking & Insurance;['Clustering', 'ML', 'Regression', 'Test data', 'Understanding', 'artificial intelligence', 'clustering', 'deep learning', 'machine learning', 'model', 'neural network', 'predict', 'rank', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 76.9%', 'Python: 23.1%'];;https://github.com/am-aditya/Artificial-Intelligence-for-Banking/;1.0;['h2o', 'keras', 'sklearn'];Credit Card;2018-09-26 08:32:28;2020-10-31 00:19:43;;0.0;Artificial-Intelligence-for-Banking;Management and Operations
amirrezaeian;0;2018-01-26 21:06:33;Individual household electric-power consumption Data Set (LSTM) [tutorial];Individual household power consumption LSTM.;Utilities;['CNN', 'Gradient Descent', 'LSTM', 'ML', 'NN', 'Recurrent Neural Network', 'Supervised learning', 'deep learning', 'epoch', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'neuron', 'output layer', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/amirrezaeian/Individual-household-electric-power-consumption-Data-Set-;1.0;['keras', 'sklearn'];Household power consumption;2018-01-26 21:20:27;2020-10-31 01:01:27;53;0.45;Individual-household-electric-power-consumption-Data-Set-;Electricity
amunategui;0;2018-06-01 21:44:17;Github repository for article: Pairing Reinforcement Learning and Machine Learning, an Enhanced Emergency Response Scenario.;Chemical factory RL.;Emergency & Relief;['RL', 'Reinforcement learning', 'machine learning', 'model', 'reward', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/amunategui/Leak-At-Chemical-Factory-RL;0.6;[];Emergency Response;2018-06-03 16:01:32;2020-10-31 00:32:58;1;0.099;Leak-At-Chemical-Factory-RL;Preventative and Reactive
analystiu;0;2017-11-23 10:57:42;Emergency-911 Calls. This is the project for LICT Big Data Training. I will try to upload all project materials here.;Emergency calls analysis project.;Emergency & Relief;['Regression', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/analystiu/LICT-Project-Emergency-911-Calls;1.0;['sklearn'];Emergency Calls;2017-12-20 01:28:40;2020-10-31 00:32:54;2;0.152;LICT-Project-Emergency-911-Calls;Preventative and Reactive
ancilcrayton;2;2018-11-06 15:26:57;NLP: An Application for Public Policy, PyCon Ireland 2018;An example of an NLP use-case in public policy.;Government and Public Works;['ML', 'NLP', 'NN', 'Natural Language', 'Natural Language Processing', 'Regression', 'filter', 'machine learning', 'model', 'regression'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/ancilcrayton/nlp_public_policy;1.0;['gensim', 'nltk', 'sklearn', 'statsmodels'];NLP Public Policy;2020-01-13 23:41:39;2020-10-31 00:49:55;13;0.327;nlp_public_policy;Social Policies
andrei-rizoiu;2;2017-02-19 22:49:03;This repo contains data, source code and other ressources related to the HIP model for online popularity of YouTube videos.;HIP model for predicting the popularity of videos.;Media & Publishing;['AI', 'fitting', 'label', 'model', 'train'];Jupyter Notebook;['Jupyter Notebook: 89.4%', 'R: 7.5%', 'Python: 3.0%', 'Shell: 0.1%'];;https://github.com/andrei-rizoiu/hip-popularity;0.6;[];Video Popularity;2018-01-05 06:08:00;2020-10-31 00:44:43;24;0.383;hip-popularity;Marketing
andrey-lukyanov;3;2018-10-03 16:26:14;HSE Course in Risk-Management;Finance risk engagement course resources.;Banking & Insurance;[];Jupyter Notebook;['Jupyter Notebook: 98.5%', 'Python: 1.1%', 'R: 0.4%'];;https://github.com/andrey-lukyanov/Risk-Management;0.4;['sklearn'];Risk Management;2018-12-13 08:05:10;2020-10-30 23:43:30;6;0.253;Risk-Management;Insurance and Risk
anki1909;0;2018-02-07 05:07:01;6th place solution for Recruit-Restaurant-Visitor-Forecasting;Reservation and visitation number prediction;Accommodation & Food;['CV', 'LSTM', 'NN', 'Regression', 'Test data', 'autoencoder', 'epoch', 'label', 'layer', 'predict', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 98.8%', 'Python: 1.2%'];;https://github.com/anki1909/Recruit-Restaurant-Visitor-Forecasting;1.0;['keras', 'sklearn', 'xgboost'];Visitor Forecasting;2018-02-08 03:46:23;2020-10-30 23:34:42;14;0.334;Recruit-Restaurant-Visitor-Forecasting;Restaurant
ankitkariryaa;0;2018-10-21 12:15:59;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Ambulance site locations.;Emergency & Relief;['Generation'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/ankitkariryaa/ambulanceSiteLocation;0.6;[];Site Location;2018-10-29 16:30:20;2020-10-31 00:35:03;0;0.0;ambulanceSiteLocation;Ambulance:
Ankushr785;0;2017-06-23 14:32:44;Predicting the demand of food amenities using LSTM and MLP;Predicting the demand for food amenities using neural networks;Accommodation & Food;['LSTM', 'Recurrent Neural Network', 'Supervised learning', 'Test data', 'Training data', 'Understanding', 'activation function', 'hidden layer', 'input layer', 'layer', 'model', 'neural network', 'neuron', 'output layer', 'predict', 'train'];Python;['Python: 69.0%', 'Jupyter Notebook: 31.0%'];;https://github.com/Ankushr785/Food-amenities-demand-prediction;1.0;['keras', 'sklearn'];Food Amenities;2017-09-19 21:07:02;2020-10-30 23:31:18;6;0.253;Food-amenities-demand-prediction;Food
anshu3769;0;2018-06-04 13:49:21;Embed public firms based on their reaction to legal decisions;Embed public firms based on their reaction to legal decisions.;Justice, Law and Regulations;['AI', 'Decision Tree', 'ML', 'NN', 'Random forest', 'ReLu', 'Test data', 'Training data', 'Validation data', 'decision tree', 'epoch', 'filter', 'hidden layer', 'label', 'labeled', 'layer', 'model', 'neural network', 'output layer', 'predict', 'rank', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/anshu3769/FirmEmbeddings;1.0;['gensim', 'nltk', 'sklearn', 'tensorflow'];Public Firm to Legal Decision;2018-06-04 13:58:05;2020-10-31 00:42:43;0;0.0;FirmEmbeddings;Policy and Regulatory
apbecker;0;;Systemic Risk, ECB Stress Test data;ECB stress testing.;Banking & Insurance;['Propagation', 'Regression', 'filter', 'label', 'loss', 'model', 'rank', 'regression'];Jupyter Notebook;['Jupyter Notebook: 97.8%', 'Python: 2.2%'];;https://github.com/apbecker/Systemic_Risk/;0.6;[];Stress Testing;2017-10-23 20:55:51;2020-10-31 00:20:25;;0.0;Systemic_Risk;Insurance and Risk
apoorv-goel;2;2018-01-18 23:53:44;Data were extracted from images that were taken from genuine and forged banknote-like specimens. For digitization, an industrial camera usually used for print inspection was used. The final images have 400x 400 pixels. Due to the object lens and distance to the investigated object gray-scale pictures with a resolution of about 660 dpi were gaine;Bank Note Authentication Using DNN Tensorflow Classifier and RandomForest.;Banking & Insurance;['NN', 'Random forest', 'hidden layer', 'layer', 'machine learning', 'model', 'neural network', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/apoorv-goel/Bank-Note-Authentication-Using-DNN-Tensorflow-Classifier-and-RandomForest;1.0;['sklearn', 'tensorflow'];Bank Note Fraud Detection;2018-01-19 00:17:41;2020-10-30 23:44:08;2;0.152;Bank-Note-Authentication-Using-DNN-Tensorflow-Classifier-and-RandomForest;Physical
arcadynovosyolov;0;2017-05-15 15:41:48;Mathematical finance and quantitative methods in finance;Options, Allocation, Simulation;Finance;['label', 'model', 'train'];Jupyter Notebook;['Jupyter Notebook: 98.0%', 'Python: 2.0%'];;https://github.com/arcadynovosyolov/finance;1.0;['statsmodels'];Various;2018-06-30 13:23:26;2020-10-31 00:38:29;5;0.236;finance;Trading & Investment
arcadynovosyolov;0;;Illustrative notebook for the paper published in the Journal of Derivatives;Given a portfolio and a predefined loss size, determine which factors stress (scenarios) would lead to that loss;Banking & Insurance;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/arcadynovosyolov/reverse_stress_testing/;0.0;[];Reverse Stress Test;2017-03-04 17:17:22;2020-10-31 00:20:29;;0.0;reverse_stress_testing;Insurance and Risk
Architectshwet;0;2017-08-02 08:33:48;Sentiment Analysis on Amazon Fine Food Reviews Data in Python;Sentiment analysis on Amazon Fine Food Reviews;Accommodation & Food;['Logistic regression', 'Naive Bayes', 'Regression', 'Sentiment Analysis', 'classification', 'machine learning', 'model', 'predict', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Architectshwet/Amazon-Fine-Food-Reviews;1.0;['nltk', 'sklearn'];Fine Food Reviews;2018-06-03 19:26:30;2020-10-30 23:33:23;9;0.292;Amazon-Fine-Food-Reviews;Food
argha48;0;2019-02-13 07:16:21;Analyzing customer reviews using NLP to suggest hotel improvements. WebApp: http://www.smarthotels.city;Analyse reviews to suggest hotel improvements;Accommodation & Food;['AI', 'DL', 'RL', 'Sentiment Analysis', 'filter', 'label', 'model', 'rank', 'train'];Jupyter Notebook;['Jupyter Notebook: 73.8%', 'HTML: 19.9%', 'Python: 6.3%'];GPL-3.0;https://github.com/argha48/smarthotels;1.0;['gensim', 'keras', 'nltk', 'sklearn', 'spacy', 'textblob'];Hotel Improvement;2019-04-11 17:44:37;2020-10-30 23:39:11;1;0.099;smarthotels;Accomodation
arijitsaha;0;2018-06-30 06:22:10;Study & assessment of probable impact of catastrophic flood events & manage flood risk with a first order flood-fill model developed using Python geospatial libraries;Impact of catastrophic flood events.;Emergency & Relief;['Clustering', 'K-Means', 'clustering', 'loss', 'model'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/arijitsaha/FloodRisk;1.0;['sklearn'];Flood Risk;2018-06-30 08:28:00;2020-10-31 00:36:13;19;0.362;FloodRisk;Disaster Management
arogozhnikov;8;2015-05-05 14:17:36;Machine Learning for High Energy Physics.;Machine Learning for High Energy Physics.;Physics;['CV', 'ML', 'RL', 'Regression', 'Test data', 'activation function', 'classification', 'epoch', 'fitting', 'hidden layer', 'label', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'output layer', 'predict', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 73.9%', 'Python: 26.0%', 'Shell: 0.1%'];;https://github.com/arogozhnikov/hep_ml;1.0;['sklearn', 'theano'];High Energy;2020-06-02 17:06:57;2020-10-31 00:47:38;129;0.518;hep_ml;Machine Learning
arrahman17;0;2019-02-08 22:39:37;Student Enrollment and Performance Analysis. This project is aim to analyse student performance and enrolment. We have collected raw data from students based on their previous grades.;Student enrolment and performance analysis.;Education & Research;['Logistic regression', 'ML', 'Random forest', 'Regression', 'filter', 'label', 'machine learning', 'model', 'predict', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 94.8%', 'HTML: 5.2%'];;https://github.com/arrahman17/Learning-Analytics-Project-;1.0;['sklearn'];Student Enrolment;2019-02-28 22:38:00;2020-10-31 00:31:18;3;0.188;Learning-Analytics-Project-;Student
arvindkarir;0;2018-04-13 21:30:52;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Customer dwell time and other analysis.;Wholesale & Retail;['DL', 'filter', 'label'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/arvindkarir/retail;0.6;[];Dwell Time;2018-04-21 02:31:55;2020-10-31 01:07:49;1;0.099;retail;Retail
aspuru-guzik-group;0;2017-12-20 21:41:33;Code for 10.1021/acscentsci.7b00572, now running on Keras 2.0 and Tensorflow;Generate new molecules for efficient exploration.;Biotechnological & Life Sciences;['GRU', 'Regression', 'autoencoder', 'epoch', 'layer', 'loss', 'model', 'predict', 'recommend', 'regression', 'train'];Python;['Python: 100.0%'];Apache-2.0;https://github.com/aspuru-guzik-group/chemical_vae;1.0;['keras', 'sklearn', 'tensorflow'];Automating Chemical Design;2020-11-25 00:39:15;2020-10-30 23:50:54;256;0.565;chemical_vae;Chemoinformatics and drug discovery
austinbrian;0;;Portfolio projects to highlight;Vote by income level analysis.;Government and Public Works;['Clustering', 'Natural Language', 'Natural Language Processing', 'Random forest', 'classification', 'clustering', 'label', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/austinbrian/portfolio/;1.0;['gensim', 'nltk', 'sklearn'];President Vote;2017-06-23 18:39:39;2020-10-31 00:55:58;;0.0;portfolio;Election Analysis
austinbrian;0;2017-11-01 17:26:39;An assessment of sheriffs' compliance frequency with ICE detention requests;Compliance to ICE requests.;Government and Public Works;['label', 'model'];Jupyter Notebook;['Jupyter Notebook: 52.5%', 'HTML: 47.1%', 'Python: 0.4%'];;https://github.com/austinbrian/sheriffs;0.6;[];Sheriff Compliance;2020-06-05 18:22:06;2020-10-31 00:50:12;0;0.0;sheriffs;Social Policies
austinpetsalive;2;2018-10-01 22:06:11;This repo contains models for optimizing animal placement in kennels in shelters at risk of a distemper outbreak.;Optimising animal placement in shelters.;Government and Public Works;['AI', 'RL', 'loss', 'model', 'reward', 'train'];Jupyter Notebook;['Jupyter Notebook: 82.2%', 'Python: 17.8%'];;https://github.com/austinpetsalive/distemper-outbreak;1.0;['keras', 'sklearn', 'tensorflow'];Animal Placement Kennels;2019-04-18 06:48:13;2020-10-31 00:51:07;3;0.188;distemper-outbreak;Social Policies
avsolatorio;0;2018-03-28 03:26:05;Repository for the World Bank Pover-t Test Competition Solution (Bonus Prize Winner);Repository for the World Bank Pover-t Test Competition Solution Overseas Company Land Ownership .;Government and Public Works;['AI', 'Bayesian', 'GBM', 'Logistic regression', 'ML', 'NLP', 'Random forest', 'Regression', 'Training data', 'fitting', 'hidden layer', 'label', 'layer', 'loss', 'model', 'neural network', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 78.2%', 'Python: 20.4%', 'Shell: 1.4%'];MIT;https://github.com/avsolatorio/world-bank-pover-t-tests-solution;1.0;['keras', 'lightgbm', 'sklearn', 'xgboost'];World Bank Poverty II;2018-04-13 09:18:31;2020-10-31 00:49:01;7;0.268;world-bank-pover-t-tests-solution;Social Policies
awoziji;0;2020-03-24 12:21:16;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;The effect on university lodging after the GFC.;Real Estate, Rental & Leasing;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/awoziji/pwc_europe_data_analytics_hackathon;0.0;[];Housing Uni vs Non-Uni;2018-06-10 13:10:08;2020-10-31 00:58:05;0;0.0;pwc_europe_data_analytics_hackathon;Rental & Leasing
awracms;0;2016-11-02 05:39:23;Australian Water Resource Assessment (AWRA) Community Modelling System;Australian Water Resource Assessment (AWRA) Community Modelling System.;Utilities;['AI', 'Propagation', 'RL', 'Regression', 'epoch', 'filter', 'label', 'layer', 'model', 'predict', 'recommend', 'regression'];Jupyter Notebook;['Jupyter Notebook: 90.4%', 'Python: 9.4%', 'Other: 0.2%'];;https://github.com/awracms/awra_cms_older;0.6;[];Water Modelling;2017-02-23 23:51:10;2020-10-31 01:03:47;8;0.281;awra_cms_older;Water & Pollution
Azure;5;2017-05-05 14:12:04;LSTMS for Predictive Maintenance;redict remaining useful life of aircraft engines;Manufacturing;['Image classification', 'LSTM', 'Test data', 'Training data', 'Understanding', 'classification', 'deep learning', 'ground truth', 'label', 'model', 'predict', 'recognition', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/Azure/lstms_for_predictive_maintenance;1.0;['keras', 'sklearn'];Predictive Maintenance 1;2017-07-31 20:19:08;2020-10-31 00:43:57;217;0.554;lstms_for_predictive_maintenance;Maintenance
bahuisman;0;2017-12-22 20:00:47;World Model for Natural Gas Trade;World Model for Natural Gas Trade.;Utilities;['GRU', 'fitting', 'label', 'model'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/bahuisman/NatGasModel;0.6;[];Gas Trade;2018-02-08 20:28:20;2020-10-31 01:02:42;3;0.188;NatGasModel;Coal, Oil & Gas
bayesimpact;0;2016-04-20 20:36:29;Starter kit for the Bayes Hack 2016 Transportation prompt on emergency services;Transportation prompt on emergency services;Emergency & Relief;['predict'];Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Makefile: 0.4%'];MIT;https://github.com/bayesimpact/bayeshack-transportation-ems;0.6;[];Emergency Transportation;2016-04-23 00:32:49;2020-10-31 00:32:35;1;0.099;bayeshack-transportation-ems;Preventative and Reactive
benattix;2;2018-06-10 20:41:16;W209 Final Project - Philadelphia School Performance;Philadelphia School Performance;Education & Research;[];Jupyter Notebook;['Jupyter Notebook: 83.8%', 'HTML: 10.7%', 'CSS: 5.5%'];MIT;https://github.com/benattix/philly-schools;0.4;['sklearn'];School Performance 3;2018-08-12 17:41:19;2020-10-31 00:31:39;1;0.099;philly-schools;School
benjaminsingleton;0;2017-09-17 16:47:36;The Crime Trends Analysis Tool analyzes crime trends and surfaces problematic crime conditions, enabling commanders to begin problem-solving immediately.;The Crime Trends Analysis Tool analyses crime trends and surfaces problematic crime conditions;Emergency & Relief;['Understanding', 'filter', 'label', 'recommend'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/benjaminsingleton/crime-trends;0.6;[];Crime Trends;2017-12-29 01:31:34;2020-10-31 00:34:50;5;0.236;crime-trends;Crime
bhaveshgoyal;0;2018-05-10 01:17:15;A study to correlate the affect of liquor licenses issued, on the crime rate in the surrounding area, in an attempt to regulate better patrolling and safer places to visit in a night;Effect of liquor licenses issued on the crime rate.;Government and Public Works;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/bhaveshgoyal/safeLiquor;0.0;[];Liquor and Crime;2018-05-10 01:35:40;2020-10-31 00:50:59;0;0.0;safeLiquor;Social Policies
borisbanushev;0;;In this noteboook I will create a complete process for predicting stock price movements. Follow along and we will achieve some pretty good results. For that purpose we will use a Generative Adversarial Network (GAN) with LSTM, a type of Recurrent Neural Network, as generator, and a Convolutional Neural Network, CNN, as a discriminator. We use L;Modern AI trading techniques.;Finance;['AI', 'Anomaly detection', 'Bayesian', 'CNN', 'Convolutional Neural Network', 'GAN', 'GRU', 'Generative Adversarial Network', 'Gradient Boosting', 'Gradient Descent', 'Gradient boosting', 'LSTM', 'NLP', 'NN', 'Propagation', 'RL', 'RNN', 'ReLu', 'Recurrent Neural Network', 'Regression', 'Reinforcement learning', 'Sentiment Analysis', 'Supervised learning', 'Test data', 'Training data', 'U-Net', 'Understanding', 'Unsupervised learning', 'activation function', 'autoencoder', 'classification', 'deep learning', 'epoch', 'filter', 'fitting', 'hidden layer', 'label', 'layer', 'loss', 'model', 'neural network', 'neuron', 'predict', 'recommend', 'regression', 'reward', 'train'];;[];;https://github.com/borisbanushev/stockpredictionai/;0.6;[];AI Trading;2019-02-11 16:32:47;2020-10-31 00:36:23;;0.0;stockpredictionai;Trading & Investment
bradleyrobinson;0;2016-12-20 02:06:10;Data analysis practice using data from data.utah.gov on school performance.;Data analysis practice using data from data.utah.gov on school performance.;Education & Research;['filter'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/bradleyrobinson/School-Performance;0.6;[];School Performance;2017-01-14 00:25:40;2020-10-31 00:31:25;1;0.099;School-Performance;School
Brett777;0;2017-06-02 17:17:13;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Predictive model to help to reduce charge-offs and losses of loans.;Banking & Insurance;['AutoML', 'GBM', 'Logistic regression', 'ML', 'RL', 'Random forest', 'Regression', 'Test data', 'classification', 'deep learning', 'epoch', 'filter', 'loss', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 98.2%', 'R: 1.1%', 'Python: 0.7%'];Apache-2.0;https://github.com/Brett777/Predict-Risk;1.0;['h2o'];Loan Risk;2018-03-16 16:57:39;2020-10-30 23:42:31;7;0.268;Predict-Risk;Consumer Financial
BrianChevalier;0;2018-04-29 23:36:12;Structural Analysis Library for Python based on the direct stiffness method;Structural Analysis Library for Python based on the direct stiffness method;Construction & Engineering;['AI'];Python;['Python: 98.1%', 'Shell: 1.9%'];MIT;https://github.com/BrianChevalier/StructPy;0.6;[];StructPy;2019-10-31 05:56:20;2020-10-31 00:23:03;26;0.39;StructPy;Engineering
brightmart;0;2018-05-11 09:33:35;all kinds of baseline models for long text classificaiton( text categorization);Baseline models for long text classificaiton( text categorization);Justice, Law and Regulations;['AI', 'CNN', 'Computer Vision', 'Convolutional Neural Network', 'GRU', 'LSTM', 'ML', 'NLP', 'NN', 'ReLu', 'ResNet', 'Text Classification', 'Training data', 'Understanding', 'Validation data', 'activation function', 'artificial intelligence', 'classification', 'epoch', 'filter', 'label', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'recommend', 'train'];Python;['Python: 100.0%'];;https://github.com/brightmart/ai_law;1.0;['gensim', 'sklearn', 'tensorflow'];Legal Text Classification;2019-02-20 08:58:55;2020-10-31 00:42:14;236;0.56;ai_law;Tools
brightmart;0;2018-11-03 15:08:01;Multi-label Classification with BERT. Fine Grained Sentiment Analysis from AI challenger;Fine Grained Sentiment Analysis from AI.;Justice, Law and Regulations;['AI', 'CNN', 'Convolutional Neural Network', 'NN', 'ReLu', 'Sentiment Analysis', 'Training data', 'Understanding', 'Validation data', 'classification', 'epoch', 'filter', 'hidden layer', 'label', 'layer', 'loss', 'model', 'neural network', 'output layer', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 84.5%', 'Python: 15.5%'];;https://github.com/brightmart/sentiment_analysis_fine_grain;1.0;['gensim', 'keras', 'sklearn', 'tensorflow'];Bert Multi-label Classification;2018-11-15 13:13:29;2020-10-31 00:43:48;538;0.611;sentiment_analysis_fine_grain;Judicial Applied
bschreck;2;2015-12-17 20:48:33;Final project for MIT 6.864, along with Nico Rakover and Ambika Krishnamachar;Refining recipes based on user reviews.;Accommodation & Food;['AI', 'LSTM', 'ML', 'NN', 'RNN', 'epoch', 'filter', 'label', 'labeled', 'layer', 'loss', 'model', 'predict', 'train'];Python;['Python: 100.0%'];;https://github.com/bschreck/robo-chef;1.0;['sklearn', 'tensorflow'];RobotChef;2019-07-24 08:33:47;2020-10-30 23:31:17;8;0.281;robo-chef;Food
budach;2;2017-12-02 13:14:29;pysster: Learning Sequence And Structure Motifs In Biological Sequences Using Convolutional Neural Networks;A toolbox for learning motifs from DNA/RNA sequence data using convolutional neural networks;Biotechnological & Life Sciences;['Clustering', 'Convolutional Neural Network', 'GRU', 'Gradient Descent', 'Image classification', 'LSTM', 'ML', 'NN', 'RNN', 'ReLu', 'Test data', 'Validation data', 'classification', 'clustering', 'epoch', 'filter', 'input layer', 'label', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'neuron', 'output layer', 'predict', 'rank', 'recommend', 'train'];Python;['Python: 77.5%', 'HTML: 22.5%'];MIT;https://github.com/budach/pysster;1.0;['keras', 'sklearn'];CNN Sequencing -;2019-10-22 14:28:42;2020-10-30 23:50:31;65;0.467;pysster;Sequencing
buddyd16;0;2017-03-29 03:59:50;Structural Engineering Modules (Python 2.7 primarily);Structural engineering modules.;Construction & Engineering;['AI', 'DL', 'ML', 'filter', 'fitting', 'label', 'layer', 'model', 'train'];Python;['Python: 98.5%', 'HTML: 1.5%'];BSD-3-Clause;https://github.com/buddyd16/Structural-Engineering;0.6;[];Structural Engineering;2020-11-16 17:49:29;2020-10-31 00:22:55;107;0.505;Structural-Engineering;Engineering
bukosabino;0;2018-04-26 11:58:57;My approaches to Financial Forecasting Challenge by G-Research;Financial forecasting challenge by G-Research (Hedge Fund);Finance;['CV', 'Test data', 'label', 'machine learning', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 97.1%', 'Python: 2.9%'];MIT;https://github.com/bukosabino/financial-forecasting-challenge-gresearch;1.0;['lightgbm', 'sklearn', 'xgboost'];Forecasting Challenge;2018-12-05 20:34:00;2020-10-31 00:38:24;31;0.405;financial-forecasting-challenge-gresearch;Trading & Investment
burkesquires;0;2017-10-16 12:54:07;Python Programming for Biologists;Python Programming for Biologists;Biotechnological & Life Sciences;[];Python;['Python: 42.0%', 'OpenEdge ABL: 32.2%', 'Jupyter Notebook: 10.2%', 'HTML: 8.6%', 'JavaScript: 6.0%', 'HiveQL: 0.6%', 'Other: 0.4%'];;https://github.com/burkesquires/python_biologist;0.0;[];Programming;2020-08-12 20:26:51;2020-10-30 23:47:23;51;0.447;python_biologist;General
buzz11;0;2018-11-30 20:00:03;Binary classification of products passage or failure of quality control;Bosh failure of quality control.;Manufacturing;['Test data', 'classification', 'label', 'machine learning', 'model', 'predict'];Jupyter Notebook;['Jupyter Notebook: 69.8%', 'Python: 30.2%'];;https://github.com/buzz11/productionFailures;0.6;[];Quality Control;2018-12-06 23:09:02;2020-10-31 00:44:27;3;0.188;productionFailures;Quality
byukan;0;2017-03-20 00:59:02;Analytics and data science business case studies to identify opportunities and inform decisions about products and features. Topics include Markov chains, A/B testing, customer segmentation, and machine learning models (logistic regression, support vector machines, and quadratic discriminant analysis).;Marketing analytics case studies.;Media & Publishing;['AI', 'Logistic regression', 'RL', 'Regression', 'Support Vector Machines', 'Test data', 'classification', 'fitting', 'label', 'machine learning', 'model', 'recommend', 'regression', 'reward', 'train'];Jupyter Notebook;['Jupyter Notebook: 70.8%', 'HTML: 28.4%', 'R: 0.8%'];;https://github.com/byukan/Marketing-Data-Science;1.0;['sklearn', 'statsmodels'];Marketing Analytics;2019-11-28 05:15:09;2020-10-31 00:45:07;159;0.533;Marketing-Data-Science;Marketing
bzjin;0;2018-04-11 16:40:10;This essay is an analysis of 693 restaurant menus in seven American Chinatowns, of what the words Chinese food really mean and represent;Deeper analysis of restaurants through their menus;Accommodation & Food;['AI', 'Clustering', 'DL', 'GRU', 'Generation', 'K-Means', 'ML', 'NER', 'NN', 'Propagation', 'RL', 'ReLu', 'Regression', 'Test data', 'Understanding', 'classification', 'clustering', 'epoch', 'filter', 'label', 'labeled', 'layer', 'loss', 'model', 'predict', 'rank', 'recommend', 'regression', 'reward', 'train'];Jupyter Notebook;['Jupyter Notebook: 97.8%', 'Other: 2.2%'];MIT;https://github.com/bzjin/menus;0.6;[];Menu Analysis;2018-04-28 10:13:59;2020-10-30 23:36:45;0;0.0;menus;Restaurant
CAChemE;4;2015-02-20 14:49:58;Education resources for Chemical and Process Engineering written in Python;Various resources.;Construction & Engineering;['NER', 'Understanding', 'label', 'model', 'rank'];Jupyter Notebook;['Jupyter Notebook: 99.7%', 'MATLAB: 0.3%'];MIT;https://github.com/CAChemE/learn;0.6;[];Chemical and Process Engineering;2017-04-10 07:19:28;2020-10-31 00:24:22;53;0.45;learn;Engineering
cadrev;0;2016-09-27 09:34:21;Applying LSTM on river water level data;Applying LSTM on river water level data;Utilities;['LSTM', 'Recurrent Neural Network', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/cadrev/lstm-flood-prediction;1.0;['keras', 'sklearn'];Flood Prediction;2016-09-27 09:52:29;2020-10-31 01:03:51;13;0.327;lstm-flood-prediction;Water & Pollution
callysto;37;;Home of curriculum-related notebook content.;Bubonic plague and SIR model.;Healthcare;['AI', 'Bayesian', 'Generation', 'ML', 'NN', 'RL', 'Test data', 'Understanding', 'filter', 'fitting', 'label', 'labeled', 'layer', 'model', 'predict', 'rank', 'recommend', 'train'];JavaScript;['JavaScript: 52.4%', 'Jupyter Notebook: 46.3%', 'Python: 0.9%', 'HTML: 0.2%', 'Processing: 0.2%', 'Shell: 0.0%'];;https://github.com/callysto/curriculum-notebooks/;1.0;['nltk', 'textblob'];Bubonic Plague;2020-11-21 18:55:58;2020-10-31 00:41:31;;0.0;curriculum-notebooks;General
carolineh101;0;2018-10-22 02:14:49;Deep learning classifier and image generator for building architecture.;Deep learning classifier and image generator for building architecture.;Construction & Engineering;['GAN', 'Generation', 'ML', 'Propagation', 'Training data', 'classification', 'deep learning', 'epoch', 'hidden layer', 'label', 'layer', 'loss', 'model', 'output layer', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/carolineh101/deep-learning-architecture;1.0;['sklearn'];DL Architecture;2018-12-14 05:38:41;2020-10-31 00:21:23;5;0.236;deep-learning-architecture;Construction
catherhuang;0;2018-10-12 13:35:34;Analysis of recipe information;Predict the rating and type of cuisine from a list of ingredients;Accommodation & Food;['DL', 'K-Nearest neighbor', 'ML', 'NER', 'Natural Language', 'Random forest', 'Understanding', 'classification', 'filter', 'label', 'layer', 'machine learning', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 91.1%', 'Python: 8.9%'];;https://github.com/catherhuang/FP3-recipe;1.0;['gensim', 'nltk', 'sklearn', 'statsmodels', 'xgboost'];Recipe Cuisine and Rating;2018-10-14 18:29:53;2020-10-30 23:31:23;2;0.152;FP3-recipe;Food
cavaunpeu;0;2017-05-05 16:58:10;Transfer learning for flight-delay prediction via variational autoencoders in Keras;Using variation encoders in Keras to predict flight delay.;Utilities;['RL', 'Regression', 'Test data', 'autoencoder', 'layer', 'loss', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 94.5%', 'HTML: 5.5%'];;https://github.com/cavaunpeu/flight-delays;1.0;['keras', 'sklearn'];Transfer Learning Flight Delay;2017-05-18 11:17:03;2020-10-31 01:07:22;28;0.397;flight-delays;Transportation
cep-kse;0;2019-01-29 15:43:42;scripts for calculating potential economic effect of price indexation formula on natural gas procurement market in Ukraine;Calculating potential economic effect of price indexation formula.;Utilities;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/cep-kse/natural_gas_formula;0.0;[];Gas Formula;2019-01-29 16:53:48;2020-10-31 01:02:10;2;0.152;natural_gas_formula;Coal, Oil & Gas
CharlesHoffmanCPA;0;2018-09-20 21:03:01;"Pages repository. This includes all the PDFs for the document ""Intelligent XBRL-based Digital Financial Reporting"". Also includes many, many, many examples and samples of XBRL instances, XBRL taxonomies, XBRL formulas, etc.";XML Language, however, possibly port analysis into Python.;Accounting;['AI', 'CV', 'DL', 'ML', 'NN', 'RL', 'Understanding', 'VGG', 'filter', 'label', 'loss', 'model', 'rank', 'recommend', 'train'];;[];Apache-2.0;https://github.com/CharlesHoffmanCPA/charleshoffmanCPA.github.io;0.6;[];Automated FS XBRL;2018-09-29 18:12:10;2020-10-30 23:40:19;2;0.152;charleshoffmanCPA.github.io;Analytics
chen-bowen;0;2018-01-29 05:14:52;This repository contains data science projects that studies the empirical behaviors in stock market;Studies the empirical behaviors in stock market.;Finance;['Regression', 'regression'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/chen-bowen/Data_Science_in_Applied_Corporate_Finance;0.6;[];Applied Corporate Finance;2018-07-19 06:25:36;2020-10-31 00:36:51;8;0.281;Data_Science_in_Applied_Corporate_Finance;Trading & Investment
chen-bowen;0;2018-10-11 20:32:37;Applied Finance Project from UCLA Anderson, using natural language processing techniques to classify and summarize quantitative finance research papers;Curating quantitative finance papers using machine learning.;Finance;['CNN', 'Generation', 'NLP', 'NN', 'Natural Language', 'Natural Language Processing', 'classification', 'epoch', 'label', 'layer', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/chen-bowen/Research_Documents_Curation_with_NLP;1.0;['gensim', 'keras', 'nltk'];NLP Finance Papers;2018-12-24 23:27:56;2020-10-31 00:37:03;9;0.292;Research_Documents_Curation_with_NLP;Trading & Investment
chenbowen184;0;2018-01-29 05:01:52;Projects focusing on investigating simulations and computational techniques applied in finance;Investigating simulations as part of computational finance.;Finance;['Generation', 'model'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/chenbowen184/Computational_Finance;0.6;[];Simulation;2018-08-02 05:56:49;2020-10-31 00:36:30;15;0.34;Computational_Finance;Trading & Investment
chicago-justice-project;7;2017-01-24 23:52:43;Natural Language Processing of Chicago news articles;Natural Language Processing of Chicago news article;Emergency & Relief;['AI', 'CNN', 'LSTM', 'Logistic regression', 'NER', 'NLP', 'NN', 'Naive Bayes', 'Regression', 'Training data', 'Validation data', 'epoch', 'filter', 'label', 'labeled', 'layer', 'machine learning', 'model', 'predict', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 84.6%', 'Python: 10.7%', 'R: 4.7%'];MIT;https://github.com/chicago-justice-project/article-tagging;1.0;['keras', 'nltk', 'sklearn', 'tensorflow'];Article Tagging;2020-03-12 16:17:13;2020-10-31 00:33:15;34;0.413;article-tagging;Crime
chrieke;2;2017-05-25 14:07:21;Deep Learning for Instance Segmentation of Agricultural Fields - Master thesis;Agricultural field parcel segmentation using satellite images;Agriculture;['CNN', 'Computer Vision', 'Image segmentation', 'NN', 'Object detection', 'R-CNN', 'RL', 'Regression', 'ResNet', 'classification', 'deep learning', 'epoch', 'layer', 'loss', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 66.0%', 'Python: 34.0%'];;https://github.com/chrieke/InstanceSegmentation_Sentinel2;1.0;['mxnet', 'skimage'];Segmentation;2019-12-14 18:34:40;2020-10-30 23:41:22;192;0.546;InstanceSegmentation_Sentinel2;Development
Chris-Manna;0;2019-02-13 01:35:57;NYC Charity Collaborative Recommender System on an Implicit DataSet;NYC Charity Collaborative Recommender System on an Implicit DataSet.;Government and Public Works;['CV', 'Clustering', 'NN', 'clustering', 'filter', 'label', 'model', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Chris-Manna/charity_recommender;1.0;['sklearn'];Charity Recommender;2019-11-24 04:00:39;2020-10-31 00:52:13;1;0.099;charity_recommender;Charities
chrisPiemonte;0;2017-02-24 11:00:38;Association Rule Mining from Spatial Data for Crime Analysis;Association Rule Mining from Spatial Data for Crime Analysis;Emergency & Relief;['Generation', 'Understanding', 'filter', 'model', 'predict'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];;https://github.com/chrisPiemonte/crime-analysis;1.0;['gensim', 'sklearn'];Crime Analysis;2019-02-07 15:31:58;2020-10-31 00:33:33;20;0.367;crime-analysis;Crime
CityofToronto;17;2016-08-24 19:01:52;Data sources used by the Big Data Innovation Team;Data and notebooks for Toronto transport.;Utilities;['AI', 'ANN', 'CV', 'DL', 'Linear regression', 'ML', 'NER', 'NN', 'RL', 'Regression', 'classification', 'epoch', 'filter', 'fitting', 'label', 'layer', 'loss', 'model', 'output layer', 'predict', 'rank', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 97.5%', 'Python: 1.4%', 'PLpgSQL: 1.1%'];GPL-3.0;https://github.com/CityofToronto/bdit_data-sources;1.0;['statsmodels'];Transport Data;2020-11-27 22:35:39;2020-10-31 01:05:47;17;0.352;bdit_data-sources;Transportation
cmenguy;0;2016-01-04 15:49:03;Analysis of crime data in Seattle and San Francisco;Analysis of crime data in Seattle and San Francisco.;Emergency & Relief;['filter', 'label'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/cmenguy/crime-analytics;0.6;[];Crime Analytics;2019-05-24 15:02:06;2020-10-31 00:34:53;5;0.236;crime-analytics;Crime
codeforboston;25;2018-09-12 01:49:23;We are using data science to analyze water quality issues.;Predict health-based drinking water violations in the United States.;Utilities;['AI', 'Clustering', 'Linear regression', 'Logistic regression', 'ML', 'NN', 'Random forest', 'Regression', 'Test data', 'Training data', 'Understanding', 'classification', 'clustering', 'filter', 'fitting', 'label', 'layer', 'loss', 'machine learning', 'model', 'predict', 'rank', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Other: 0.2%'];MIT;https://github.com/codeforboston/safe-water;1.0;['sklearn', 'statsmodels'];Safe Water;2020-11-18 22:25:50;2020-10-31 01:02:59;34;0.413;safe-water;Water & Pollution
crowdAI;6;2018-08-08 17:20:14;sbb-train-schedule-optimisation-challenge-starter-kit;Train schedule optimisation;Utilities;['AI', 'ML', 'Understanding', 'label', 'loss', 'model', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 76.6%', 'Python: 23.4%'];;https://github.com/crowdAI/train-schedule-optimisation-challenge-starter-kit;0.6;[];Train Optimisation;2018-11-15 11:51:01;2020-10-31 01:06:29;45;0.437;train-schedule-optimisation-challenge-starter-kit;Transportation
damontallen;0;2015-05-31 18:32:04;This contains the IPython notebooks that are used in the teaching of my Constructions Materials course.;A course on construction materials.;Construction & Engineering;['label'];Jupyter Notebook;['Jupyter Notebook: 99.0%', 'Other: 1.0%'];;https://github.com/damontallen/Construction-materials;0.6;[];Construction Materials;2017-02-20 01:20:29;2020-10-31 00:22:23;2;0.152;Construction-materials;Construction
danielmachinelearning;0;2018-03-26 14:07:59;Project is to determine whether not only a given hotel review on a website is positive or negative, but if the review was genuine or if it was done by spam or a troll/bot. Purpose is to prevent hotels from artificially inflating their own value or to prevent hotels from being spammed by trolls. Algorithm to implement it was a CNN-LSTM network us;Identify whether reviews are fake/spam;Accommodation & Food;['LSTM', 'ReLu', 'filter', 'layer', 'model'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/danielmachinelearning/HotelSpamDetection;1.0;['gensim', 'keras', 'nltk', 'sklearn', 'spacy'];Fake Reviews;2018-03-29 16:00:55;2020-10-30 23:39:14;4;0.214;HotelSpamDetection;Accomodation
Danila89;2;2017-07-12 12:42:44;The 11th place solution of Mercedes-Benz Greener Manufacturing competition on Kaggle;Mercedes-Benz Greener Manufacturing competition on Kaggle.;Manufacturing;['Clustering', 'clustering', 'label', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 93.3%', 'Python: 6.7%'];;https://github.com/Danila89/kaggle_mercedes;1.0;['sklearn', 'xgboost'];Green Manufacturing;2017-10-23 17:34:50;2020-10-31 00:43:49;48;0.442;kaggle_mercedes;General
danshorstein;0;2017-08-20 21:18:24;"example code and source files for ficpa.org article ""Programming for Efficiency""";How to output an excel file from a PDF;Accounting;[];Python;['Python: 100.0%'];;https://github.com/danshorstein/ficpa_article;0.0;[];PDF Tabel to Excel;2017-08-28 14:04:28;2020-10-31 00:18:49;18;0.357;ficpa_article;Data, Parsing and APIs
danshorstein;0;;code for http://www.python4cpas.com/;Extracting useful data from PDF documents.;Accounting;[];HTML;['HTML: 59.8%', 'Jupyter Notebook: 40.2%'];;https://github.com/danshorstein/python4cpas/;0.0;[];PDF Parsing;2019-12-25 21:01:11;2020-10-31 00:18:47;;0.0;python4cpas;Data, Parsing and APIs
dariusmehri;0;2017-05-02 13:52:50;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;A risk model to predict unsafe facades.;Construction & Engineering;['DL', 'NER', 'RL', 'model', 'predict'];HTML;['HTML: 88.1%', 'Jupyter Notebook: 11.7%', 'R: 0.2%'];;https://github.com/dariusmehri/Algorithm-for-Finding-Buildings-with-Facade-Risk;0.6;[];Facade Risk;2017-05-23 18:03:46;2020-10-31 00:22:31;0;0.0;Algorithm-for-Finding-Buildings-with-Facade-Risk;Construction
dariusmehri;0;2017-01-27 18:23:43;Inspection tracking using Euclidean distance algorithm and fuzzy logic text matching;Determine the assigned inspections.;Construction & Engineering;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/dariusmehri/Geo-Spatial-Risk-Analysis-of-Inspectors;0.0;[];Inspectors;2017-12-06 15:51:33;2020-10-31 00:22:27;0;0.0;Geo-Spatial-Risk-Analysis-of-Inspectors;Construction
dariusmehri;0;2017-02-13 19:34:00;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Productivity analysis and inspection with Tableau.;Construction & Engineering;['AI', 'filter'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/dariusmehri/Inspection-Productivity-Analysis-and-Visualization-with-Tableau;0.6;[];Productivity;2017-03-08 00:21:45;2020-10-31 00:22:41;1;0.099;Inspection-Productivity-Analysis-and-Visualization-with-Tableau;Construction
dariusmehri;0;2017-02-15 20:16:04;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Predicting staff levels for front line workers.;Construction & Engineering;['Linear regression', 'Regression', 'predict', 'regression'];Jupyter Notebook;['Jupyter Notebook: 99.6%', 'R: 0.4%'];;https://github.com/dariusmehri/Predicting-Staff-Levels-for-Front-line-Workers;0.6;[];Staff Levels;2017-03-21 15:34:21;2020-10-31 00:22:33;1;0.099;Predicting-Staff-Levels-for-Front-line-Workers;Construction
dariusmehri;0;2017-01-30 15:13:10;Market basket and social network analysis.;Predictive analysis of building violations.;Construction & Engineering;['AI', 'ANN', 'NER', 'NN', 'model', 'predict'];Jupyter Notebook;['Jupyter Notebook: 98.2%', 'R: 1.8%'];;https://github.com/dariusmehri/Predictive-Analysis-of-Building-Violations;0.6;[];Building Violations;2017-03-16 13:08:35;2020-10-31 00:22:39;0;0.0;Predictive-Analysis-of-Building-Violations;Construction
dariusmehri;0;2018-07-19 15:23:57;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Identify high risk construction.;Construction & Engineering;['Logistic regression', 'Regression', 'model', 'rank', 'regression'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/dariusmehri/Risk-Screening-Tool-to-Predict-Accidents-at-Construction-Sites;0.6;[];Risk Construction;2019-05-14 18:49:12;2020-10-31 00:22:30;0;0.0;Risk-Screening-Tool-to-Predict-Accidents-at-Construction-Sites;Construction
dariusmehri;0;2018-11-20 21:28:26;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Uncover potential corrupt social interactions between an industry member and the staff at the DOB;Construction & Engineering;['filter', 'label'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/dariusmehri/Social-Network-Analysis-to-Expose-Corruption;0.6;[];Corrupt Social Interactions;2018-11-21 14:50:24;2020-10-31 00:22:28;0;0.0;Social-Network-Analysis-to-Expose-Corruption;Construction
dariusmehri;0;2018-06-25 19:37:36;Risk model to improve construction related building safety;Risk model to improve construction related building safety;Construction & Engineering;['ML', 'NER', 'filter', 'label', 'machine learning', 'predict', 'rank'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/dariusmehri/Social-Network-Bad-Actor-Risk-Tool;0.6;[];Bad Actor Risk Model;2019-08-27 20:30:23;2020-10-31 00:22:25;1;0.099;Social-Network-Bad-Actor-Risk-Tool;Construction
dariusmehri;0;2017-02-07 18:39:59;Topic modelling using python, R and Tableau;Building related injuries topic modelling.;Construction & Engineering;['AI', 'NLP', 'machine learning', 'model'];Jupyter Notebook;['Jupyter Notebook: 96.8%', 'R: 3.2%'];;https://github.com/dariusmehri/Topic-Modeling-and-Analysis-of-Building-Related-Injuries;0.6;[];Injuries;2017-03-16 13:15:06;2020-10-31 00:22:37;0;0.0;Topic-Modeling-and-Analysis-of-Building-Related-Injuries;Construction
darshankaarki;0;2019-07-29 18:00:10;Convolutional neural network to automatically charge invoices to account codes, exposed as an API;Using labeled data to suggest the account name for every transaction.;Accounting;['Convolutional Neural Network', 'Test data', 'Training data', 'classification', 'epoch', 'filter', 'layer', 'machine learning', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 95.5%', 'Python: 3.9%', 'Other: 0.6%'];MIT;https://github.com/darshankaarki/ml-coa-charging;1.0;['tensorflow'];Chart of Acount Prediction;2018-11-16 12:37:15;2020-10-30 23:39:43;0;0.0;ml-coa-charging;Machine Learning
Data4Democracy;17;2017-01-27 23:19:34;Build a crash prediction modeling application that leverages multiple data sources to generate a set of dynamic predictions we can use to identify potential trouble spots and direct timely safety interventions.;Crash prediction modelling application that leverages multiple data sources;Utilities;['AI', 'CV', 'Clustering', 'DL', 'Generation', 'LSTM', 'Logistic regression', 'ML', 'NN', 'RL', 'RNN', 'Regression', 'Test data', 'Training data', 'classification', 'clustering', 'filter', 'label', 'labeled', 'layer', 'machine learning', 'model', 'predict', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 86.9%', 'Python: 10.9%', 'JavaScript: 1.3%', 'HTML: 0.4%', 'CSS: 0.2%', 'Makefile: 0.1%', 'Other: 0.2%'];MIT;https://github.com/Data4Democracy/crash-model;1.0;['keras', 'sklearn', 'theano', 'xgboost'];Predict Crashes;2020-10-26 12:49:42;2020-10-31 01:07:14;100;0.5;crash-model;Transportation
datacamp;2;;Further student resources for DrivenData's 'Machine Learning with the Experts: School Budgets' DataCamp course.;Tools and techniques for school budgeting.;Education & Research;['Training data', 'label', 'loss', 'machine learning', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 70.2%', 'Python: 29.8%'];MIT;https://github.com/datacamp/course-resources-ml-with-experts-budgets/;1.0;['sklearn'];School Budgets;2017-12-14 20:46:54;2020-10-31 00:31:46;;0.0;course-resources-ml-with-experts-budgets;School
datadesk;0;2016-10-30 21:22:03;A Los Angeles Times analysis of water usage after the state eased drought restrictions;A Los Angeles Times analysis of water usage after the state eased drought restrictions;Utilities;['filter', 'label', 'rank'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/datadesk/california-ccscore-analysis;0.6;[];Drought Restrictions;2018-10-21 00:44:34;2020-10-31 01:03:49;9;0.292;california-ccscore-analysis;Water & Pollution
datadesk;0;2017-02-08 02:20:23;A Los Angeles Times analysis of California's costly power glut;A Los Angeles Times analysis of California's costly power glut.;Utilities;['Generation', 'filter', 'rank'];Jupyter Notebook;['Jupyter Notebook: 99.4%', 'Python: 0.6%'];;https://github.com/datadesk/california-electricity-capacity-analysis;0.6;[];Electricity Capacity;2018-10-21 00:43:49;2020-10-31 00:59:56;17;0.352;california-electricity-capacity-analysis;Electricity
datadesk;2;2015-10-14 23:07:10;A Los Angeles Times analysis of serious assaults misclassified by LAPD;Times analysis of serious assaults misclassified by LAPD.;Emergency & Relief;['classification', 'machine learning', 'model', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/datadesk/lapd-crime-classification-analysis;1.0;['nltk', 'sklearn'];Crime Classification;2018-10-21 00:47:32;2020-10-31 00:32:59;56;0.455;lapd-crime-classification-analysis;Crime
datakind;9;2017-07-25 17:25:41;This is a collection of the work done by DataKind volunteers on harnessing Form 990 data for improved philanthropic giving;Work done by numerous DataKind volunteers on harnessing Form 990 data;Government and Public Works;['AI', 'Clustering', 'clustering', 'model'];Jupyter Notebook;['Jupyter Notebook: 91.0%', 'R: 5.4%', 'TypeScript: 2.1%', 'JavaScript: 1.1%', 'Python: 0.2%', 'CSS: 0.1%', 'HTML: 0.1%'];;https://github.com/datakind/datadive-gates92y-proj3-form990;0.6;[];Philantropic Giving;2017-08-06 21:36:29;2020-10-31 00:52:12;3;0.188;datadive-gates92y-proj3-form990;Charities
DataScienceForGood;7;2018-03-01 19:36:37;Open data project around taxation and inequality in Basel Stadt;Data project around taxation and inequality in Basel Stadt.;Government and Public Works;['ML', 'recommend'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/DataScienceForGood/TaxationInequality;0.6;[];Tax Inequality;2018-12-13 19:04:40;2020-10-31 00:50:01;7;0.268;TaxationInequality;Social Policies
davidawad;2;2018-03-02 20:13:23;Lobe is the world's first AI paralegal.;Lobe is the world's first AI paralegal.;Justice, Law and Regulations;['Generation', 'model', 'train'];Python;['Python: 98.7%', 'Other: 1.3%'];;https://github.com/davidawad/lobe;0.6;[];AI Para-legal;2020-03-18 23:39:57;2020-10-31 00:41:55;16;0.346;lobe;Tools
davidjwiner;0;2016-12-31 18:16:45;Predicting political affiliation based on Twitter metadata.;Political affiliation prediction using twitter metadata.;Government and Public Works;['predict'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/davidjwiner/political_affiliation_prediction;1.0;['sklearn'];Political Affiliation;2016-12-31 18:30:14;2020-10-31 00:56:54;4;0.214;political_affiliation_prediction;Politics
davidmasse;0;2018-10-14 17:08:18;Predicting the ideological direction of Supreme Court decisions: ensemble vs. unified case-based model;Predicting the ideological direction of Supreme Court decisions: ensemble vs. unified case-based model.;Justice, Law and Regulations;['CV', 'Clustering', 'Decision Tree', 'Logistic regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'Random forest', 'Regression', 'Test data', 'Training data', 'classification', 'clustering', 'decision tree', 'fitting', 'label', 'labeled', 'loss', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 56.9%', 'Python: 43.1%'];;https://github.com/davidmasse/US-supreme-court-prediction;1.0;['sklearn', 'xgboost'];Supreme Court Prediction;2018-10-14 17:21:20;2020-10-31 00:43:29;5;0.236;US-supreme-court-prediction;Judicial Applied
davidsontheath;0;;Bias-corrected estimators of price impact for legal event studies;Bias-Corrected Estimation of Price Impact in Securities Litigation.;Justice, Law and Regulations;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/davidsontheath/bias_corrected_estimators/;0.0;[];Securities Bias Correction;2018-01-15 05:00:00;2020-10-31 00:42:25;;0.0;bias_corrected_estimators;Policy and Regulatory
davidsteinar;0;2017-12-04 18:45:10;KTH master thesis in Machine Learning: Quantifying structural uncertainty with deep learning.;Quantifying structural uncertainty with deep learning.;Construction & Engineering;['ReLu', 'classification', 'deep learning', 'label', 'loss', 'machine learning', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Python: 0.4%'];MIT;https://github.com/davidsteinar/structural-uncertainty;0.6;[];Structural Uncertainty;2018-10-07 19:07:48;2020-10-31 00:24:08;1;0.099;structural-uncertainty;Engineering
dchannah;0;2017-09-15 19:57:22;Anomaly detection system for medical insurance claims data;Anomaly detection system for medical insurance claims data.;Banking & Insurance;['Anomaly detection', 'Clustering', 'K-Means', 'ML', 'clustering', 'label', 'labeled', 'machine learning', 'model', 'rank'];Jupyter Notebook;['Jupyter Notebook: 80.4%', 'HTML: 13.6%', 'CSS: 3.1%', 'Python: 2.4%', 'JavaScript: 0.5%'];;https://github.com/dchannah/fraudhacker;1.0;['sklearn'];Claims Anomalies;2017-11-07 01:19:47;2020-10-30 23:43:13;5;0.236;fraudhacker;Insurance and Risk
dchannah;0;2017-03-14 22:13:35;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Scripts for simulations and analysis of materials.;Construction & Engineering;['Clustering', 'Generation', 'Linear regression', 'ML', 'Regression', 'clustering', 'filter', 'fitting', 'label', 'machine learning', 'model', 'predict', 'rank', 'regression', 'train'];Python;['Python: 100.0%'];;https://github.com/dchannah/materials_mining;1.0;['sklearn'];Materials Mining;2017-11-21 18:09:14;2020-10-31 00:28:14;3;0.188;materials_mining;Material Science
deadskull7;0;2018-04-08 22:27:59;In Agriculture Price Monitioring , I have used data provided by open government site data.gov.in, which updates prices of market daily . Working Interface Details: We have provided user choice to see current market prices based on two choices: market wise or commodity wise use increase assesibility options. Market wise: User have to provide Stat;Agricultural price prediction.;Agriculture;['Regression', 'machine learning', 'model', 'predict', 'regression'];Jupyter Notebook;['Jupyter Notebook: 99.0%', 'Other: 1.0%'];;https://github.com/deadskull7/Agricultural-Price-Prediction-and-Visualization-on-Android-App;1.0;['keras', 'sklearn'];Prices;2018-10-02 05:37:19;2020-10-30 23:40:39;28;0.397;Agricultural-Price-Prediction-and-Visualization-on-Android-App;Economics
deepchem;94;2015-09-24 23:20:28;Democratizing Deep-Learning for Drug Discovery, Quantum Chemistry, Materials Science and Biology;Democratizing Deep-Learning for Drug Discovery, Quantum Chemistry, Materials Science and Biology;Biotechnological & Life Sciences;['AI', 'CNN', 'Clustering', 'GRU', 'Generative Adversarial Network', 'LSTM', 'Logistic regression', 'ML', 'NN', 'Propagation', 'RL', 'RNN', 'Random forest', 'ReLu', 'Regression', 'Reinforcement learning', 'Test data', 'Training data', 'activation function', 'classification', 'clustering', 'deep learning', 'epoch', 'filter', 'fitting', 'hidden layer', 'label', 'labeled', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'neuron', 'output layer', 'predict', 'rank', 'recommend', 'regression', 'reward', 'train'];Python;['Python: 97.5%', 'Jupyter Notebook: 1.9%', 'Other: 0.6%'];MIT;https://github.com/deepchem/deepchem;1.0;['gensim', 'keras', 'lightgbm', 'sklearn', 'tensorflow', 'theano', 'xgboost'];Deepchem;2020-11-26 08:32:45;2020-10-30 23:49:53;2553;0.692;deepchem;General
denadai2;0;2018-08-05 23:16:01;"Code to repeat the experiments of ""The economic value of neighborhoods: Predicting real estate prices from the urban environment""";Predicting real estate prices from the urban environment;Banking & Insurance;['Test data', 'label', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 87.2%', 'Python: 6.8%', 'TSQL: 4.1%', 'Lua: 1.9%'];;https://github.com/denadai2/real-estate-neighborhood-prediction;1.0;['sklearn', 'xgboost'];Real Estate;2020-11-18 21:23:14;2020-10-30 23:42:54;30;0.403;real-estate-neighborhood-prediction;Valuation
DFS-UCU;5;2017-10-09 22:47:51;Submission for the Queen's International Innovation Challenge;Agricultural analysis looking at crop yields in Ukraine;Agriculture;['Computer Vision', 'GBM', 'Linear regression', 'Regression', 'label', 'loss', 'model', 'predict', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];MIT;https://github.com/DFS-UCU/UkrainianAgriculture;1.0;['lightgbm', 'sklearn'];Yield;2017-10-28 16:35:56;2020-10-30 23:40:45;9;0.292;UkrainianAgriculture;Economics
DimaStoyanov;0;2019-04-24 05:35:37;Applying game theory and discrete event simulation to find optimal solution for ambulance dispatching;Applying game theory and discrete event simulation to find optimal solution for ambulance dispatching;Emergency & Relief;['AI', 'Generation', 'NN', 'label', 'layer', 'model'];Jupyter Notebook;['Jupyter Notebook: 90.2%', 'HTML: 7.6%', 'Python: 2.2%'];;https://github.com/DimaStoyanov/Ambulance-Dispatching;1.0;['sklearn'];Dispatching;2019-07-14 21:08:34;2020-10-31 00:35:19;1;0.099;Ambulance-Dispatching;Ambulance:
DistrictDataLabs;2;2018-04-07 23:31:57;City Intelligence Dashboard Project;City Intelligence Dashboard Project;Government and Public Works;['Natural Language', 'RL'];Jupyter Notebook;['Jupyter Notebook: 83.3%', 'HTML: 16.6%', 'Other: 0.1%'];MIT;https://github.com/DistrictDataLabs/city-dash;0.6;[];City Dashboard;2018-08-13 23:16:37;2020-10-31 00:51:34;4;0.214;city-dash;Social Policies
divyam3897;2;2017-11-12 02:14:48;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Analyse irrigation and predict pest likelihood.;Agriculture;['CNN', 'NN', 'ReLu', 'Test data', 'filter', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 97.8%', 'Other: 2.2%'];;https://github.com/divyam3897/agriculture;1.0;['keras', 'sklearn'];Irrigation and Pest Prediction;2020-06-05 17:56:32;2020-10-30 23:41:33;2;0.152;agriculture;Development
DivyaMadhu;0;2018-02-23 02:12:54;This repo contains my work on predicting school budgets which is a multi-class-multi-label classification problem. It consists of 9 broad categories that each take on many possible sub-label instances.;Further classification exercise.;Education & Research;['NLP', 'Random forest', 'Test data', 'Training data', 'classification', 'label', 'loss', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/DivyaMadhu/School-Budget-Prediction;1.0;['sklearn'];Budget NLP 2;2018-02-23 03:20:42;2020-10-31 00:31:54;0;0.0;School-Budget-Prediction;School
dkirkby;2;2018-01-06 21:08:18;Machine learning and statistics for physicists;Machine learning and statistics for physicists;Physics;['AI', 'Bayesian', 'Clustering', 'Decision Tree', 'GAN', 'Generative Adversarial Network', 'K-Means', 'Linear regression', 'ML', 'Random forest', 'Regression', 'Reinforcement learning', 'Supervised learning', 'Test data', 'Unsupervised learning', 'activation function', 'autoencoder', 'classification', 'clustering', 'decision tree', 'deep learning', 'epoch', 'fitting', 'hidden layer', 'input layer', 'label', 'labeled', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'output layer', 'predict', 'rank', 'recommend', 'regression', 'reward', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Python: 0.3%'];BSD-3-Clause;https://github.com/dkirkby/MachineLearningStatistics;1.0;['sklearn', 'tensorflow'];Physics ML and Stats;2020-04-04 14:38:19;2020-10-31 00:47:20;50;0.446;MachineLearningStatistics;Machine Learning
DLColumbia;2;2018-05-08 19:34:17;This git repository is based on the work of J.Heaton, N.Polson and J.Witte and their articleDeep Learning for Finance: Deep Portfolios. This paper let us explore the use of deeplearning models for problems in financial prediction and classification. Our goal isto show how applying deep learning methods to these problems can produce betteroutcome;Deep learning for finance Predict volume of bonds.;Finance;['autoencoder', 'classification', 'deep learning', 'layer', 'loss', 'machine learning', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];;https://github.com/DLColumbia/DL_forFinance;1.0;['sklearn', 'tensorflow'];Deep Portfolio;2018-05-09 15:39:26;2020-10-31 00:36:21;26;0.39;DL_forFinance;Trading & Investment
dmodjeska;0;;Data characterization, clustering, and anomaly detection for credit card transactions by the London Borough of Barnet (simulated auditing exercise);Identification of potential fraud for council credit cards. Data;Government and Public Works;['Anomaly detection', 'Clustering', 'K-Means', 'classification', 'clustering', 'label', 'model', 'predict'];Jupyter Notebook;['Jupyter Notebook: 51.4%', 'HTML: 48.6%'];;https://github.com/dmodjeska/barnet_transactions/;1.0;['sklearn'];Public Credit Card;2017-06-17 17:31:45;2020-10-31 00:49:41;;0.0;barnet_transactions;Social Policies
DocVaughan;0;2015-01-06 00:10:33;Code supporting MCHE485: Mechanical Vibrations at the Univsersity of Louisiana at Lafayette;Mechanical Vibrations at the Univsersity of Louisiana.;Construction & Engineering;['AI', 'label', 'loss'];Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Other: 0.4%'];;https://github.com/DocVaughan/MCHE485---Mechanical-Vibrations;0.6;[];Mechanical Vibrations;2020-08-13 19:54:54;2020-10-31 00:25:05;20;0.367;MCHE485---Mechanical-Vibrations;Engineering
ds-modules;6;2018-11-16 01:26:04;A module for EEP-117: Regulation of Energy and the Environment;Regulation of Energy and the Environment;Justice, Law and Regulations;['model', 'predict'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/ds-modules/EEP-147;0.6;[];Environment;2020-01-08 20:53:58;2020-10-31 00:43:17;0;0.0;EEP-147;Policy and Regulatory
dssg;20;2016-10-19 19:55:46;General Purpose Risk Modeling and Prediction Toolkit for Policy and Social Good Problems;General Purpose Risk Modeling and Prediction Toolkit for Policy and Social Good Problems.;Government and Public Works;['AI', 'DL', 'Decision Tree', 'Generation', 'Logistic regression', 'ML', 'RL', 'Random forest', 'Regression', 'Supervised learning', 'Test data', 'Training data', 'Understanding', 'classification', 'decision tree', 'filter', 'fitting', 'label', 'labeled', 'layer', 'machine learning', 'model', 'predict', 'rank', 'recommend', 'regression', 'train', 'unlabeled'];Jupyter Notebook;['Jupyter Notebook: 75.9%', 'Python: 23.6%', 'Other: 0.5%'];;https://github.com/dssg/triage;1.0;['sklearn'];Triage;2020-11-11 16:45:51;2020-10-31 00:48:47;115;0.51;triage;Social Policies
DTUWindEnergy;17;2013-08-28 07:45:22;This is a repository to gather the teaching material used for the course Python for Wind Energy organised at DTU Wind Energy;Python for wind energy;Construction & Engineering;['AI', 'DL', 'NN', 'Regression', 'filter', 'label', 'layer', 'model', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 92.0%', 'PostScript: 3.9%', 'Python: 3.7%', 'TeX: 0.4%', 'C: 0.0%', 'Makefile: 0.0%'];Apache-2.0;https://github.com/DTUWindEnergy/Python4WindEnergy;0.6;[];Wind Energy;2016-05-24 07:14:27;2020-10-31 00:25:30;41;0.429;Python4WindEnergy;Engineering
duncangh;0;2017-01-06 15:07:36;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;A project to transfer SEC Edgar Filings’ financial data to custom financial statement analysis models.;Finance;['DL', 'Generation', 'ML', 'RL', 'label', 'loss', 'model'];Jupyter Notebook;['Jupyter Notebook: 55.8%', 'Python: 44.2%'];;https://github.com/duncangh/FSA;0.6;[];FSA;2017-01-10 22:42:02;2020-10-31 00:38:37;5;0.236;FSA;Data
ebrahimraeyat;2;2018-11-08 23:01:02;collection of civil engineering tools in FreeCAD;Collection of civil engineering tools in FreeCAD;Construction & Engineering;['classification', 'label'];Python;['Python: 99.9%', 'Batchfile: 0.1%'];GPL-3.0;https://github.com/ebrahimraeyat/Civil;0.6;[];Civil;2020-10-01 03:41:51;2020-10-31 00:23:16;15;0.34;Civil;Engineering
edmundooo;0;2018-09-24 22:19:56;This project was written in Python and analyzed the effects of PAC money on US politics.;Effects of PAC money on US politics.;Government and Public Works;['Natural Language', 'Natural Language Processing', 'RL', 'model'];Jupyter Notebook;['Jupyter Notebook: 98.4%', 'Python: 1.6%'];;https://github.com/edmundooo/more-money-more-problems;1.0;['gensim', 'nltk'];PAC Money;2020-09-18 17:16:35;2020-10-31 00:56:25;6;0.253;more-money-more-problems;Politics
ehsanasgari;0;2014-08-26 00:23:55;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Anew representation for biological sequences using DL.;Biotechnological & Life Sciences;['deep learning', 'model', 'train'];;[];;https://github.com/ehsanasgari/Deep-Proteomics;0.6;[];DNA, RNA and Protein Sequencing;2020-07-23 07:26:55;2020-10-30 23:49:58;35;0.416;Deep-Proteomics;Sequencing
EliadProject;5;2018-12-22 19:14:04;Classification and clustering data of hotels reservation to produce conclusions and decsions;Cluster hotel reviews;Accommodation & Food;['Clustering', 'Decision Tree', 'K-Means', 'Naive Bayes', 'Test data', 'classification', 'clustering', 'decision tree', 'filter', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/EliadProject/Hotels-Data-Science;1.0;['sklearn'];Hotel Reviews;2019-03-13 15:01:42;2020-10-30 23:39:02;2;0.152;Hotels-Data-Science;Accomodation
eloyekunle;0;;Machine learning model to analyze students' performance and predict success likelihood.;Building a student intervention system.;Education & Research;['CV', 'Regression', 'Supervised learning', 'Training data', 'classification', 'machine learning', 'model', 'predict', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/eloyekunle/student_intervention/;1.0;['sklearn'];Student Intervention;2016-09-19 16:04:24;2020-10-31 00:31:16;;0.0;student_intervention;Student
EricHe98;0;2017-06-23 00:05:49;Documentation and code for downloading, cleaning, munging, and analyzing financial statements filed by publicly traded companies with the SEC;Sentiment, distance and proportion analysis for trading signals.;Accounting;['ML', 'RL', 'Sentiment Analysis', 'loss'];;[];;https://github.com/EricHe98/Financial-Statements-Text-Analysis;0.6;[];Financial Sentiment Analysis;2019-01-26 03:36:02;2020-10-30 23:40:21;44;0.435;Financial-Statements-Text-Analysis;Textual Analysis
erickjtorres;2;2018-10-30 03:48:19;Predicting GDPR Scores for Legal Documents;Predicting GDPR Scores for Legal Documents.;Justice, Law and Regulations;['AI', 'Decision Tree', 'NER', 'Random forest', 'Test data', 'decision tree', 'fitting', 'label', 'labeled', 'machine learning', 'model', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 91.2%', 'Python: 8.8%'];;https://github.com/erickjtorres/AI_LegalDoc_Hackathon;1.0;['nltk', 'sklearn', 'spacy'];GDPR scores;2018-11-09 20:21:16;2020-10-31 00:42:21;1;0.099;AI_LegalDoc_Hackathon;Policy and Regulatory
ernestyalumni;0;2016-02-21 15:20:59;CompPhys - a Computational Physics repository;A computational physics repository.;Physics;['AI', 'ANN', 'CV', 'Computer Vision', 'DL', 'Generation', 'ML', 'NN', 'RL', 'Regression', 'Understanding', 'filter', 'label', 'layer', 'loss', 'model', 'rank', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 62.1%', 'Cuda: 14.4%', 'C++: 9.6%', 'C: 7.2%', 'TeX: 6.1%', 'Python: 0.5%', 'Makefile: 0.1%'];Apache-2.0;https://github.com/ernestyalumni/CompPhys;0.6;[];Computational Physics;2020-02-06 07:47:52;2020-10-31 00:46:20;60;0.46;CompPhys;General
eswar3;0;2018-01-13 04:44:42;Machine Learning Project using Kaggle dataset;Zillow valuation prediction as performed on Kaggle.;Banking & Insurance;['Linear regression', 'Regression', 'Test data', 'classification', 'label', 'layer', 'model', 'predict', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/eswar3/Zillow-prediction-models;1.0;['sklearn', 'xgboost'];Zillow Prediction;2019-02-17 07:35:20;2020-10-30 23:42:53;7;0.268;Zillow-prediction-models;Valuation
everAspiring;0;2017-10-31 19:24:22;Restaurant profit prediction;Restaurant regression analysis;Accommodation & Food;['Gradient Descent', 'Linear regression', 'Logistic regression', 'Regression', 'Supervised learning', 'Training data', 'Understanding', 'loss', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/everAspiring/RegressionAnalysis;0.6;[];Restaurant Profit;2018-06-13 04:19:13;2020-10-30 23:34:44;1;0.099;RegressionAnalysis;Restaurant
fangshulin;0;2018-10-04 03:54:40;A quantitative framework to analyze subway systems using network graph;Vulnerability analysis for transportation networks.;Utilities;['ML', 'filter', 'loss', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/fangshulin/Vulnerability-Analysis-for-Transportation-Networks;0.6;[];Network Graph Subway;2019-02-04 02:42:32;2020-10-31 01:06:19;1;0.099;Vulnerability-Analysis-for-Transportation-Networks;Transportation
farkhondehm;0;2019-03-16 23:19:29;This dataset includes the Head of Household trending data from 2004 to 2014. It provides information on households by neighborhood with reference to the Ontario Works social assistance program. The information in this dataset will inform the delivery of services by providing trending information on social assistance which includes income support;Trending information on social assistance;Government and Public Works;['label', 'machine learning', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/farkhondehm/Social-Assistance;1.0;['sklearn', 'statsmodels'];Social Assistance;2019-03-16 23:31:53;2020-10-31 00:50:18;0;0.0;Social-Assistance;Social Policies
farwacheema;0;2018-03-25 20:28:54;Forecasting Day-Ahead electricity prices in the German bidding zone with deep neural networks.;Forecasting Day-Ahead electricity prices in the German bidding zone with deep neural networks.;Utilities;['Generation', 'LSTM', 'ReLu', 'Regression', 'Validation data', 'filter', 'input layer', 'label', 'layer', 'machine learning', 'model', 'neural network', 'predict', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 74.3%', 'HTML: 25.6%', 'Python: 0.1%'];;https://github.com/farwacheema/DA-electricity-price-forecasting;1.0;['keras', 'sklearn'];Price Forecasting;2017-11-11 12:29:09;2020-10-31 01:00:17;32;0.408;DA-electricity-price-forecasting;Electricity
Featuretools;5;2018-12-11 17:42:08;Predict the poverty of households in Costa Rica using automated feature engineering.;Predict poverty in households in Costa Rica.;Government and Public Works;['GBM', 'Gradient Boosting', 'Gradient boosting', 'Validation data', 'label', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];BSD-3-Clause;https://github.com/Featuretools/predict-household-poverty;1.0;['lightgbm', 'sklearn'];Household Poverty;2020-07-01 17:52:40;2020-10-31 00:49:47;19;0.362;predict-household-poverty;Social Policies
Featuretools;4;2018-12-17 19:20:38;Predict whether a loan will be repaid using automated feature engineering.;Predict whether a loan will be repaid using automated feature engineering.;Banking & Insurance;['machine learning', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];BSD-3-Clause;https://github.com/Featuretools/predict-loan-repayment;0.6;[];Predict Loan Repayment;2020-08-13 13:48:30;2020-10-30 23:41:38;43;0.433;predict-loan-repayment;Consumer Financial
felzek;4;2017-11-21 01:59:29;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Crime review data analysis.;Emergency & Relief;['Sentiment Analysis', 'predict'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/felzek/Crime-Review-Data-Analysis;1.0;['nltk'];Crime Review;2017-12-16 17:19:01;2020-10-31 00:34:48;5;0.236;Crime-Review-Data-Analysis;Crime
finnqiao;0;2018-08-12 12:26:05;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Cohort analysis.;Wholesale & Retail;['label'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/finnqiao/cohort_online_retail;0.6;[];Retail Cohort;2018-08-19 05:18:02;2020-10-31 01:07:55;8;0.281;cohort_online_retail;Retail
firmai;2;2019-03-15 00:48:49;ICR - Automated and Intelligent Company Report Built in Python (by @firmai);Automated machine learning company report;Accommodation & Food;[];Jupyter Notebook;['Jupyter Notebook: 54.9%', 'HTML: 43.6%', 'Python: 1.5%'];;https://github.com/firmai/interactive-corporate-report;0.0;[];Automated Restaurant Report;2020-11-18 21:46:35;2020-10-30 23:38:19;130;0.519;interactive-corporate-report;Restaurant
FPAL-Stanford-University;3;2016-09-30 21:45:43;Flow Physics and Aeroacoustics Toolbox with Python;Flow Physics and Aeroacoustics Toolbox with Python;Physics;['rank'];Jupyter Notebook;['Jupyter Notebook: 46.6%', 'Python: 33.7%', 'Fortran: 19.0%', 'Shell: 0.7%'];LGPL-3.0;https://github.com/FPAL-Stanford-University/FloATPy;0.6;[];Flow Physics;2020-09-23 20:19:38;2020-10-31 00:47:09;17;0.352;FloATPy;General
fpli-mbr;0;2019-08-24 13:09:31;A query of, and basic analysis of, the LA city parking citation database. Calculations show that the city collected over $140M in parking citations over the course of 2018.;Basic analysis of, the LA city parking citation database.;Government and Public Works;['filter'];Python;['Python: 100.0%'];;https://github.com/fpli-mbr/LA-Parking-Tickets;0.6;[];Parking Tickets;2019-05-30 05:06:36;2020-10-31 00:51:13;0;0.0;LA-Parking-Tickets;Social Policies
FUSED-Wind;7;2015-01-30 09:46:22;A repository of wind plant flow models connected to FUSED-Wind;A repository of wind plant flow models connected to FUSED-Wind.;Utilities;['AI', 'GRU', 'ML', 'RL', 'epoch', 'label', 'machine learning', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 59.1%', 'Fortran: 22.2%', 'Python: 18.3%', 'Makefile: 0.4%'];MIT;https://github.com/FUSED-Wind/FUSED-Wake;1.0;['theano'];Wind Farm Flow;2018-07-18 14:51:10;2020-10-31 01:01:47;20;0.367;FUSED-Wake;Electricity
fvisconti;0;2017-10-02 13:41:50;Mostly scikit-learn tools used in Gamma-ray ground based astronomy gamma-hadron classification.;Tools used in Gamma-ray ground based astronomy.;Physics;['NER', 'NN', 'Naive Bayes', 'Random forest', 'classification', 'label', 'machine learning', 'model', 'predict', 'train'];HTML;['HTML: 83.3%', 'Jupyter Notebook: 15.6%', 'Python: 1.1%'];MIT;https://github.com/fvisconti/gammas_machine_learning;1.0;['sklearn'];Gamma-hadron Reconstruction;2018-07-17 08:05:37;2020-10-31 00:46:09;0;0.0;gammas_machine_learning;General
gablg1;3;2017-03-09 01:59:00;Objective-Reinforced Generative Adversarial Networks (ORGAN) for Sequence Generation Models;A method that combines generative models with reinforcement learning.;Biotechnological & Life Sciences;['GAN', 'Generative Adversarial Network', 'LSTM', 'R-CNN', 'RL', 'Reinforcement learning', 'classification', 'epoch', 'filter', 'label', 'layer', 'loss', 'model', 'predict', 'recommend', 'reward', 'train'];Python;['Python: 100.0%'];GPL-2.0;https://github.com/gablg1/ORGAN;1.0;['tensorflow'];GAN drug Discovery;2020-11-13 17:39:28;2020-10-30 23:52:31;177;0.54;ORGAN;Chemoinformatics and drug discovery
gabrielilharco;3;2017-12-08 15:23:29;Food detection and recommendation with deep learning;Food detection and recommendation with deep learning;Accommodation & Food;['AI', 'Convolutional Neural Network', 'NN', 'deep learning', 'layer', 'model', 'neural network', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 55.8%', 'JavaScript: 20.3%', 'HTML: 17.2%', 'Python: 6.7%'];MIT;https://github.com/gabrielilharco/snap-n-eat;1.0;['sklearn'];Food Detection;2020-03-30 02:47:52;2020-10-30 23:33:59;223;0.556;snap-n-eat;Food
gauravmunjal13;0;2018-02-20 07:06:31;Identification of crop diseases and pests using Deep Learning framework from the images.;Identification of crop diseases and pests using Deep Learning framework from the images.;Agriculture;['ReLu', 'VGG', 'epoch', 'fitting', 'label', 'layer', 'loss', 'model', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/gauravmunjal13/Agriculture;1.0;['keras', 'tensorflow'];Diseases;2018-07-17 09:16:30;2020-10-30 23:41:31;13;0.327;Agriculture;Development
geoscixyz;7;2017-01-22 17:34:10;Interactive applications for electromagnetics in geophysics;Interactive applications for electromagnetics in geophysics;Construction & Engineering;['AI', 'Propagation', 'Understanding', 'layer', 'model', 'predict', 'recommend'];Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Other: 0.4%'];MIT;https://github.com/geoscixyz/em-apps;0.6;[];Electro geophysics;2020-01-14 17:53:24;2020-10-31 00:24:50;14;0.334;em-apps;Engineering
GiggleLiu;3;2018-02-06 09:03:39;physics meets neural networks;Physics meets neural networks;Physics;['Boltzmann Machine', 'Generation', 'Gradient Descent', 'ML', 'NN', 'Propagation', 'deep learning', 'epoch', 'label', 'loss', 'model', 'neural network', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Other: 0.2%'];MIT;https://github.com/GiggleLiu/marburg;0.6;[];Neural Networks;2018-11-23 06:08:47;2020-10-31 00:47:50;78;0.481;marburg;Machine Learning
girishkuniyal;2;2017-05-19 19:59:57;Predict housing prices in Portland, Oregon for selling or buying house;Predict housing prices in Portland.;Real Estate, Rental & Leasing;['Gradient Descent', 'Regression', 'label', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/girishkuniyal/Predict-housing-prices-in-Portland;0.6;[];House Price Portland;2018-12-16 06:53:55;2020-10-31 00:57:54;13;0.327;Predict-housing-prices-in-Portland;Real Estate
GirrajMaheshwari;0;2017-12-21 12:30:18;Using text mining and machine learning to analyze judges opinions in cases where a workers status as an employee or independent contractor is in dispute;Using text mining and machine learning to analyze judges’ opinions for a particular concern.;Justice, Law and Regulations;['Random forest', 'classification', 'machine learning', 'model', 'predict'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/GirrajMaheshwari/Legal-Analytics-project---Court-misclassification;1.0;['gensim', 'nltk', 'sklearn'];Judge Opinion;2018-10-04 19:41:40;2020-10-31 00:43:43;1;0.099;Legal-Analytics-project---Court-misclassification;Judicial Applied
GirrajMaheshwari;0;;Scrapping legal documents from google scholar;Using Google scholar to extract cases programatically.;Justice, Law and Regulations;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/GirrajMaheshwari/Web-scrapping-/;0.0;[];Legal Documents Google Scholar;2018-10-04 18:54:05;2020-10-31 00:42:00;;0.0;Web-scrapping-;Tools
GitiHubi;2;2017-05-24 12:36:38;Detection of Accounting Anomalies using Deep Autoencoder Neural Networks - A lab we prepared for NVIDIA's GPU Technology Conference 2018 that will walk you through the detection of accounting anomalies using deep autoencoder neural networks. The majority of the lab content is based on Jupyter Notebook, Python and PyTorch.;Using deep-learning frameworks to identify accounting anomalies.;Accounting;['AI', 'NN', 'autoencoder', 'classification', 'epoch', 'label', 'layer', 'loss', 'model', 'neural network', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/GitiHubi/deepAI;0.6;[];Accounting Anomalies;2019-08-07 21:47:09;2020-10-30 23:39:54;97;0.497;deepAI;Machine Learning
Global-Witness;2;;Joint analysis by Who Owns England, Global Witness and Transparency International of overseas corporate ownership of land in England and Wales.;Identifying foreign ownership in the UK.;Government and Public Works;[];Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Python: 0.4%'];;https://github.com/Global-Witness/overseas-companies-land-ownership/;0.0;[];Overseas Company Land Ownership;2019-03-04 12:51:25;2020-10-31 00:49:21;;0.0;overseas-companies-land-ownership;Social Policies
google;16;2017-11-23 01:56:22;DeepVariant is an analysis pipeline that uses a deep neural network to call genetic variants from next-generation DNA sequencing data.;Correctly identify variations from the reference genome in an individual's DNA.;Biotechnological & Life Sciences;['AI', 'ANN', 'CV', 'Convolutional Neural Network', 'GAN', 'Generation', 'ML', 'NN', 'RL', 'Test data', 'Training data', 'classification', 'deep learning', 'epoch', 'filter', 'ground truth', 'label', 'labeled', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'rank', 'recommend', 'train'];Python;['Python: 71.4%', 'C++: 19.2%', 'Shell: 6.0%', 'Starlark: 3.1%', 'Dockerfile: 0.3%'];BSD-3-Clause;https://github.com/google/deepvariant;1.0;['tensorflow'];Variant calling;2020-11-13 20:10:17;2020-10-30 23:53:30;2121;0.683;deepvariant;Genomics
govwiki;2;2017-11-23 22:52:14;Download and parse credit rating history files that US rating agencies generate each month in accordance with SEC Rule 17g-7;Download and parse credit rating history files that US rating agencies generate;Banking & Insurance;[];Python;['Python: 87.4%', 'HTML: 11.7%', 'Shell: 0.9%'];;https://github.com/govwiki/rating_history;0.0;[];Corporate Credit Rating;2017-12-03 20:42:47;2020-10-30 23:43:53;24;0.383;rating_history;Insurance and Risk
greenelab;5;2015-11-03 15:56:31;"Data and code related to the paper ""ADAGE-Based Integration of Publicly Available Pseudomonas aeruginosa..."" Jie Tan, et al  mSystems  2016";Extracting relevant patterns from large sets of gene expression data;Biotechnological & Life Sciences;['AI', 'autoencoder', 'epoch', 'hidden layer', 'layer', 'model', 'output layer', 'train'];Python;['Python: 52.6%', 'R: 35.3%', 'Shell: 12.1%'];BSD-3-Clause;https://github.com/greenelab/adage;1.0;['statsmodels', 'theano'];Autoencoding Expression;2016-05-26 02:15:39;2020-10-30 23:54:08;61;0.462;adage;Genomics
greenelab;3;2017-04-06 13:38:19;Privacy-preserving generative deep neural networks support clinical data sharing;Privacy preserving NNs for clinical data sharing.;Biotechnological & Life Sciences;['AI', 'GAN', 'GBM', 'Generation', 'Logistic regression', 'Random forest', 'ReLu', 'Regression', 'Training data', 'epoch', 'filter', 'label', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 75.8%', 'HTML: 23.1%', 'Python: 1.1%'];;https://github.com/greenelab/SPRINT_gan;1.0;['keras', 'sklearn', 'tensorflow'];Privacy;2019-04-20 03:52:00;2020-10-30 23:47:49;89;0.491;SPRINT_gan;General
GretelDePaepe;0;2015-07-11 07:04:39;Using Python to plot data points on a map and find real estate investment opportunities;Finding real estate opportunities by predicting transforming neighbourhoods.;Real Estate, Rental & Leasing;[];OpenEdge ABL;['OpenEdge ABL: 55.7%', 'Python: 44.3%'];;https://github.com/GretelDePaepe/FindingDonuts;0.0;[];Finding Donuts;2018-01-04 06:18:02;2020-10-31 00:57:15;2;0.152;FindingDonuts;Real Estate
gschivley;0;2017-07-06 12:08:09;Calculation of electricity CO intensity at national, state, and NERC regions from 2001-present;Calculation of electricity CO₂ intensity at national, state, and NERC regions from 2001-present.;Utilities;['Generation', 'K-Nearest neighbor', 'NER', 'NN', 'Regression', 'filter', 'label', 'labeled', 'layer', 'model', 'predict', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.4%', 'Python: 0.6%'];LGPL-3.0;https://github.com/gschivley/carbon-index;1.0;['sklearn', 'statsmodels'];Carbon Index;2019-11-25 20:14:59;2020-10-31 01:01:21;7;0.268;carbon-index;Electricity
gumballhead;0;2018-08-15 13:06:58;USDA Mandatory Price Reporting analytics;Mandatory Price Reporting data from the USDA's Agricultural Marketing Service;Agriculture;['ML'];Jupyter Notebook;['Jupyter Notebook: 50.5%', 'Python: 45.1%', 'Gherkin: 4.0%', 'Shell: 0.4%'];MIT;https://github.com/gumballhead/mpr;0.6;[];MPR;2020-05-12 15:30:59;2020-10-30 23:41:16;2;0.152;mpr;Economics
Gunnstein;2;2017-12-10 17:10:40;fatpack provides functions and classes for fatigue analysis of data series.;Functions and classes for fatigue analysis of data series.;Construction & Engineering;['filter'];Python;['Python: 100.0%'];ISC;https://github.com/Gunnstein/fatpack;0.6;[];Fatpack;2020-03-14 12:54:48;2020-10-31 00:23:32;40;0.427;fatpack;Engineering
gzsuyu;0;2017-12-05 18:36:43;Analyzing NYC Restaurant Inspection Data.;An inspection analysis to see if cleanliness is related to rating;Accommodation & Food;['label', 'machine learning'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/gzsuyu/Data-Analysis-NYC-Restaurant-Inspection-Data;1.0;['nltk', 'sklearn'];Restaurant Inspection;2018-10-18 21:09:23;2020-10-30 23:34:40;2;0.152;Data-Analysis-NYC-Restaurant-Inspection-Data;Restaurant
hackingmaterials;34;2015-09-23 19:53:55;atomate is a powerful software for computational materials science and contains pre-built workflows.;Pre-built workflows for computational material science.;Construction & Engineering;['ML', 'NN', 'RL', 'filter', 'label', 'model', 'train'];Python;['Python: 98.6%', 'Other: 1.4%'];;https://github.com/hackingmaterials/atomate;0.6;[];Atomate;2020-11-25 13:20:48;2020-10-31 00:29:27;130;0.519;atomate;Material Science
hackoregon;4;2018-02-18 05:19:55;The cookiecutter repository for the Transportation Systems analysis of the TriMet congestion data;Transportation systems analysis;Utilities;['ML', 'RL', 'Test data', 'filter', 'layer', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 73.0%', 'HTML: 26.3%', 'Shell: 0.3%', 'TSQL: 0.2%', 'Python: 0.2%', 'Makefile: 0.0%'];MIT;https://github.com/hackoregon/2019-transportation-data-science;0.6;[];Congestion Analysis;2019-09-11 07:13:36;2020-10-31 01:06:12;4;0.214;2019-transportation-data-science;Transportation
hallba;0;2018-01-16 10:02:55;Systems biology practical on writing simulators with F# and Z3;Systems biology practical on writing simulators with F# and Z3;Biotechnological & Life Sciences;['AI', 'NN', 'model', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/hallba/WritingSimulators;0.6;[];Systems Biology Simulations;2020-11-10 17:25:45;2020-10-30 23:48:25;4;0.214;WritingSimulators;General
hamaadshah;0;2018-08-06 16:09:44;Using Bidirectional Generative Adversarial Networks to estimate Value-at-Risk for Market Risk Management using TensorFlow.;Estimate Value-at-Risk for market risk management using Keras and TensorFlow.;Banking & Insurance;['GAN', 'Generative Adversarial Network', 'autoencoder', 'ground truth', 'model', 'train'];Jupyter Notebook;['Jupyter Notebook: 93.9%', 'R: 6.1%'];Apache-2.0;https://github.com/hamaadshah/market_risk_gan_keras;1.0;['keras', 'sklearn', 'tensorflow'];VaR GaN;2020-11-22 19:03:26;2020-10-30 23:43:34;36;0.418;market_risk_gan_keras;Insurance and Risk
han-yan-ds;0;2019-03-20 02:31:58;Kaggle Project: Bosch Manufacturing;Bosch manufacturing project, Kaggle.;Manufacturing;['AI', 'Random forest', 'Support Vector Machines', 'Test data', 'label', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/han-yan-ds/Kaggle-Bosch;1.0;['sklearn'];Bosch Manufacturing;2019-12-20 20:03:58;2020-10-31 00:43:55;2;0.152;Kaggle-Bosch;General
hardmaru;7;2017-10-29 07:20:10;Evolution Strategies Tool;Evolution Strategies Tool;Biotechnological & Life Sciences;['AI', 'Generation', 'LSTM', 'Reinforcement learning', 'layer', 'model', 'neural network', 'recommend', 'reward', 'train'];Jupyter Notebook;['Jupyter Notebook: 65.3%', 'Python: 34.7%'];;https://github.com/hardmaru/estool;0.6;[];Evolutionary;2020-06-16 01:42:34;2020-10-31 00:21:11;735;0.628;estool;Life-sciences
Hasan330;0;2017-05-20 11:46:58;A predictive model for Order Cancellation among customers to try to predict suspicious bookings in the hotel industry;Order cancellation prediction for hotels;Accommodation & Food;['Decision Tree', 'Logistic regression', 'NN', 'Random forest', 'Regression', 'Training data', 'decision tree', 'label', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Hasan330/Order-Cancellation-Prediction-Model;1.0;['sklearn'];Orders;2017-05-20 11:49:02;2020-10-30 23:39:13;2;0.152;Order-Cancellation-Prediction-Model;Accomodation
hathix;0;2017-08-10 17:50:56;Automatically transcribes YouTube videos;Automatically transcribe YouTube videos.;Media & Publishing;['ML', 'RL', 'filter', 'recommend'];Jupyter Notebook;['Jupyter Notebook: 80.1%', 'Python: 19.9%'];MIT;https://github.com/hathix/youtube-transcriber;0.6;[];YouTube transcriber;2020-06-11 12:35:25;2020-10-31 00:44:45;60;0.46;youtube-transcriber;Marketing
hbutsuak95;0;2016-11-02 00:41:52;"The repository contains code associated with the project ""Optimization of Properties of Hot-rolled Steel"" supervised by Prof. Pabitra Mitra and Itishree Mohanty, Research and Development, Tata Steel";Optimisation of steel.;Construction & Engineering;['ML', 'NN', 'RNN', 'epoch', 'model'];Jupyter Notebook;['Jupyter Notebook: 96.1%', 'Python: 2.0%', 'Lua: 1.9%'];;https://github.com/hbutsuak95/Quality-Optimization-of-Steel;1.0;['skimage', 'sklearn', 'tensorflow'];Steel;2017-03-14 18:29:39;2020-10-31 00:29:35;1;0.099;Quality-Optimization-of-Steel;Material Science
hep-lbdl;2;2016-11-20 18:27:46;Training, generation, and analysis code for Learning Particle Physics by Example: Location-Aware Generative Adversarial Networks for Physics;Training, generation, and analysis code for learning Particle Physics;Physics;['GAN', 'Generation', 'Generative Adversarial Network', 'ML', 'Validation data', 'epoch', 'label', 'layer', 'model', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 94.2%', 'Python: 5.7%', 'Makefile: 0.1%'];;https://github.com/hep-lbdl/adversarial-jets;1.0;['keras', 'sklearn'];Particle Physics;2017-08-25 18:52:17;2020-10-31 00:46:13;52;0.449;adversarial-jets;General
hep-lbdl;5;2017-02-17 19:10:23;Generative Adversarial Networks for High Energy Physics extended to a multi-layer calorimeter simulation;Generative Adversarial Networks for High Energy Physics.;Physics;['GAN', 'Generation', 'Generative Adversarial Network', 'ML', 'Training data', 'Validation data', 'epoch', 'label', 'layer', 'loss', 'model', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 94.0%', 'Python: 3.3%', 'C++: 2.7%'];;https://github.com/hep-lbdl/CaloGAN;1.0;['keras', 'sklearn'];High Energy GAN;2020-10-21 10:40:23;2020-10-31 00:47:43;83;0.486;CaloGAN;Machine Learning
higgsfield;0;2017-12-27 06:49:32;Pytorch Implementation of Interaction Networks for Learning about Objects, Relations and Physics;Interaction Networks for Learning about Objects, Relations and Physics.;Physics;['AI', 'Understanding', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 89.4%', 'Python: 10.6%'];;https://github.com/higgsfield/interaction_network_pytorch;0.6;[];Interaction Networks;2017-12-27 09:51:53;2020-10-31 00:46:10;96;0.497;interaction_network_pytorch;General
HIPS;5;2014-06-19 16:47:17;Convolutional nets which can take molecular graphs of arbitrary size as input.;A convolutional net that can learn features.;Biotechnological & Life Sciences;['CV', 'Regression', 'loss', 'model', 'predict', 'regression', 'train'];TeX;['TeX: 67.7%', 'Python: 19.2%', 'PostScript: 9.2%', 'HTML: 3.8%', 'Shell: 0.1%'];MIT;https://github.com/HIPS/neural-fingerprint;0.6;[];Novel Molecules;2018-01-23 17:41:49;2020-10-30 23:50:44;364;0.587;neural-fingerprint;Chemoinformatics and drug discovery
HitarthiShah;0;2018-01-20 22:04:53;Performed exploratory analysis of how people are affected by radiations emitted by nuclear power plants by leveraging Big Data tools including PySpark, Spark Streaming, Spark ML, R, R Shiny and Hadoop.  Conducting a spatiotemporal analysis of the radiation level around the world.;How people are affected by radiations emitted by nuclear power plants;Construction & Engineering;['Linear regression', 'ML', 'Regression', 'label', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'R: 0.1%'];;https://github.com/HitarthiShah/Radiation-Data-Analysis;0.6;[];Nuclear Radiation;2018-01-20 22:09:14;2020-10-31 00:25:44;4;0.214;Radiation-Data-Analysis;Engineering
hkacmaz;0;;"After a dept has been legally declared ""uncollectible"" by a bank, the account is considered to be ""charged-off"". But that doesn't mean the bank simply walks away from the dept. They still want to collect some fo the money they are owed.";Recovery of money owed.;Banking & Insurance;['Linear regression', 'Regression', 'model', 'regression'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/hkacmaz/Bankin_Recovery/;1.0;['statsmodels'];Recovery;2019-05-07 06:35:19;2020-10-31 00:20:32;;0.0;Bankin_Recovery;Insurance and Risk
hockeyjudson;0;;NER For Legal Documents;NER For Legal Documents.;Justice, Law and Regulations;['NER'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/hockeyjudson/Legal-Entity-Detection/;1.0;['nltk'];Legal Entity Detection;2019-03-19 19:34:50;2020-10-31 00:41:56;;0.0;Legal-Entity-Detection;Tools
HowardNTUST;7;2018-06-24 05:41:52;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Marketing data science applications.;Media & Publishing;['AI', 'Clustering', 'GBM', 'Linear regression', 'Logistic regression', 'ML', 'RL', 'Random forest', 'Regression', 'Test data', 'classification', 'clustering', 'epoch', 'fitting', 'label', 'loss', 'model', 'predict', 'recommend', 'regression', 'train'];HTML;['HTML: 56.5%', 'Jupyter Notebook: 42.9%', 'Other: 0.6%'];;https://github.com/HowardNTUST/Marketing-Data-Science-Application;1.0;['lightgbm', 'nltk', 'sklearn', 'statsmodels', 'xgboost'];Marketing Scripts;2020-11-16 11:39:26;2020-10-31 00:45:33;62;0.463;Marketing-Data-Science-Application;Marketing
hussius;10;2016-06-01 20:44:31;A list of deep learning implementations in biology;Language transfer learning model for genomics;Biotechnological & Life Sciences;['AI', 'ANN', 'Boltzmann Machine', 'CNN', 'Clustering', 'Computer Vision', 'Convolutional Neural Network', 'DL', 'GAN', 'Generation', 'Generative Adversarial Network', 'LSTM', 'Machine Translation', 'NLP', 'NN', 'Natural Language', 'Natural Language Processing', 'Propagation', 'RL', 'RNN', 'Random forest', 'Recurrent Neural Network', 'Reinforcement learning', 'Speech Recognition', 'Supervised learning', 'Text Classification', 'Unsupervised learning', 'artificial intelligence', 'autoencoder', 'classification', 'clustering', 'deep learning', 'filter', 'hidden layer', 'input layer', 'label', 'labeled', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'recognition', 'train'];;[];;https://github.com/hussius/deeplearning-biology;0.6;[];NLP Sequencing;2020-01-02 18:08:44;2020-10-30 23:50:32;1502;0.666;deeplearning-biology;Sequencing
hvantil;0;2018-05-11 16:30:33;Electricity demand forecasting for Austin, TX, using a combination of timeseries methods and regression models;Electricity demand forecasting for Austin.;Utilities;['Gradient Boosting', 'Gradient boosting', 'Linear regression', 'ML', 'Regression', 'layer', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/hvantil/ElectricityDemandForecasting;1.0;['sklearn', 'statsmodels'];Demand Forecasting;2018-05-13 19:09:47;2020-10-31 01:01:23;16;0.346;ElectricityDemandForecasting;Electricity
hyattsaleh15;0;2018-07-19 20:30:40;This tools aims to recommend a user the top 5 real estate properties that matches their search using unsupervised clustering algorithms and supervised (decision trees) ones.;This tools aims to recommend a user the top 5 real estate properties that matches their search.;Real Estate, Rental & Leasing;['Clustering', 'Decision Tree', 'clustering', 'decision tree', 'filter', 'label', 'model', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/hyattsaleh15/RealStateRecommender;1.0;['sklearn'];Recommender;2019-02-07 19:49:33;2020-10-31 00:57:50;3;0.188;RealStateRecommender;Real Estate
IBM;7;2017-09-26 18:01:16;Method for Predicting failures in Equipment using Sensor data. Sensors mounted on devices like IoT devices, Automated manufacturing like Robot arms, Process monitoring and Control equipment etc., collect and transmit data on a continuous basis which is Time stamped.;Method for Predicting failures in Equipment using Sensor data.;Manufacturing;['AI', 'Logistic regression', 'NER', 'RL', 'Regression', 'Test data', 'Understanding', 'model', 'predict', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/IBM/iot-predictive-analytics;1.0;['sklearn'];Predictive Analytics;2019-06-04 14:43:29;2020-10-31 00:44:16;53;0.45;iot-predictive-analytics;Failure
IBM-Cloud-DevFest-2018;0;;Content for the workshop about Data Science for Banking;A system for credit card approval.;Banking & Insurance;['CNN', 'Logistic regression', 'ML', 'NN', 'RL', 'Regression', 'Test data', 'Training data', 'Understanding', 'classification', 'deep learning', 'epoch', 'input layer', 'label', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'recognition', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.0%', 'Python: 1.0%'];;https://github.com/IBM-Cloud-DevFest-2018/Data-Science-for-Banking/;1.0;['keras', 'sklearn'];Credit Approval;2018-06-28 11:11:38;2020-10-31 00:19:41;;0.0;Data-Science-for-Banking;Consumer Financial
IBM-DSE;0;2017-10-05 13:46:05;Notebooks & Data for CyberShop Retail Use Case;Notebooks & Data for CyberShop Retail Use Case;Wholesale & Retail;['Logistic regression', 'ML', 'Regression', 'Test data', 'Training data', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/IBM-DSE/CyberShop-Analytics;0.6;[];Retail Use-case;2017-12-11 21:29:00;2020-10-31 01:07:46;0;0.0;CyberShop-Analytics;Retail
ikatsov;0;2017-11-24 20:15:33;A collection of reference machine learning and optimization models for enterprise operations: marketing, pricing, supply chain;Models from Introduction to Algorithmic Marketing book;Media & Publishing;['AI', 'AutoML', 'Bayesian', 'CV', 'Clustering', 'Convolutional Neural Network', 'Decision Tree', 'GBM', 'GRU', 'LSTM', 'Linear regression', 'Logistic regression', 'ML', 'NLP', 'NN', 'RL', 'RNN', 'Recurrent Neural Network', 'Regression', 'Reinforcement learning', 'Test data', 'Training data', 'Understanding', 'VGG', 'autoencoder', 'clustering', 'decision tree', 'deep learning', 'filter', 'fitting', 'ground truth', 'hidden layer', 'input layer', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'recommend', 'regression', 'reward', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Python: 0.3%'];Apache-2.0;https://github.com/ikatsov/algorithmic-examples;1.0;['gensim', 'keras', 'lightgbm', 'sklearn', 'statsmodels', 'tensorflow', 'theano', 'xgboost'];Algorithmic Marketing;2020-11-15 03:06:16;2020-10-31 00:45:25;330;0.581;algorithmic-examples;Marketing
imhgchoi;0;2018-08-05 02:13:21;Applied an ARIMA-LSTM hybrid model to predict future price correlation coefficients of two assets;Hybrid model to predict future price correlation coefficients of two assets;Finance;['AI', 'Generation', 'LSTM', 'NN', 'RNN', 'Recurrent Neural Network', 'Understanding', 'epoch', 'filter', 'fitting', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];;https://github.com/imhgchoi/Corr_Prediction_ARIMA_LSTM_Hybrid;1.0;['keras', 'statsmodels'];ARIMA-LTSM Hybrid;2018-10-01 11:25:53;2020-10-31 00:37:41;205;0.55;Corr_Prediction_ARIMA_LSTM_Hybrid;Trading & Investment
ishank011;0;2017-09-27 19:57:13;Solution of the given task of predicting the buying and selling volume of the corporate bonds.;Predicting the buying and selling volume of the corporate bonds.;Finance;['predict', 'rank'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/ishank011/gs-quantify-bond-prediction;1.0;['sklearn'];Corporate Bonds;2017-09-27 20:00:43;2020-10-31 00:36:26;6;0.253;gs-quantify-bond-prediction;Trading & Investment
iurisegtovich;4;2016-09-13 21:32:29;Educational ipython source code for applied thermodynamics.;Applied Thermodynamics;Construction & Engineering;['AI', 'GRU', 'Generation', 'filter', 'label', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 98.5%', 'Fortran: 1.4%', 'Other: 0.1%'];;https://github.com/iurisegtovich/PyTherm-applied-thermodynamics;0.6;[];PyTherm;2020-03-24 18:06:59;2020-10-31 00:24:29;33;0.411;PyTherm-applied-thermodynamics;Engineering
ivan-bilan;0;2017-10-25 17:28:06;Analyzing paintings to find out their year of creation;Analysing paintings to find out their year of creation.;Miscellaneous;['CNN', 'NN', 'VGG', 'epoch', 'layer', 'loss', 'model', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/ivan-bilan/Painting_Forensics;1.0;['keras'];Painting Forensics;2019-08-22 07:15:11;2020-10-31 00:45:46;0;0.0;Painting_Forensics;Art
jamesypeng;3;2017-09-13 13:03:52;Reducing response times with predictive modeling, optimization, and automation. Efficiently staging and dispatching emergency medical services (EMS) is critical in an industry where saving minutes saves lives. EMS providers are often privately owned, and their performance can be measured by their response times (time from receiving a call to arr;Reducing response times with predictive modeling, optimization, and automation;Emergency & Relief;['AI', 'CV', 'Clustering', 'DL', 'Generation', 'K-Means', 'LSTM', 'ML', 'NER', 'NN', 'RL', 'Regression', 'Test data', 'Understanding', 'classification', 'clustering', 'epoch', 'filter', 'label', 'labeled', 'layer', 'loss', 'model', 'predict', 'rank', 'recognition', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 60.5%', 'Python: 34.6%', 'HTML: 2.7%', 'JavaScript: 1.4%', 'CSS: 0.8%', 'Shell: 0.0%'];;https://github.com/jamesypeng/Smarter-Emergency-Dispatch;1.0;['keras', 'nltk', 'sklearn', 'statsmodels', 'tensorflow', 'xgboost'];Emergency Dispatch;2017-12-12 01:46:16;2020-10-31 00:32:52;5;0.236;Smarter-Emergency-Dispatch;Preventative and Reactive
janzaib-masood;2;2018-01-09 02:02:26;This Project aims to explore the demographic and family features that have an impact a student's academic performance. The data consists of 6000 student entries from Balochistan. In this Project, we use various classifiers such as Decision Trees, Logistic Regression, K-Nearest Neighbors, Random Forest and Multilayer Perceptrons for the classific;Student exam performance.;Education & Research;['AI', 'Decision Tree', 'K-Nearest neighbor', 'Logistic regression', 'NN', 'Random forest', 'Regression', 'classification', 'decision tree', 'label', 'layer', 'regression'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/janzaib-masood/Educational-Data-Mining;1.0;['sklearn'];Student Performance 2;2019-11-24 05:02:15;2020-10-31 00:31:05;13;0.327;Educational-Data-Mining;Student
Jean-njoroge;0;;Predicting of Coal Production Using Random Forest;Predicting coal production.;Utilities;['Random forest', 'Regression', 'classification', 'label', 'model', 'predict', 'regression'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/Jean-njoroge/coal-exploratory/;1.0;['sklearn'];Coal Prediction;2018-02-28 01:49:49;2020-10-31 01:01:57;;0.0;coal-exploratory;Coal, Oil & Gas
jellespijker;0;2017-01-28 11:37:35;Continuation for this project is stopped. Focus is now on the MechEng modules ( https://github.com/mecheng ) A Python module for mechanical engineers. Project which is mostly based on the books of Roloff / Matek (Machineonderdelen), Hibbeler (Statics, Mechanics and Dynamics), Kals (Industriele productie) and R. Mott (Applied Fluid Mechanics). Al;A Python module for mechanical engineers;Construction & Engineering;['loss'];Python;['Python: 100.0%'];MIT;https://github.com/jellespijker/pymech;0.6;[];Pymech;2017-07-17 05:27:26;2020-10-31 00:24:10;6;0.253;pymech;Engineering
jerryxyx;0;2018-06-25 03:32:25;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Initial analysis investigating horse betting;Miscellaneous;['Linear regression', 'NN', 'Random forest', 'Regression', 'Test data', 'Understanding', 'classification', 'filter', 'label', 'loss', 'model', 'predict', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.3%', 'Python: 0.7%'];;https://github.com/jerryxyx/EquineTrading;1.0;['sklearn', 'statsmodels'];Equine Trading;2018-06-30 23:34:18;2020-10-31 00:46:06;3;0.188;EquineTrading;Betting
jfzhang95;0;2018-01-08 02:48:38;Theano implementation of our paper 'Developing a Long Short-Term Memory (LSTM) based Model for Predicting Water Table Depth in Agricultural Areas', Journal of Hydrology.;Predicting water table depth in agricultural areas.;Agriculture;['LSTM', 'NN', 'loss', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 83.8%', 'Python: 16.2%'];MIT;https://github.com/jfzhang95/LSTM-water-table-depth-prediction;1.0;['sklearn', 'theano'];Water Table;2019-03-08 02:52:18;2020-10-30 23:41:24;26;0.39;LSTM-water-table-depth-prediction;Development
jhconning;0;;For 'Economics Development II' PhD seminar at CUNY Graduate Center. Generates docs at:;Development microeconomics are written mostly as interactive jupyter notebooks;Economics;['ML', 'RL', 'Regression', 'Understanding', 'label', 'layer', 'loss', 'model', 'predict', 'rank', 'regression', 'reward', 'train'];Jupyter Notebook;['Jupyter Notebook: 75.9%', 'HTML: 16.8%', 'TeX: 3.7%', 'CSS: 1.9%', 'Python: 0.8%', 'Stata: 0.5%', 'Other: 0.4%'];BSD-3-Clause;https://github.com/jhconning/Dev-II/;1.0;['statsmodels'];Development Economics;2020-04-17 17:37:52;2020-10-31 00:30:07;;0.0;Dev-II;General
jinsonfernandez;0;2017-07-03 10:16:00;Using NLP and Classification Techniques to better help identify the uesfull Budget resources;NLP classification for budget resources.;Education & Research;['NLP', 'Random forest', 'Training data', 'classification', 'label', 'loss', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/jinsonfernandez/NLP_School-Budget-Project;1.0;['sklearn'];Budget NLP;2017-07-03 10:20:25;2020-10-31 00:31:52;0;0.0;NLP_School-Budget-Project;School
jjakimoto;0;2018-06-29 21:21:17;Advances in Financial Machine Learning;Additional implementation of Advances in Financial Machine Learning (Book);Finance;['CV', 'Regression', 'Test data', 'Training data', 'filter', 'fitting', 'label', 'loss', 'machine learning', 'model', 'predict', 'regression', 'train'];Python;['Python: 100.0%'];MIT;https://github.com/jjakimoto/finance_ml;1.0;['sklearn', 'statsmodels'];Advanced Pricing ML;2019-12-28 07:17:25;2020-10-31 00:37:55;252;0.564;finance_ml;Trading & Investment
jlperla;2;2017-12-21 20:20:17;Course Materials for ECON407 in winter of 2018;Topics in macroeconomics with notebook examples.;Economics;['label', 'model', 'predict', 'reward'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/jlperla/ECON407_2018;0.6;[];Macroeconomics;2018-04-05 21:27:34;2020-10-31 00:30:12;9;0.292;ECON407_2018;General
joelowj;0;2018-06-26 04:30:08;Machine Learning and Reinforcement Learning in Finance New York University Tandon School of Engineering;Machine Learning and Reinforcement Learning in Finance.;Finance;['AI', 'Decision Tree', 'Linear regression', 'Logistic regression', 'ML', 'RL', 'Random forest', 'ReLu', 'Regression', 'Reinforcement learning', 'Test data', 'Training data', 'classification', 'decision tree', 'filter', 'fitting', 'label', 'loss', 'machine learning', 'model', 'neural network', 'neuron', 'predict', 'regression', 'reward', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/joelowj/Machine-Learning-and-Reinforcement-Learning-in-Finance;1.0;['sklearn', 'statsmodels', 'tensorflow'];ML & RL NYU;2020-03-18 13:44:30;2020-10-31 00:38:31;162;0.534;Machine-Learning-and-Reinforcement-Learning-in-Finance;Trading & Investment
johnfwhitesell;0;;Code used for census pulls in DataKind hackaton;Pull variables from the 5-year American Community Survey.;Government and Public Works;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/johnfwhitesell/CensusPull/;0.0;[];Census Data API;2018-11-08 01:04:39;2020-10-31 00:51:35;;0.0;CensusPull;Charities
johnpfay;0;2017-06-14 13:42:12;Assembles water budget data for the US from existing data sources.;Assembles water budget data for the US from existing data source;Utilities;['AI', 'RL', 'label', 'model'];Jupyter Notebook;['Jupyter Notebook: 96.6%', 'Python: 3.4%'];;https://github.com/johnpfay/USWaterAccounting;0.6;[];Water Accounting;2017-10-26 18:07:20;2020-10-31 01:04:01;0;0.0;USWaterAccounting;Water & Pollution
JonathanREB;0;;Analysis of school's budget;School analysis.;Education & Research;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/JonathanREB/Budget_SchoolsAnalysis/;0.0;[];PyCity;2018-12-11 03:33:31;2020-10-31 00:31:49;;0.0;Budget_SchoolsAnalysis;School
JorgeDeLosSantos;1;2016-01-24 06:58:13;A Python library for structural analysis using the finite element method;Structural analysis using the finite element method.;Construction & Engineering;['ML', 'RL', 'label', 'loss', 'model', 'train'];Python;['Python: 99.9%', 'Batchfile: 0.1%'];MIT;https://github.com/JorgeDeLosSantos/nusa;0.6;[];Nusa;2020-10-07 19:10:50;2020-10-31 00:22:58;65;0.467;nusa;Engineering
jorgehas;0;2018-06-19 20:32:46;Simple python script for industrial defect inspection( counting the number of pills during manufacturing);Smart defect detection for pill manufacturing.;Manufacturing;['CV'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/jorgehas/smart-defect-inspection;1.0;['imutils'];Defect Detection;2020-11-14 23:02:59;2020-10-31 00:44:21;13;0.327;smart-defect-inspection;Failure
josephofiowa;23;2016-09-27 04:35:52;Guess the correct restaurants on DC's Michelin Guide by 10/12/16. Win $500 and an invite to the French Ambassador's residence.;Predict the likelihood that restaurant is a Michelin restaurant;Accommodation & Food;['CV', 'Decision Tree', 'Logistic regression', 'ML', 'NN', 'RL', 'Random forest', 'Regression', 'Test data', 'Training data', 'classification', 'decision tree', 'filter', 'fitting', 'label', 'layer', 'loss', 'model', 'neural network', 'output layer', 'predict', 'rank', 'recognition', 'regression', 'reward', 'train'];Jupyter Notebook;['Jupyter Notebook: 96.1%', 'Python: 3.6%', 'Other: 0.3%'];;https://github.com/josephofiowa/dc-michelin-challenge;1.0;['keras', 'nltk', 'pattern', 'sklearn'];Predict Michelin;2016-10-17 23:56:37;2020-10-30 23:34:39;6;0.253;dc-michelin-challenge;Restaurant
jrieke;0;2016-02-20 00:19:59;Neural networks with LSTM to classify and predict biological cell movement;LSTM to predict biological cell movement.;Biotechnological & Life Sciences;['Generation', 'LSTM', 'NN', 'RNN', 'Test data', 'Training data', 'Validation data', 'classification', 'epoch', 'label', 'layer', 'loss', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/jrieke/lstm-biology;1.0;['keras', 'theano'];Cell Movement;2016-09-09 14:42:16;2020-10-30 23:48:29;2;0.152;lstm-biology;General
JSchelldorfer;0;2018-10-24 11:05:52;Code for the Actuarial Data Science Tutorials published at https://actuarialdatascience.org.;A range of actuarial tools in R.;Banking & Insurance;['ANN', 'CNN', 'CV', 'Clustering', 'Convolutional Neural Network', 'DL', 'GRU', 'Gradient Boosting', 'Gradient boosting', 'K-Means', 'LSTM', 'ML', 'NLP', 'NN', 'Natural Language', 'Natural Language Processing', 'RNN', 'Random forest', 'Recurrent Neural Network', 'Regression', 'Supervised learning', 'Test data', 'Training data', 'Understanding', 'Unsupervised learning', 'activation function', 'classification', 'clustering', 'deep learning', 'epoch', 'filter', 'fitting', 'label', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'output layer', 'predict', 'rank', 'recognition', 'recommend', 'regression', 'train'];HTML;['HTML: 62.1%', 'Jupyter Notebook: 36.9%', 'Other: 1.0%'];;https://github.com/JSchelldorfer/ActuarialDataScience;1.0;['keras', 'nltk', 'skimage', 'sklearn', 'spacy', 'tensorflow', 'xgboost'];Actuarial Sciences ®;2020-09-28 17:05:45;2020-10-30 23:43:26;46;0.439;ActuarialDataScience;Insurance and Risk
jstac;2;;Code and notebooks for Econometric Theory;Notebooks of A Primer on Econometric theory.;Economics;['Bayesian', 'Regression', 'fitting', 'model', 'regression'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/jstac/econometrics/;1.0;['sklearn', 'statsmodels'];Econometric Theory;2016-09-19 01:09:26;2020-10-31 00:31:00;;0.0;econometrics;Computational
jstac;14;2015-12-15 10:30:27;Quantitative Economics;Quantitative economics course by NYU;Economics;['Linear regression', 'Regression', 'Understanding', 'fitting', 'label', 'layer', 'machine learning', 'model', 'predict', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 93.8%', 'HTML: 5.8%', 'Julia: 0.4%', 'C: 0.0%', 'MATLAB: 0.0%', 'Python: 0.0%'];BSD-3-Clause;https://github.com/jstac/quantecon_nyu_2016;1.0;['sklearn', 'statsmodels'];Quant Econ;2016-05-08 23:37:34;2020-10-31 00:30:33;84;0.486;quantecon_nyu_2016;Computational
jubins;3;2016-11-23 22:36:17;Food image prediction using TensorFlow and calorie estimation using K-Nearest-Neighbors algoritm;Estimate calories from photos of food;Accommodation & Food;['CV', 'Clustering', 'Computer Vision', 'RL', 'Test data', 'Training data', 'clustering', 'ground truth', 'label', 'layer', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 97.5%', 'Python: 2.5%'];;https://github.com/jubins/DeepLearning-Food-Image-Recognition-And-Calorie-Estimation;1.0;['sklearn', 'tensorflow'];Calorie Estimation;2020-10-07 23:20:39;2020-10-30 23:33:21;38;0.423;DeepLearning-Food-Image-Recognition-And-Calorie-Estimation;Food
JulianMar11;3;2018-09-18 07:09:14;framework to analyze newspapers with respect to their political conviction using entity sentiments of party representatives.;Analyse newspapers with respect to their political conviction using entity sentiments of party representatives.;Government and Public Works;['AI', 'GRU', 'NLU', 'NN', 'Named Entity Recognition', 'RL', 'Regression', 'Sentiment Analysis', 'Understanding', 'recognition', 'regression'];Jupyter Notebook;['Jupyter Notebook: 92.9%', 'HTML: 6.4%', 'Python: 0.7%'];MIT;https://github.com/JulianMar11/SentimentPoliticalCompass;0.6;[];Sentiment;2018-09-28 22:22:00;2020-10-31 00:56:19;11;0.311;SentimentPoliticalCompass;Politics
k2inno-tech;4;2016-07-11 23:40:26;A collection of Jupyter notebooks authored by the UCSD Center for Computational Biology & Bioinformatics (http://compbio.ucsd.edu). These include methods on utilizing cloud computing resources and analysis of data from next-generation sequencing, systems biology, and microbiome.;Collection of computation biology and bioinformatics notebooks.;Biotechnological & Life Sciences;['AI', 'CV', 'Clustering', 'Decision Tree', 'Generation', 'Propagation', 'Understanding', 'clustering', 'decision tree', 'filter', 'label', 'labeled', 'predict', 'rank'];Jupyter Notebook;['Jupyter Notebook: 99.3%', 'Other: 0.7%'];MIT;https://github.com/k2inno-tech/jupyter-genomics;1.0;['nltk', 'sklearn'];Jupyter Genomics;2016-07-11 22:37:37;2020-10-30 23:52:53;1;0.099;jupyter-genomics;Genomics
kaiareyes;0;2018-07-31 10:51:08;An investigation of Local Government Area ambulance time variation in Victoria using open datasets. Pre-processing, integration, analysis, and visualization of multiple datasets using pandas and numpy libraries in Python.;An investigation of Local Government Area ambulance time variation in Victoria.;Emergency & Relief;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/kaiareyes/ambulance;0.0;[];Ambulance Analysis;2018-07-31 10:56:45;2020-10-31 00:34:56;0;0.0;ambulance;Ambulance:
kaitai;0;;Various stress testing/risk modeling techniques in a jupyter notebook, in Python 3.4.;A notebook with various stress testing exercises.;Banking & Insurance;['Linear regression', 'Regression', 'fitting', 'regression'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/kaitai/stress-testing-with-jupyter/;1.0;['statsmodels'];Stress Testing Techniques;2019-09-12 00:48:45;2020-10-31 00:20:27;;0.0;stress-testing-with-jupyter;Insurance and Risk
Karagul;0;;Bank of England stress test analyses;Stress test results and plotting.;Banking & Insurance;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/Karagul/BoE_stress_test/;0.0;[];BoE stress test;2018-12-18 21:41:29;2020-10-31 00:20:30;;0.0;BoE_stress_test;Insurance and Risk
kaumaron;2;;Data Science Portfolio for Andrew DeCotiis-Mauro. Covers topics such as CEO compensation, congressional partisanship, web scraping, grade analysis and education.;Analysis of CEO compensation.;Banking & Insurance;['Linear regression', 'ML', 'Regression', 'Test data', 'artificial intelligence', 'artificial neural network', 'deep learning', 'model', 'neural network', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.2%', 'Python: 0.8%'];;https://github.com/kaumaron/Data_Science/;1.0;['keras', 'sklearn', 'statsmodels'];CEO;2020-01-28 23:39:48;2020-10-31 00:19:59;;0.0;Data_Science;Management and Operations
Kevin-McIsaac;0;2017-01-19 22:49:18;Australian nightlife and its regulation and policing (;Australian nightlife and its regulation and policing;Justice, Law and Regulations;['loss'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];;https://github.com/Kevin-McIsaac/Nightlife;1.0;['statsmodels'];Night Life Regulation;2017-02-26 23:15:03;2020-10-31 00:42:48;6;0.253;Nightlife;Policy and Regulatory
khanhnamle1994;0;2019-01-11 12:28:08;A clothing retrieval and visual recommendation model for fashion images.;A clothing retrieval and visual recommendation model for fashion images;Miscellaneous;['Image classification', 'ResNet', 'VGG', 'classification', 'deep learning', 'layer', 'model', 'predict', 'recommend', 'train'];Python;['Python: 100.0%'];;https://github.com/khanhnamle1994/fashion-recommendation;1.0;['tensorflow'];Fashion;2019-02-08 20:47:21;2020-10-31 00:45:55;174;0.539;fashion-recommendation;Tourism
kkirchhoff01;0;2015-12-17 06:26:44;Program to analyze political debates.;Program to analyze political debates.;Government and Public Works;['NN', 'machine learning'];Jupyter Notebook;['Jupyter Notebook: 69.9%', 'Python: 30.1%'];;https://github.com/kkirchhoff01/DebateAnalysis;1.0;['nltk'];Debate Analysis;2016-06-01 18:20:14;2020-10-31 00:56:51;1;0.099;DebateAnalysis;Politics
klin90;0;2017-06-21 06:07:22;Analysis of Restaurant Competitiveness;Restaurant competitiveness analysis;Accommodation & Food;['AI', 'Bayesian', 'Clustering', 'NER', 'Propagation', 'RL', 'Supervised learning', 'clustering', 'loss', 'model', 'predict'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/klin90/missinglink;0.6;[];Competition;2017-06-24 15:49:32;2020-10-30 23:34:46;2;0.152;missinglink;Restaurant
kmunger;0;2019-04-06 17:21:26;Replication for Munger (2019) -- Mapping Politics on YouTube;Mapping Politics on YouTube;Government and Public Works;[];Jupyter Notebook;['Jupyter Notebook: 64.0%', 'R: 36.0%'];;https://github.com/kmunger/YT_descriptive;0.0;[];YT Politics;2020-06-12 03:15:21;2020-10-31 00:57:09;2;0.152;YT_descriptive;Politics
kralmachine;0;2019-01-24 09:26:48;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Wholesale customer analysis.;Wholesale & Retail;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/kralmachine/WholesaleCustomerAnalysis;0.4;['sklearn'];Customer Analysis;2019-01-24 09:28:37;2020-10-31 01:07:28;3;0.188;WholesaleCustomerAnalysis;Wholesale
krpiyush5;0;2018-11-21 19:51:11;Machine learning algorithm such as KNN,Naive Bayes,Logistic Regression,SVM,Decision Trees,Random Forest,k means and Truncated SVD on amazon fine food review;Machine learning algorithm for amazon fine food review;Accommodation & Food;['Clustering', 'Decision Tree', 'K-Means', 'LSTM', 'Logistic regression', 'NN', 'Naive Bayes', 'Random forest', 'Regression', 'Test data', 'Validation data', 'clustering', 'decision tree', 'filter', 'label', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/krpiyush5/Amazon-Fine-Food-Review;1.0;['gensim', 'nltk', 'sklearn', 'xgboost'];Amazon Food Review;2019-07-26 16:08:23;2020-10-30 23:34:10;21;0.371;Amazon-Fine-Food-Review;Food
kshitizkhanal7;2;2016-11-20 10:42:27;An Open Education experiment teaching Aerodynamics using Paper Planes;Aerodynamics using planes.;Construction & Engineering;[];Jupyter Notebook;['Jupyter Notebook: 91.9%', 'HTML: 8.1%'];;https://github.com/kshitizkhanal7/Aerogami;0.0;[];Aerogami;2020-09-30 13:41:59;2020-10-31 00:24:31;14;0.334;Aerogami;Engineering
KSpiliop;0;2017-04-23 19:26:01;Tuning XGBoost hyper-parameters with Simulated Annealing;Fraud Detection by tuning XGBoost hyper-parameters with Simulated Annealing;Banking & Insurance;['Generation', 'Logistic regression', 'Regression', 'Test data', 'Validation data', 'classification', 'fitting', 'label', 'loss', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/KSpiliop/Fraud_Detection;1.0;['sklearn', 'xgboost'];XGBoost;2017-04-26 18:15:31;2020-10-30 23:42:56;35;0.416;Fraud_Detection;Fraud
LaranIkal;0;2019-03-23 16:20:21;Identifying product anomalies with R and H2O;Maitenance Prediction For Manufacturing Stations.;Manufacturing;[];;[];MIT;https://github.com/LaranIkal/ProductAnomaliesDetection;0.0;[];Maintenance Prediction;2019-05-13 12:18:10;2020-10-31 00:44:15;4;0.214;ProductAnomaliesDetection;Maintenance
LauraChen;0;2018-01-21 01:56:59;Scraping online data about charities to understand effectiveness;Scraping online data about charities to understand effectiveness;Government and Public Works;['AI', 'DL', 'Regression', 'fitting', 'model', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 98.5%', 'Python: 1.5%'];;https://github.com/LauraChen/02-Metis-Web-Scraping;1.0;['sklearn', 'statsmodels'];Charity Effectiveness;2018-01-29 17:57:12;2020-10-31 00:52:31;0;0.0;02-Metis-Web-Scraping;Charities
Law-AI;4;2018-12-17 08:29:13;Implementation of different summarization algorithms applied to legal case judgements.;Implementation of different summarisation algorithms applied to legal case judgements.;Justice, Law and Regulations;['AI', 'Boltzmann Machine', 'Document Summarization', 'LSTM', 'Logistic regression', 'ML', 'NN', 'RNN', 'Regression', 'Training data', 'Understanding', 'Validation data', 'classification', 'deep learning', 'epoch', 'filter', 'input layer', 'label', 'layer', 'loss', 'model', 'neural network', 'predict', 'rank', 'recognition', 'regression', 'train'];Python;['Python: 87.3%', 'HTML: 12.7%'];;https://github.com/Law-AI/summarization;1.0;['nltk', 'sklearn', 'tensorflow', 'theano'];Legal Case Summarisation;2019-02-01 05:10:48;2020-10-31 00:41:59;30;0.403;summarization;Tools
LeadingIndiaAI;0;2018-09-13 11:14:59;Wildfire is a natural disaster, causing irreparable damage to local ecosystem. Sudden and uncontrollable wildfires can be a real threat to residents lives. Statistics from National Interagency Fire Center (NIFC) in the USA show that the burned area doubled from 1990 to 2015 in the USA. Recent wildfires in northern California (reported by CNN) h;Forest fire detection through UAV imagery using CNNs;Emergency & Relief;['CNN', 'NN', 'loss', 'model', 'train'];Jupyter Notebook;['Jupyter Notebook: 98.8%', 'Python: 1.2%'];;https://github.com/LeadingIndiaAI/Forest-Fire-Detection-through-UAV-imagery-using-CNNs;1.0;['keras'];Forest Fire;2018-09-13 11:22:10;2020-10-31 00:32:28;22;0.375;Forest-Fire-Detection-through-UAV-imagery-using-CNNs;Preventative and Reactive
Lemma1;0;2017-11-26 23:24:03;Implementation of dynamic origin-destination demand estimation;Implementation of dynamic origin-destination demand estimation.;Utilities;['Gradient Descent', 'epoch', 'loss'];Jupyter Notebook;['Jupyter Notebook: 65.8%', 'Python: 34.2%'];MIT;https://github.com/Lemma1/DPFE;0.6;[];Demand Estimation;2018-10-15 06:28:02;2020-10-31 01:06:08;9;0.292;DPFE;Transportation
leportella;0;2018-07-18 21:48:37;Prediction on type of victims on federal road accidents in Brazil;Prediction on type of victims on federal road accidents in Brazil.;Emergency & Relief;['CV', 'Naive Bayes', 'Random forest', 'machine learning', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];;https://github.com/leportella/federal-road-accidents;1.0;['sklearn'];Road accident prediction;2018-09-21 19:22:03;2020-10-31 00:35:44;20;0.367;federal-road-accidents;Disaster Management
LexPredict;9;2017-07-14 11:50:52;LexPredict ContraxSuite;Software package and library.;Justice, Law and Regulations;['AI', 'ANN', 'Clustering', 'DL', 'Decision Tree', 'Generation', 'Gradient Boosting', 'Gradient boosting', 'K-Means', 'ML', 'NER', 'NLP', 'NN', 'Natural Language', 'Natural Language Processing', 'RL', 'Random forest', 'Regression', 'Support Vector Machines', 'Test data', 'Understanding', 'classification', 'clustering', 'decision tree', 'filter', 'fitting', 'label', 'labeled', 'machine learning', 'model', 'predict', 'rank', 'recognition', 'recommend', 'regression', 'train'];Python;['Python: 49.0%', 'Jupyter Notebook: 32.9%', 'HTML: 8.0%', 'CSS: 6.2%', 'JavaScript: 2.7%', 'Shell: 1.2%'];AGPL-3.0;https://github.com/LexPredict/lexpredict-contraxsuite;1.0;['gensim', 'nltk', 'sklearn'];LexPredict;2020-09-23 16:32:01;2020-10-31 00:41:53;134;0.521;lexpredict-contraxsuite;Tools
limberc;0;2017-12-18 08:51:40;Intelligent Manufacturing Quality Forecast;Intelligent Manufacturing Quality Forecast;Manufacturing;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/limberc/tianchi-IMQF;0.4;['lightgbm', 'sklearn'];Manufacturing Quality;2017-12-18 08:54:02;2020-10-31 00:44:29;0;0.0;tianchi-IMQF;Quality
llSourcell;0;2018-05-19 04:50:19;"This is the code for ""AI for Supply Chain"" by Siraj Raval on Youtube";Supply chain optimisation system.;Utilities;['AI', 'Generation', 'ML', 'NLP', 'Natural Language', 'Natural Language Processing', 'RL', 'chatbot', 'label', 'machine learning', 'predict', 'recommend'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/llSourcell/AI_Supply_Chain;0.6;[];AI Supply chain;2018-11-30 21:12:11;2020-10-31 01:07:15;103;0.502;AI_Supply_Chain;Transportation
llSourcell;0;2019-06-13 03:34:31;Predict mining prospects and mineral deposits using deep learning and satellite imagery;Predict mining prospects and mineral deposits using deep learning and satellite imagery;Utilities;['AI', 'DL', 'NER', 'NN', 'RL', 'model'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/llSourcell/mapo;0.6;[];Mining Prospects;2019-06-13 03:35:01;2020-10-31 01:02:46;29;0.4;mapo;Coal, Oil & Gas
lnsongxf;0;;ECON457 2018 Applied Computational Economics and Finance;Applied Computational Economics and Finance;Economics;['ML', 'label'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/lnsongxf/Applied_Computational_Economics_and_Finance/;0.6;[];Applied Econ & Fin;2017-08-26 04:26:04;2020-10-31 00:30:10;;0.0;Applied_Computational_Economics_and_Finance;General
Lolonon;0;2018-12-05 03:39:28;A restaurant analytical solution for customers, restaurant owners and investors. Including restaurant recommender, rating predictor and closure event predictor;Three prediction tasks using Yelp data;Accommodation & Food;['CNN', 'Logistic regression', 'NLP', 'NN', 'Naive Bayes', 'Regression', 'classification', 'deep learning', 'filter', 'label', 'model', 'predict', 'rank', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 93.3%', 'JavaScript: 5.9%', 'Other: 0.8%'];;https://github.com/Lolonon/Restaurant-Analytical-Solution;1.0;['keras', 'nltk', 'sklearn'];Closure, Rating and Recommendation;2018-12-05 04:10:48;2020-10-30 23:35:45;0;0.0;Restaurant-Analytical-Solution;Restaurant
LongOnly;0;2018-10-01 01:59:06;Educational notebooks on quantitative finance, algorithmic trading, financial modelling and investment strategy;Educational notebooks on quant finance, algorithmic trading and investment strategy.;Finance;['Decision Tree', 'Generation', 'ML', 'decision tree', 'fitting', 'machine learning', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/LongOnly/Quantitative-Notebooks;1.0;['sklearn'];Quant Notebooks;2020-07-02 00:17:39;2020-10-31 00:38:14;303;0.576;Quantitative-Notebooks;Trading & Investment
longtng;0;;A Consideration Point of Fraud Detection in Bank Loans - Project Aug 2018;Fraud detection in bank loans.;Banking & Insurance;['Logistic regression', 'NN', 'Random forest', 'Regression', 'classification', 'machine learning', 'model', 'regression'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/longtng/frauddetectionproject/;0.6;[];Fraud Detection Loan in R;2019-02-18 15:46:42;2020-10-31 00:20:02;;0.0;frauddetectionproject;Fraud
luqmanhakim;0;;Notebook research on the SP Wholesale plan and find out if its cheaper than all SG energy retailers plans;Electricity price comparison Singapore.;Utilities;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/luqmanhakim/research-on-sp-wholesale/;0.0;[];Electricity Price;2018-11-08 05:57:25;2020-10-31 00:58:07;;0.0;research-on-sp-wholesale;Electricity
m-hoff;0;2018-07-19 16:30:25;Simulation of maintenance in manufacturing systems;Simulation of maintenance in manufacturing systems.;Manufacturing;['loss', 'model', 'train'];Python;['Python: 100.0%'];MIT;https://github.com/m-hoff/maintsim;0.6;[];Manufacturing Maintenance;2020-11-23 21:33:39;2020-10-31 00:44:13;10;0.302;maintsim;Maintenance
manuvarkey;0;2017-10-18 05:08:40;GEstimator is a simple civil estimation software written in Python and GTK+. GEstimator can prepare estimates along with rate analysis and supports multiple databases.;Simple civil estimation software;Construction & Engineering;['ML', 'filter', 'model', 'rank', 'train'];Python;['Python: 98.7%', 'NSIS: 1.3%'];GPL-3.0;https://github.com/manuvarkey/Gestimator;0.6;[];Gestimator;2020-07-20 15:45:23;2020-10-31 00:23:29;9;0.292;Gestimator;Engineering
marcotav;0;2018-10-27 02:54:47;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Hotel dynamic pricing calculations;Accommodation & Food;['predict'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/marcotav/hotels;0.6;[];Dynamic Pricing;2018-10-28 20:52:29;2020-10-30 23:38:55;6;0.253;hotels;Accomodation
MarcusOlivecrona;2;2017-05-05 14:21:42;Molecular De Novo design using Recurrent Neural Networks and Reinforcement Learning;generating compounds predicted to be active against a biological target.;Biotechnological & Life Sciences;['NN', 'RL', 'RNN', 'Recurrent Neural Network', 'Reinforcement learning', 'epoch', 'filter', 'loss', 'model', 'neural network', 'train'];Python;['Python: 96.9%', 'CSS: 2.0%', 'Other: 1.1%'];MIT;https://github.com/MarcusOlivecrona/REINVENT;1.0;['sklearn'];RL;2019-10-15 12:32:41;2020-10-30 23:52:46;161;0.534;REINVENT;Chemoinformatics and drug discovery
materialsproject;15;2017-06-13 20:53:06;Be a master builder of databases of material properties. Avoid the Kragle.;Build databases of material properties.;Construction & Engineering;['AI', 'DL', 'ML', 'filter', 'label', 'model', 'predict', 'rank'];Python;['Python: 99.3%', 'Shell: 0.7%'];;https://github.com/materialsproject/emmet;0.6;[];Emmet;2020-11-28 20:02:48;2020-10-31 00:28:39;9;0.292;emmet;Material Science
materialsproject;166;;Python Materials Genomics (pymatgen) is a robust materials analysis code that defines core object representations for structures and molecules with support for many electronic structure codes. It is currently the core analysis code powering the Materials Project.;Robust material analysis code used in a well-established project.;Construction & Engineering;['AI', 'CV', 'Clustering', 'DL', 'GAN', 'GRU', 'Generation', 'ML', 'NN', 'RL', 'Regression', 'Test data', 'Understanding', 'clustering', 'filter', 'fitting', 'label', 'layer', 'model', 'predict', 'rank', 'recommend', 'regression', 'train'];Python;['Python: 100.0%'];MIT;https://github.com/materialsproject/pymatgen/;1.0;['skimage'];Python Materials Genomics;2020-11-22 17:22:28;2020-10-31 00:28:12;;0.0;pymatgen;Material Science
materialsvirtuallab;6;2018-12-12 21:31:28;Graph Networks as a Universal Machine Learning Framework for Molecules and Crystals;Graph networks as a ML framework for Molecules and Crystals;Construction & Engineering;['AI', 'LSTM', 'ML', 'RL', 'ReLu', 'Test data', 'Training data', 'Validation data', 'deep learning', 'epoch', 'fitting', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 82.1%', 'Python: 16.4%', 'R: 0.6%', 'Makefile: 0.3%', 'Batchfile: 0.3%', 'HTML: 0.1%', 'Other: 0.2%'];BSD-3-Clause;https://github.com/materialsvirtuallab/megnet;1.0;['sklearn', 'tensorflow'];Megnet;2020-11-22 17:23:38;2020-10-31 00:28:47;210;0.552;megnet;Material Science
MAydogdu;0;;CFPB dataset related data exploration and analysis;Consumer Finances Protection Bureau complaints analysis.;Government and Public Works;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/MAydogdu/ConsumerFinancialProtectionBureau/;0.4;['nltk'];CFPB;2017-09-28 19:31:58;2020-10-31 00:49:23;;0.0;ConsumerFinancialProtectionBureau;Social Policies
MAydogdu;0;2018-06-04 20:54:14;Extracting sentiment from financial statements using neural networks;Extracting sentiment from financial statements using neural networks.;Finance;['LSTM', 'ML', 'NN', 'Test data', 'label', 'layer', 'loss', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/MAydogdu/TextualAnalysis;1.0;['keras', 'nltk', 'sklearn', 'tensorflow'];Financial Statement Sentiment;2018-06-04 21:03:18;2020-10-31 00:36:49;7;0.268;TextualAnalysis;Trading & Investment
mbravidor;0;2018-04-07 22:55:34;Automatic DataStream requests which deliver a long-format CSV file;Datastrem from Thomson Reuters accessible through Python.;Finance;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/mbravidor/PyDSout;0.0;[];Datastream;2018-04-07 22:59:38;2020-10-31 00:38:32;5;0.236;PyDSout;Data
mdeff;2;2018-07-10 10:29:37;Graph signal processing tutorial, presented at the GraphSiP summer school.;Graph signal processing tutorial;Construction & Engineering;['Clustering', 'clustering', 'filter', 'label', 'model', 'recommend'];Jupyter Notebook;['Jupyter Notebook: 98.4%', 'Python: 1.5%', 'Makefile: 0.1%'];MIT;https://github.com/mdeff/pygsp_tutorial_graphsip;1.0;['sklearn'];Graph Signal;2019-01-24 16:33:51;2020-10-31 00:24:55;35;0.416;pygsp_tutorial_graphsip;Engineering
Meena-Mani;0;2016-09-05 10:55:59;Approaches for the class imbalance problem (in semicondutor manufacturing process line data);Semicondutor manufacturing process line data analysis.;Manufacturing;['Anomaly detection', 'CV', 'GBM', 'Gradient Boosting', 'Gradient boosting', 'Random forest', 'Training data', 'Understanding', 'classification', 'label', 'machine learning', 'model', 'predict', 'rank', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/Meena-Mani/SECOM_class_imbalance;1.0;['sklearn'];Semiconductor Manufacturing;2020-03-14 15:24:03;2020-10-31 00:43:51;17;0.352;SECOM_class_imbalance;General
Mehranov;0;;For this project, we create a function that trains a model to predict blight ticket compliance in Detroit using train.csv. Using this model, we return a series with the data being the probability that each corresponding ticket from test.csv will be paid, and the index being the ticket_id.;Predicting property fines.;Construction & Engineering;['Logistic regression', 'Regression', 'Test data', 'Understanding', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 72.1%', 'Python: 27.9%'];;https://github.com/Mehranov/UnderstandingAndPredictingPropertyMaintenanceFines/;1.0;['sklearn'];Bylaws Compliance;2018-08-21 20:45:23;2020-10-31 00:29:30;;0.0;UnderstandingAndPredictingPropertyMaintenanceFines;Material Science
MengchuanFu;0;2017-04-07 17:47:56;With the rapid adoption of smartphones, tablets, and mobile apps, they are increasingly becoming part of childrens daily life for amusement and education. According to MarketingProfs, 75% of American children under 8 have access to a smartphone or tablet [1]. According to a survey conducted by PBS KIDS [2] 90% parents with kids between the ages;Suspicious app detection for kids.;Government and Public Works;['Logistic regression', 'Naive Bayes', 'Regression', 'label', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/MengchuanFu/Suspecious-Apps-Detection;1.0;['nltk', 'sklearn'];Apps Detection;2017-04-07 20:11:28;2020-10-31 00:50:16;8;0.281;Suspecious-Apps-Detection;Social Policies
mesgarpour;2;2016-01-06 10:50:35;Temporal-Comorbidity Adjusted Risk of Emergency Readmission;Adjusted Risk of Emergency Readmission;Emergency & Relief;['Logistic regression', 'ML', 'NN', 'Random forest', 'Regression', 'classification', 'filter', 'fitting', 'label', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'rank', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 51.2%', 'Python: 48.8%'];Apache-2.0;https://github.com/mesgarpour/T-CARER;1.0;['sklearn', 'statsmodels', 'tensorflow'];Emergency Readmission;2017-12-23 11:18:23;2020-10-31 00:32:03;6;0.253;T-CARER;Preventative and Reactive
mfsatya;0;2019-03-20 04:38:10;Plant Seedlings Classification from kaggle competition;Plant Seedlings Classification from kaggle competition;Biotechnological & Life Sciences;['classification'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/mfsatya/PlantSeedlings-Classification;1.0;['sklearn', 'tensorflow'];Seedlings;2019-05-03 01:53:01;2020-10-30 23:56:21;8;0.281;PlantSeedlings-Classification;Life-sciences
Michaels72;0;;Customer Due Diligence - Automated Google Web Scraping for Negative News;Search news articles to do finance AML DD.;Banking & Insurance;['ML', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Michaels72/AML-Due-Diligence/;1.0;['sklearn'];AML Finance Due Diligence;2019-01-24 19:13:42;2020-10-31 00:20:04;;0.0;AML-Due-Diligence;Fraud
mick-zhang;0;2019-01-28 08:21:24;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Quality control for banking using LDA;Banking & Insurance;['Supervised learning', 'Unsupervised learning', 'machine learning', 'model', 'predict', 'rank', 'train'];Jupyter Notebook;['Jupyter Notebook: 71.5%', 'Python: 28.5%'];;https://github.com/mick-zhang/Quality-Control-for-Banking-using-LDA-and-LDA-Mallet;1.0;['gensim', 'nltk', 'spacy'];Quality Control;2019-06-15 20:12:30;2020-10-30 23:43:52;1;0.099;Quality-Control-for-Banking-using-LDA-and-LDA-Mallet;Insurance and Risk
microsoft;12;2018-04-30 21:02:52;ALICE (Automated Learning and Intelligence for Causation and Economics) is a Microsoft Research project aimed at applying Artificial Intelligence concepts to economic decision making. One of its goals is to build a toolkit that combines state-of-the-art machine learning techniques with econometrics in order to bring automation to complex causal;Automated Learning and Intelligence for Causation and Economics.;Economics;['AutoML', 'Automated machine learnin', 'CV', 'GBM', 'Generation', 'Linear regression', 'ML', 'RL', 'Random forest', 'ReLu', 'Regression', 'Test data', 'Training data', 'Understanding', 'classification', 'epoch', 'filter', 'fitting', 'label', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 83.3%', 'Python: 16.5%', 'Other: 0.2%'];MIT;https://github.com/microsoft/EconML;1.0;['keras', 'lightgbm', 'sklearn', 'statsmodels', 'xgboost'];EconML;2020-11-29 04:32:37;2020-10-31 00:30:20;1027;0.647;EconML;Machine Learning
mikhailklassen;4;;The official online compendium for Mining the Social Web, 3rd Edition (O'Reilly, 2018);Mining the social web.;Media & Publishing;['Clustering', 'Document Summarization', 'K-Means', 'ML', 'NLP', 'RL', 'Sentiment Analysis', 'artificial neural network', 'clustering', 'filter', 'label', 'layer', 'neural network', 'rank', 'recognition', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 95.1%', 'HTML: 3.9%', 'Other: 1.0%'];;https://github.com/mikhailklassen/Mining-the-Social-Web-3rd-Edition/;1.0;['nltk', 'sklearn'];Social Mining;2019-08-27 16:41:28;2020-10-31 00:45:44;;0.0;Mining-the-Social-Web-3rd-Edition;Marketing
mila-iqia;7;2018-08-09 14:34:32;Towards Gene Expression Convolutions using Gene Interaction Graphs;Using convolutions on an image.;Biotechnological & Life Sciences;['Clustering', 'Convolutional Neural Network', 'ML', 'Propagation', 'RL', 'Understanding', 'classification', 'clustering', 'filter', 'label', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 97.0%', 'Python: 3.0%'];;https://github.com/mila-iqia/gene-graph-conv;1.0;['sklearn'];Gene Expression Graphs;2020-01-14 15:18:10;2020-10-30 23:53:50;54;0.452;gene-graph-conv;Genomics
mingzhangyang;0;2016-05-11 23:09:27;Python scripts for biologists;Python scripts for biologists.;Biotechnological & Life Sciences;['ML', 'recognition'];Jupyter Notebook;['Jupyter Notebook: 56.2%', 'Python: 43.4%', 'HTML: 0.4%'];Apache-2.0;https://github.com/mingzhangyang/Mybiotools;0.6;[];Scripts;2017-05-10 05:12:29;2020-10-30 23:48:21;5;0.236;Mybiotools;General
mitmedialab;2;2017-11-21 19:11:02;A mini-framework to build and train neural networks for molecular biology.;A mini-framework to build and train neural networks for molecular biology.;Biotechnological & Life Sciences;['Generation', 'LSTM', 'ML', 'classification', 'filter', 'input layer', 'layer', 'loss', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 64.5%', 'Python: 35.5%'];MIT;https://github.com/mitmedialab/Evolutron;1.0;['keras', 'sklearn', 'tensorflow', 'theano'];Molecular NN;2018-03-23 14:42:23;2020-10-30 23:48:24;8;0.281;Evolutron;General
MiyainNYC;0;;Option Pricing, Volatility Prediction, Machine Learning, Black Scholas, Web Crawling;HFT trading and implied volatility modeling.;Finance;['Gradient Boosting', 'Gradient boosting', 'Linear regression', 'ML', 'NN', 'Random forest', 'Regression', 'Test data', 'Training data', 'filter', 'label', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 98.1%', 'Python: 1.7%', 'R: 0.2%'];;https://github.com/MiyainNYC/Financial-Modeling/;1.0;['sklearn'];Financial Modeling;2016-12-20 03:25:13;2020-10-31 00:36:45;;0.0;Financial-Modeling;Trading & Investment
mohan-mj;0;2018-10-29 11:13:16;Shop floor always have challenges. When the part fails at the end of line testing, shop floor manager instinctively retrace your steps to identify at what point you went wrong. Here, the ML based algorithm is closely monitoring the parts as they progress through the manufacturing processes. So that the defective parts can be intelligently identi;Intelligent anomaly detection for manufacturing line.;Manufacturing;['ML', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/mohan-mj/Manufacturing-Line-I4.0;1.0;['sklearn', 'xgboost'];Manufacturing Anomalies;2019-09-25 04:40:31;2020-10-31 00:44:26;2;0.152;Manufacturing-Line-I4.0;Failure
Montclair-State-University-Info368;0;2016-03-20 18:58:41;1. Select 6-8 products/brands that directly compete with each other. Download 300-500 tweets related to each product/brand. Clean the data. Build a dendrogram showing the lexical similarity among the brands. Identify the top 10 words associated with each brand (after cleaning the data). 15 pts. 2. Select 2 hotels that are located closely geograp;Compare brands that directly compete;Accommodation & Food;['Decision Tree', 'decision tree', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/Montclair-State-University-Info368/Assignment-6;1.0;['nltk'];Hotel Similarity;2016-03-21 00:10:08;2020-10-30 23:38:56;5;0.236;Assignment-6;Accomodation
morenobcn;0;2018-09-19 01:56:45;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Predict hotel room rates;Accommodation & Food;['CV', 'Clustering', 'ML', 'Random forest', 'Regression', 'Supervised learning', 'Test data', 'Unsupervised learning', 'clustering', 'layer', 'machine learning', 'model', 'predict', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/morenobcn/capstone_hotels_arcpy;1.0;['sklearn', 'xgboost'];Predict Prices;2018-09-19 13:37:19;2020-10-30 23:39:04;3;0.188;capstone_hotels_arcpy;Accomodation
morenobcn;0;2018-08-08 00:01:15;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Comparing the two approaches;Accommodation & Food;['AI', 'DL', 'classification', 'filter', 'rank'];Jupyter Notebook;['Jupyter Notebook: 81.4%', 'Python: 18.6%'];;https://github.com/morenobcn/hotels_vs_airbnb_proof_of_concept;0.6;[];Hotels vs Airbnb;2020-11-18 21:24:00;2020-10-30 23:39:08;2;0.152;hotels_vs_airbnb_proof_of_concept;Accomodation
mratsim;0;2017-04-26 17:10:52;Predict people interest in renting specific NYC apartments. The challenge combines structured data, geolocalization, time data, free text and images.;Predict people interest in renting specific NYC apartments.;Real Estate, Rental & Leasing;['Bayesian', 'CV', 'Clustering', 'GBM', 'ML', 'NLP', 'Naive Bayes', 'Sentiment Analysis', 'Supervised learning', 'Test data', 'Training data', 'Validation data', 'clustering', 'fitting', 'label', 'loss', 'model', 'predict', 'rank', 'train'];Jupyter Notebook;['Jupyter Notebook: 98.8%', 'Python: 1.2%'];;https://github.com/mratsim/Apartment-Interest-Prediction;1.0;['lightgbm', 'nltk', 'sklearn', 'textblob', 'xgboost'];Interest Prediction;2017-11-04 08:52:51;2020-10-31 00:58:01;16;0.346;Apartment-Interest-Prediction;Rental & Leasing
mratsim;0;2018-03-15 21:25:36;Adventure into using multi attention recurrent neural networks for time-series (city traffic) for the 2017-11-18 McKinsey IronMan (24h non-stop) prediction challenge;multi attention recurrent neural networks for time-series (city traffic);Utilities;['CNN', 'GRU', 'LSTM', 'NN', 'RNN', 'Recurrent Neural Network', 'Regression', 'Training data', 'fitting', 'input layer', 'layer', 'loss', 'model', 'neural network', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/mratsim/McKinsey-SmartCities-Traffic-Prediction;1.0;['keras', 'sklearn', 'tensorflow'];Traffic Prediction;2018-03-15 23:07:20;2020-10-31 01:06:31;44;0.435;McKinsey-SmartCities-Traffic-Prediction;Transportation
mroberge;4;2016-08-12 01:16:29;A suite of convenience functions for working with hydrology data in an interactive Python session.;A suite of convenience functions for exploring water data in Python.;Utilities;['ML', 'RL', 'Test data', 'filter', 'label', 'recommend'];Python;['Python: 68.3%', 'Jupyter Notebook: 31.6%', 'Makefile: 0.1%'];MIT;https://github.com/mroberge/hydrofunctions;0.6;[];Hydrology Data;2020-11-18 04:33:25;2020-10-31 01:03:02;27;0.393;hydrofunctions;Water & Pollution
mschermann;0;2018-04-20 18:23:17;Case Studies on Forensic Accounting using Data Analysis;Collection of case studies on forensic accounting using data analysis.;Accounting;['Understanding', 'filter', 'label', 'layer'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/mschermann/forensic_accounting;0.6;[];Forensic Accounting;2019-01-10 01:37:30;2020-10-30 23:39:59;15;0.34;forensic_accounting;Analytics
muntisa;0;2018-09-11 10:22:46;Prediction of Spanish Political Affinity with Deep Neural Nets: Socialist vs People's Party;Prediction of Spanish Political Affinity with Deep Neural Nets: Socialist vs People's Party;Government and Public Works;['CNN', 'Convolutional Neural Network', 'NN', 'ReLu', 'Training data', 'VGG', 'Validation data', 'classification', 'epoch', 'filter', 'layer', 'loss', 'model', 'neural network', 'neuron', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/muntisa/Deep-Politics;1.0;['keras', 'sklearn', 'tensorflow'];DL Politics;2018-11-06 00:14:00;2020-10-31 00:56:21;3;0.188;Deep-Politics;Politics
Murgio;2;2018-01-04 12:51:40;food image to recipe with deep convolutional neural networks.;Translate an image to a recipe using deep learning;Accommodation & Food;['AI', 'ANN', 'AlexNet', 'CNN', 'Clustering', 'Convolutional Neural Network', 'GRU', 'K-Means', 'ML', 'NER', 'NN', 'Natural Language', 'Natural Language Processing', 'ResNet', 'Test data', 'Training data', 'VGG', 'Validation data', 'classification', 'clustering', 'deep learning', 'epoch', 'label', 'layer', 'loss', 'model', 'neural network', 'predict', 'rank', 'recognition', 'train'];Jupyter Notebook;['Jupyter Notebook: 83.8%', 'HTML: 16.0%', 'Other: 0.2%'];;https://github.com/Murgio/Food-Recipe-CNN;1.0;['gensim', 'keras', 'nltk', 'sklearn', 'statsmodels', 'tensorflow'];Image to Recipe;2020-11-18 21:30:02;2020-10-30 23:32:43;427;0.597;Food-Recipe-CNN;Food
Myau5x;0;2018-11-22 00:21:40;finding restaurants that i hate;Find restaurants you don’t want to attend;Accommodation & Food;['AI', 'CV', 'Clustering', 'DL', 'GRU', 'K-Means', 'ML', 'NLP', 'NN', 'RL', 'Random forest', 'ReLu', 'clustering', 'filter', 'fitting', 'label', 'layer', 'loss', 'model', 'predict', 'rank', 'recommend', 'reward', 'train'];Jupyter Notebook;['Jupyter Notebook: 73.2%', 'JavaScript: 24.3%', 'Python: 2.3%', 'HTML: 0.2%'];;https://github.com/Myau5x/anti-recommender;1.0;['nltk', 'sklearn'];Anti-recommender;2019-03-18 21:29:31;2020-10-30 23:36:24;0;0.0;anti-recommender;Restaurant
nd1;2;2016-07-18 14:41:34;This is a prototype of replicating Chicago's Food Inspection Forecasting project with DC data in python.;Food inspection violation forecasting;Accommodation & Food;['CV', 'Logistic regression', 'Random forest', 'Regression', 'Test data', 'Training data', 'classification', 'filter', 'fitting', 'model', 'predict', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 74.1%', 'HTML: 24.6%', 'Python: 1.3%'];MIT;https://github.com/nd1/DC_RestaurantViolationForecasting;1.0;['sklearn'];Restaurant Violation;2016-09-06 18:05:56;2020-10-30 23:34:33;12;0.319;DC_RestaurantViolationForecasting;Restaurant
nealmcb;0;2017-06-28 23:36:34;Proportional Representation Voting Methods, Data, and Auditing;Proportional representation voting methods.;Government and Public Works;['Bayesian'];Jupyter Notebook;['Jupyter Notebook: 68.1%', 'Python: 31.9%'];MIT;https://github.com/nealmcb/pr_voting_methods;0.6;[];Voting System;2019-01-27 19:10:59;2020-10-31 00:55:55;0;0.0;pr_voting_methods;Election Analysis
neokt;0;2017-02-13 08:47:59;Assessing car damage with convolution neural networks for a personal auto claims expedition use case;Assessing car damage with convolution neural networks for a personal auto claims.;Banking & Insurance;['AI', 'Computer Vision', 'Convolutional Neural Network', 'Generation', 'NER', 'NN', 'RL', 'VGG', 'Validation data', 'classification', 'deep learning', 'label', 'labeled', 'layer', 'loss', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.5%', 'Other: 0.5%'];;https://github.com/neokt/car-damage-detective;1.0;['keras', 'sklearn'];Car Damage Detective;2017-12-10 20:55:27;2020-10-30 23:43:06;165;0.536;car-damage-detective;Insurance and Risk
Niels-Peter;3;2018-01-30 08:39:37;Applying XBRL to AI;Standardized representation of XBRL into AI and Machine learning.;Accounting;['AI', 'ML', 'RL', 'label', 'machine learning', 'model', 'predict', 'train'];HTML;['HTML: 83.9%', 'Python: 13.3%', 'Jupyter Notebook: 2.8%'];MIT;https://github.com/Niels-Peter/XBRL-AI;1.0;['sklearn'];AI Applied to XBRL;2018-11-07 14:40:42;2020-10-30 23:39:57;25;0.387;XBRL-AI;Machine Learning
nishanthgampa;0;2018-07-02 03:34:07;Exploratory Data Analysis of Time Series Data and Forecasting using Naive Approach, Moving Average Method, Simple Exponential Smoothening, Holts Linear Trend Model, Holts Winter Model, ARIMA and SARIMAX models.;Time series analysis on transportation data.;Utilities;['Test data', 'Validation data', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/nishanthgampa/Time-Series-Analysis-on-Transportation-Data;1.0;['sklearn', 'statsmodels'];TS Analysis;2018-07-02 03:40:42;2020-10-31 01:06:14;4;0.214;Time-Series-Analysis-on-Transportation-Data;Transportation
NomaanAhmed;0;2019-01-21 06:26:36;A Big Data analysis of different species of animals. Done in Python via Jupyter Notebook - GitHub renders it directly, just click!;Big Data analysis of different species of animals;Biotechnological & Life Sciences;['filter', 'label'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/NomaanAhmed/BigData_AnimalSpeciesAnalysis;0.6;[];Species;2019-01-21 06:32:02;2020-10-31 00:20:39;1;0.099;BigData_AnimalSpeciesAnalysis;Life-sciences
nonsignificantp;0;2018-12-07 03:05:40;An analysis on the improvements of ambulance response time when using Google's routing service instead of hospital referral regions to find the closest and fastest emergency hospital in Buenos Aires City.;An analysis on the improvements of ambulance response time.;Emergency & Relief;['Understanding', 'label', 'labeled', 'loss', 'model', 'recommend'];Jupyter Notebook;['Jupyter Notebook: 99.8%', 'R: 0.2%'];;https://github.com/nonsignificantp/ambulance-response-time;0.6;[];Response Time;2018-12-07 03:33:12;2020-10-31 00:35:28;0;0.0;ambulance-response-time;Ambulance:
npatta01;0;2018-11-03 23:45:41;Deep Learning model to classify food (Web App);Deep Learning model to classify food (Web App);Accommodation & Food;['CNN', 'Computer Vision', 'NN', 'RL', 'Random forest', 'ResNet', 'deep learning', 'epoch', 'label', 'layer', 'loss', 'model', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];MIT;https://github.com/npatta01/web-deep-learning-classifier;0.6;[];Food Detection Web App;2020-11-22 18:31:08;2020-10-30 23:34:07;101;0.5;web-deep-learning-classifier;Food
nprapps;2;2017-04-21 21:26:07;Data analysis for education's school choice in Indiana project;Data analysis for education's school choice.;Education & Research;['filter', 'label'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/nprapps/school-choice;0.6;[];School Choice;2017-07-19 18:47:49;2020-10-31 00:31:21;6;0.253;school-choice;School
nus-usp;2;2018-03-15 01:43:26;NUS USP Room Allocation;Room allocation process;Accommodation & Food;['label', 'train'];Jupyter Notebook;['Jupyter Notebook: 94.4%', 'Python: 5.6%'];;https://github.com/nus-usp/room-allocation;0.6;[];Room Allocation;2018-04-08 17:22:02;2020-10-30 23:38:53;1;0.099;room-allocation;Accomodation
nvodoor;3;2017-08-26 18:52:12;Restaurant Business Analysis;Restaurant business analysis project;Accommodation & Food;['label', 'layer'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/nvodoor/RBA;0.6;[];Business Analysis;2017-09-06 01:09:35;2020-10-30 23:34:49;1;0.099;RBA;Restaurant
nymarya;2;;Analysis of schools' budgets for ML class' project. Originally, a competition by DrivenData https://www.drivendata.org/competitions/46/box-plots-for-education-reboot/;Same as a above, datacamp.;Education & Research;['ANN', 'Clustering', 'Decision Tree', 'ML', 'NN', 'Naive Bayes', 'RL', 'Training data', 'Validation data', 'clustering', 'decision tree', 'hidden layer', 'input layer', 'label', 'layer', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Other: 0.3%'];MIT;https://github.com/nymarya/school-budgets-for-education/;1.0;['sklearn', 'tensorflow', 'xgboost'];School Budgets;2019-06-08 12:14:43;2020-10-31 00:31:47;;0.0;school-budgets-for-education;School
OGGM;8;2018-09-21 15:36:33;Educational material about glaciers, powered by OGGM and MyBinder;Educational material about glaciers.;Biotechnological & Life Sciences;['ML', 'RL', 'filter', 'label', 'model'];Python;['Python: 100.0%'];BSD-3-Clause;https://github.com/OGGM/oggm-edu;1.0;['skimage'];Glaciers;2020-11-24 12:36:42;2020-10-31 00:21:16;12;0.319;oggm-edu;Life-sciences
okfn-brasil;10;2018-04-18 22:32:22;A platform for profiling public figures in Brazilian politics;A platform for profiling public figures in Brazilian politics.;Government and Public Works;['ML', 'RL', 'model', 'recommend'];Jupyter Notebook;['Jupyter Notebook: 61.8%', 'Python: 37.8%', 'Dockerfile: 0.4%'];GPL-3.0;https://github.com/okfn-brasil/perfil-politico;1.0;['nltk'];Politico;2020-11-01 17:33:25;2020-10-31 00:56:00;111;0.507;perfil-politico;Politics
Open-Power-System-Data;9;2015-10-26 17:16:36;Data package: renewable power plants;Time series of cumulated installed capacity.;Utilities;['AI', 'Generation', 'NN', 'classification', 'filter'];Jupyter Notebook;['Jupyter Notebook: 97.2%', 'Python: 1.7%', 'HTML: 1.1%'];MIT;https://github.com/Open-Power-System-Data/renewable_power_plants;0.6;[];Renewable Power Plants;2020-08-26 05:37:56;2020-10-31 01:01:34;34;0.413;renewable_power_plants;Electricity
openalea;3;2017-09-25 10:55:01;An imaging library to detect and track future position of ears on maize plants;An imaging library to detect and track future position of ears on maize plants;Biotechnological & Life Sciences;['ML', 'Regression', 'regression'];Jupyter Notebook;['Jupyter Notebook: 96.6%', 'Python: 3.1%', 'Other: 0.3%'];;https://github.com/openalea/eartrack;1.0;['skimage'];Crop Analysis;2019-03-04 14:48:16;2020-10-30 23:56:21;9;0.292;eartrack;Life-sciences
OpenChemE;2;2018-03-24 23:23:28;CHBE 356 - Process Dynamics and Control;Process Dynamics and Control;Construction & Engineering;['filter', 'label', 'model'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];CC-BY-SA-4.0;https://github.com/OpenChemE/CHBE356;0.6;[];Process Dynamics;2020-03-03 06:59:06;2020-10-31 00:25:15;19;0.362;CHBE356;Engineering
openeemeter;25;;An open source python package for implementing and developing standard methods for calculating normalized metered energy consumption and avoided energy use.;Standard methods for calculating normalized metered energy consumption;Construction & Engineering;['AI', 'ML', 'NER', 'filter', 'fitting', 'model', 'predict', 'train'];Python;['Python: 99.7%', 'Other: 0.3%'];Apache-2.0;https://github.com/openeemeter/eemeter/;1.0;['statsmodels'];Energy Use;2020-09-21 20:56:18;2020-10-31 00:25:39;;0.0;eemeter;Engineering
Paresh3189;0;2018-09-06 02:55:35;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Classification and time-series analysis for loan acceptance.;Banking & Insurance;['Decision Tree', 'Generation', 'Logistic regression', 'Random forest', 'Regression', 'Test data', 'Training data', 'Understanding', 'Validation data', 'classification', 'decision tree', 'label', 'machine learning', 'model', 'neural network', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Paresh3189/Bankruptcy-Prediction-Growth-Modelling;1.0;['sklearn', 'statsmodels'];Loan Acceptance;2018-10-21 15:21:16;2020-10-30 23:41:35;7;0.268;Bankruptcy-Prediction-Growth-Modelling;Consumer Financial
ParticipaPY;6;2017-12-05 13:22:44;Tools and algorithms to analyze Paraguayan Tweets in times of elections;Tools and algorithms to analyze Paraguayan Tweets in times of election;Government and Public Works;['ML', 'Understanding', 'label', 'labeled'];Jupyter Notebook;['Jupyter Notebook: 72.4%', 'HTML: 22.5%', 'Python: 4.9%', 'JavaScript: 0.2%'];GPL-3.0;https://github.com/ParticipaPY/politic-bots;0.6;[];Bots;2020-11-18 21:13:21;2020-10-31 00:56:12;27;0.393;politic-bots;Politics
paultopia;0;;An NLP workshop about concrete solutions to real problems;Try to correctly predict whether tweets that are about disasters;Emergency & Relief;['AI', 'CNN', 'Generation', 'Linear regression', 'NLP', 'NN', 'Regression', 'Text Classification', 'classification', 'deep learning', 'fitting', 'machine learning', 'model', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/paultopia/concrete_NLP_tutorial/;1.0;['gensim', 'keras', 'nltk', 'sklearn'];Twitter and disasters;2018-01-22 08:48:02;2020-10-31 00:36:04;;0.0;concrete_NLP_tutorial;Disaster Management
pawelmorawiecki;0;2018-10-01 12:14:44;Predicting demand for public transportation in Nairobi;Predicting demand for public transportation in Nairobi.;Utilities;['Random forest', 'model', 'predict'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/pawelmorawiecki/traffic_jam_Nairobi;1.0;['sklearn'];Transport Demand;2018-10-05 10:53:55;2020-10-31 01:05:49;8;0.281;traffic_jam_Nairobi;Transportation
pedrohserrano;3;2016-03-12 03:59:52;Graph Analytics - The Hague Crime;The Hague Crimes.;Emergency & Relief;['Anomaly detection', 'Decision Tree', 'K-Means', 'Random forest', 'Regression', 'classification', 'decision tree', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 74.9%', 'TeX: 25.1%'];;https://github.com/pedrohserrano/graph-analytics-nederlands;0.6;[];Graph Analytics;2019-03-08 22:59:17;2020-10-31 00:34:25;6;0.253;graph-analytics-nederlands;Crime
pgromano;0;2017-10-30 16:50:36;Proposal for multi-axial political model.;Multi-axial political model.;Government and Public Works;['Clustering', 'K-Means', 'clustering', 'model'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/pgromano/Political-Identity-Analysis;1.0;['sklearn'];Political Identity;2017-12-06 22:30:47;2020-10-31 00:56:57;1;0.099;Political-Identity-Analysis;Politics
philiplbean;0;2018-09-06 14:52:06;Investigation into Facebook Political Ads and Targeting;Investigation into Facebook Political Ads and Targeting;Government and Public Works;['classification', 'model'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/philiplbean/facebook_political_ads;1.0;['gensim', 'nltk', 'sklearn', 'spacy'];Political Ads;2018-09-07 18:57:24;2020-10-31 00:56:55;1;0.099;facebook_political_ads;Politics
philippschmalen;2;2018-04-19 11:31:14;"How US congressmembers connect on Twitter - Network analysis of the US political elite (seminar paper for ""Topics of Social Data Science"")";Political elite in the US.;Government and Public Works;['Logistic regression', 'Regression', 'filter', 'label', 'predict', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/philippschmalen/Project_tsds;1.0;['sklearn', 'statsmodels'];Elite;2018-05-27 20:50:07;2020-10-31 00:56:49;1;0.099;Project_tsds;Politics
philxchen;0;2018-12-05 10:55:13;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Clustering Canadian regulations.;Justice, Law and Regulations;['filter', 'label', 'model'];Jupyter Notebook;['Jupyter Notebook: 98.1%', 'Python: 1.9%'];;https://github.com/philxchen/Clustering-Canadian-regulations;1.0;['gensim', 'nltk', 'sklearn'];Clustering;2019-01-08 17:30:35;2020-10-31 00:43:14;0;0.0;Clustering-Canadian-regulations;Policy and Regulatory
pipette;2;2016-06-18 21:58:09;Smart meter load disaggregation with Hidden Markov Models;Smart meter load disaggregation with Hidden Markov Models;Utilities;['K-Means', 'ML', 'Speech Recognition', 'label', 'labeled', 'machine learning', 'model', 'predict', 'recognition', 'train'];Jupyter Notebook;['Jupyter Notebook: 97.6%', 'Python: 2.4%'];;https://github.com/pipette/Electricity-load-disaggregation;1.0;['sklearn'];Load Disaggregation;2020-11-27 08:36:12;2020-10-31 01:00:02;38;0.423;Electricity-load-disaggregation;Electricity
Polichinel;0;2019-02-04 09:27:44;Notebooks and Scripts for my master thesis in Political Science regarding conflict prediction;Notebooks on conflict prediction.;Emergency & Relief;['Regression', 'label', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Polichinel/Master_Thesis;1.0;['sklearn', 'theano', 'xgboost'];Conflict Prediction;2020-05-18 21:22:03;2020-10-31 00:35:36;2;0.152;Master_Thesis;Disaster Management
prakhardogra921;0;2017-09-03 06:33:34;Project in which unsupervised learning techniques are applied on product spending data collected for customers of a wholesale distributor in Lisbon, Portugal to identify customer segments hidden in the data.;Unsupervised learning techniques are applied on product spending data collected for customers;Wholesale & Retail;['Clustering', 'Decision Tree', 'ML', 'Supervised learning', 'Unsupervised learning', 'clustering', 'decision tree', 'fitting', 'label', 'machine learning', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 60.1%', 'HTML: 39.7%', 'Python: 0.2%'];;https://github.com/prakhardogra921/Clustering-Analysis-on-customers-of-a-wholesale-distributor;1.0;['sklearn'];Clustering;2017-09-12 07:54:29;2020-10-31 01:07:31;6;0.253;Clustering-Analysis-on-customers-of-a-wholesale-distributor;Wholesale
pratishthakapoor;0;;CRP Code;Retail replenishment code for supply chain management.;Utilities;['Decision Tree', 'decision tree', 'machine learning', 'model', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/pratishthakapoor/RetailReplenishement/;1.0;['sklearn'];Replenishment;2017-11-30 08:35:49;2020-10-31 01:07:26;;0.0;RetailReplenishement;Transportation
PrincetonUniversity;3;2018-02-06 19:23:15;Lots of metrics for quantifying gerrymandering.;Lots of metrics for quantifying gerrymandering.;Government and Public Works;['loss', 'rank'];Python;['Python: 80.3%', 'Jupyter Notebook: 19.7%'];GPL-3.0;https://github.com/PrincetonUniversity/gerrymandertests;0.6;[];Gerrymander tests;2020-09-23 17:16:18;2020-10-31 00:56:14;18;0.357;gerrymandertests;Politics
propublica;3;2016-04-15 19:59:57;Documentation for the ProPublica Congress API;ProPublica congress API access.;Justice, Law and Regulations;['ML', 'rank'];HTML;['HTML: 100.0%'];;https://github.com/propublica/congress-api-docs;0.6;[];Congress API;2018-07-09 17:20:19;2020-10-31 00:42:08;45;0.437;congress-api-docs;Tools
ProximaDas;2;2016-11-06 01:01:43;NLP final project repository;Public comments on government regulations.;Justice, Law and Regulations;['Clustering', 'ML', 'NLP', 'Natural Language', 'Natural Language Processing', 'Sentiment Analysis', 'clustering', 'filter'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/ProximaDas/nlp-govt-regulations;1.0;['nltk', 'sklearn'];Comments;2016-12-12 08:14:20;2020-10-31 00:43:06;1;0.099;nlp-govt-regulations;Policy and Regulatory
psi4;31;2014-08-04 22:30:47;Combining Psi4 and Numpy for education and development.;Combining Psi4 and Numpy for education and development.;Construction & Engineering;['AI', 'DL', 'GRU', 'Generation', 'NN', 'Propagation', 'Understanding', 'filter', 'fitting', 'label', 'labeled', 'layer', 'model', 'rank', 'train'];Jupyter Notebook;['Jupyter Notebook: 56.5%', 'Python: 43.5%'];;https://github.com/psi4/psi4numpy;0.6;[];Interactive Quantum Chemistry;2020-11-22 01:37:23;2020-10-31 00:24:19;157;0.532;psi4numpy;Engineering
pymedphys;19;2019-01-29 22:20:04;A community effort to develop an open standard library for Medical Physics in Python. Building quality transparent software together via peer review and open source distribution. Open code is better science.;A common, core Python package for Medical Physics;Physics;['AI', 'CV', 'DL', 'GAN', 'Generation', 'Image segmentation', 'ML', 'NER', 'NN', 'Object detection', 'Pix2Pix', 'RL', 'ReLu', 'Regression', 'Test data', 'Understanding', 'classification', 'epoch', 'filter', 'ground truth', 'label', 'labeled', 'layer', 'loss', 'model', 'predict', 'recommend', 'regression', 'train'];Python;['Python: 98.9%', 'Other: 1.1%'];Apache-2.0;https://github.com/pymedphys/pymedphys;1.0;['keras', 'skimage', 'sklearn', 'tensorflow'];Medical Physics 2;2020-11-28 08:56:52;2020-10-31 00:46:53;99;0.499;pymedphys;General
PyPSA;0;2018-10-04 09:19:46;Optimal Wind+Hydrogen+Other+Battery+Solar (WHOBS) electricity systems for European countries;Optimal Wind+Hydrogen+Other+Battery+Solar (WHOBS) electricity systems for European countries.;Utilities;['Generation', 'loss', 'model', 'train'];Jupyter Notebook;['Jupyter Notebook: 94.4%', 'Python: 5.6%'];GPL-3.0;https://github.com/PyPSA/WHOBS;0.6;[];Electricity Systems;2018-10-11 16:44:41;2020-10-31 00:59:57;19;0.362;WHOBS;Electricity
pzivich;0;2017-12-11 21:45:29;Tutorial in Python targeted at Epidemiologists. Will discuss the basics of analysis in Python 3;Tutorial to introduce epidemiology analysis in Python.;Healthcare;['AI', 'Bayesian', 'DL', 'Logistic regression', 'ML', 'Regression', 'fitting', 'label', 'machine learning', 'model', 'predict', 'recommend', 'regression'];Jupyter Notebook;['Jupyter Notebook: 98.8%', 'Other: 1.2%'];;https://github.com/pzivich/Python-for-Epidemiologists;1.0;['sklearn', 'statsmodels'];Python For Epidemiologists;2020-08-15 23:05:51;2020-10-31 00:38:52;70;0.472;Python-for-Epidemiologists;General
pzivich;4;2017-10-10 11:47:47;Epidemiology analysis package;Epidemiology analysis package.;Healthcare;['AI', 'Bayesian', 'DL', 'Logistic regression', 'ML', 'Regression', 'Understanding', 'fitting', 'label', 'labeled', 'machine learning', 'model', 'predict', 'recommend', 'regression'];Python;['Python: 100.0%'];MIT;https://github.com/pzivich/zEpid;1.0;['sklearn', 'statsmodels'];zEpid;2020-08-03 01:20:59;2020-10-31 00:38:49;69;0.471;zEpid;General
QuantEcon;0;2018-02-19 06:16:21;Computational Economics with Python;Small course in computational economics.;Economics;['model'];Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Other: 0.2%'];BSD-3-Clause;https://github.com/QuantEcon/columbia_mini_course;1.0;['sklearn'];Computational 2;2018-04-26 05:26:32;2020-10-31 00:30:56;24;0.383;columbia_mini_course;Computational
rajaswa;2;2018-10-04 15:51:40;Disaster Management using Text mining.;Disaster Management using Text mining.;Emergency & Relief;['CV', 'GRU', 'NLP', 'NN', 'RL', 'RNN', 'Test data', 'Training data', 'VGG', 'classification', 'epoch', 'filter', 'ground truth', 'label', 'layer', 'loss', 'model', 'neural network', 'output layer', 'predict', 'rank', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 80.5%', 'Python: 19.5%'];;https://github.com/rajaswa/Disaster-Management-;1.0;['gensim', 'keras', 'nltk', 'sklearn', 'spacy', 'theano'];Text Mining;2018-10-26 17:12:45;2020-10-31 00:35:52;3;0.188;Disaster-Management-;Disaster Management
rameshcalamur;0;2016-01-28 22:47:59;Detecting Financial Statement Anomalies;Detecting anomalies before filing, using R.;Accounting;[];R;['R: 100.0%'];;https://github.com/rameshcalamur/fin-stmt-anom;0.0;[];Financial Statement Anomalies;2016-01-28 23:44:58;2020-10-30 23:39:55;9;0.292;fin-stmt-anom;Machine Learning
RandomFractals;0;2017-06-23 22:44:02;Exploring public Chicago crimes data set in Python;Exploring public Chicago crimes data set in Python;Emergency & Relief;['NER', 'layer'];Jupyter Notebook;['Jupyter Notebook: 76.0%', 'HTML: 22.3%', 'JavaScript: 1.6%', 'Python: 0.1%'];Apache-2.0;https://github.com/RandomFractals/ChicagoCrimes;0.6;[];Chicago Crimes;2019-06-20 00:13:42;2020-10-31 00:34:06;13;0.327;ChicagoCrimes;Crime
rawillis98;0;2018-12-04 04:36:12;Implemented a strategy based on research paper (linked in readme) to paper trade on alpaca.markets;A strategy implementation based on a paper using Alpaca Markets.;Finance;[];Jupyter Notebook;['Jupyter Notebook: 57.2%', 'Python: 42.8%'];;https://github.com/rawillis98/alpaca;0.0;[];Research Paper Trading;2018-12-05 15:29:25;2020-10-31 00:38:25;4;0.214;alpaca;Trading & Investment
raymond180;0;2018-11-03 17:17:53;Research project on Financial Industry Regulatory Authority (FINRA) Trade Reporting and Compliance Engine (TRACE) academic version;Topic modelling on compliance.;Justice, Law and Regulations;['AI', 'ML', 'filter', 'label', 'model', 'recommend'];Jupyter Notebook;['Jupyter Notebook: 99.5%', 'Other: 0.5%'];MIT;https://github.com/raymond180/FINRA_TRACE;1.0;['gensim', 'sklearn'];FINRA Compliance;2019-09-18 14:37:31;2020-10-31 00:43:26;6;0.253;FINRA_TRACE;Policy and Regulatory
rdbraatz;4;2019-02-07 00:11:26;Code for Nature energy manuscript;Data driven prediction of batter life cycle.;Construction & Engineering;['model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 89.9%', 'MATLAB: 10.1%'];;https://github.com/rdbraatz/data-driven-prediction-of-battery-cycle-life-before-capacity-degradation;0.6;[];Battery Life Cycle;2020-06-16 04:26:41;2020-10-31 00:25:16;129;0.518;data-driven-prediction-of-battery-cycle-life-before-capacity-degradation;Engineering
RealRadOne;0;2018-09-07 23:30:31;System to help the banks check if a customer is eligible for a given loan;System to help the banks check if a customer is eligible for a given loan.;Banking & Insurance;['Decision Tree', 'Random forest', 'decision tree', 'layer', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/RealRadOne/Gyani-The-Loan-Eligibility-Predictor;1.0;['sklearn'];Loan Eligibility Ranking;2019-04-01 05:30:35;2020-10-30 23:41:43;2;0.152;Gyani-The-Loan-Eligibility-Predictor;Consumer Financial
richardddli;0;2019-04-02 02:17:28;Determining the correlation between state electricity rates and coal generation over the past decade;Determining the correlation between state electricity rates and coal generation over the past decade.;Utilities;['Generation', 'Regression', 'filter', 'regression'];Jupyter Notebook;['Jupyter Notebook: 67.3%', 'Python: 32.7%'];;https://github.com/richardddli/state_electricity_rates;1.0;['statsmodels'];Electricity-Coal Correlation;2019-04-02 06:48:36;2020-10-31 00:58:08;1;0.099;state_electricity_rates;Electricity
ricket-sjtu;0;2016-10-11 01:37:06;Course materials for Computational Biology and Bioinformatics - BI462;Course materials for Computational Biologyand Bioinformatics;Biotechnological & Life Sciences;['Bayesian', 'Clustering', 'Generation', 'Understanding', 'clustering', 'filter', 'loss', 'machine learning'];Jupyter Notebook;['Jupyter Notebook: 99.0%', 'Shell: 1.0%'];;https://github.com/ricket-sjtu/bioinformatics;0.6;[];Bioinformatics Course;2017-11-02 05:08:21;2020-10-30 23:47:52;18;0.357;bioinformatics;General
ritchie46;4;2016-07-02 21:35:43;2D structural analysis in Python;2D Structural Analysis in Python.;Construction & Engineering;['ML'];Python;['Python: 94.2%', 'Jupyter Notebook: 5.8%'];GPL-3.0;https://github.com/ritchie46/anaStruct;0.6;[];Structural Analysis;2020-10-10 06:30:27;2020-10-31 00:22:43;142;0.525;anaStruct;Engineering
rjhere;0;2018-03-27 18:49:51;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;An analysis of prescription and medical compliance;Healthcare;['Decision Tree', 'classification', 'decision tree', 'model', 'predict', 'rank', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/rjhere/Prescription-compliance-prediction;1.0;['sklearn', 'statsmodels'];Prescription Compliance;2018-04-02 17:33:45;2020-10-31 00:38:54;2;0.152;Prescription-compliance-prediction;General
robmarkcole;0;2016-09-06 08:31:50;Scripts that have been useful. Includes some analysis of EGSnrc 3ddose files;Useful python for medical physics.;Physics;['Linear regression', 'Regression', 'filter', 'label', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];;https://github.com/robmarkcole/Useful-python-for-medical-physics;1.0;['statsmodels'];Medical Physics;2017-12-04 20:18:28;2020-10-31 00:46:46;19;0.362;Useful-python-for-medical-physics;General
rochiecuevas;4;2018-10-17 03:53:47;Exploration of the impact of the peer-to-peer short-term rental industry to the housing market in San Francisco;The effect of peer to peer rentals on housing;Accommodation & Food;[];Jupyter Notebook;['Jupyter Notebook: 96.9%', 'HTML: 3.1%'];;https://github.com/rochiecuevas/shared_accommodations;0.0;[];Peer-to-Peer Housing;2018-11-02 08:30:40;2020-10-30 23:38:47;9;0.292;shared_accommodations;Accomodation
RohithYogi;3;2018-11-17 15:11:44;http://archive.ics.uci.edu/ml/index.html;Student achievement in secondary education.;Education & Research;['Decision Tree', 'LSTM', 'Logistic regression', 'Random forest', 'Regression', 'Validation data', 'classification', 'decision tree', 'label', 'layer', 'loss', 'model', 'predict', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.2%', 'Python: 0.8%'];;https://github.com/RohithYogi/Student-Performance-Prediction;1.0;['keras', 'sklearn', 'xgboost'];Student Performance 3;2020-01-25 13:05:15;2020-10-31 00:31:12;1;0.099;Student-Performance-Prediction;Student
roshetty;0;2018-01-19 05:11:55;# Supporting-Emergency-Room-Decision-Making-with-Relevant-Scientific-Literature #### Supervised by: Yassine Benajiba #### Course: Introduction to Statistical NLP #### School: The George Washington University ## Motivation and Problem Statement Our goal in this assignment was to provide healthcare providers (HCPs) with automated access to article;Supporting emergency room decision making;Emergency & Relief;['NLP'];Jupyter Notebook;['Jupyter Notebook: 83.0%', 'Python: 17.0%'];;https://github.com/roshetty/Supporting-Emergency-Room-Decision-Making-with-Relevant-Scientific-Literature;1.0;['gensim', 'nltk'];Emergency Room;2018-01-19 05:17:04;2020-10-31 00:32:00;5;0.236;Supporting-Emergency-Room-Decision-Making-with-Relevant-Scientific-Literature;Preventative and Reactive
rphaneendra;0;2018-04-10 05:42:29;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;NLP to recommend restaurants with similar menus;Accommodation & Food;['ML', 'NLP'];Jupyter Notebook;['Jupyter Notebook: 82.6%', 'HTML: 12.7%', 'CSS: 2.8%', 'Python: 1.9%'];;https://github.com/rphaneendra/Menu-Similarity;1.0;['nltk', 'sklearn'];Menu Recommendation;2018-04-10 06:04:13;2020-10-30 23:37:08;0;0.0;Menu-Similarity;Restaurant
rshea3;0;2019-02-21 01:56:11;Looking for factors indicating fraud using insurance claims data.;Predictive models to determine which automobile claims are fraudulent.;Banking & Insurance;['Decision Tree', 'Gradient Boosting', 'Gradient boosting', 'Logistic regression', 'Regression', 'decision tree', 'model', 'neural network', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/rshea3/alpha-insurance;1.0;['sklearn'];Claim Fraud;2019-02-21 01:59:16;2020-10-30 23:43:10;2;0.152;alpha-insurance;Insurance and Risk
ryanschaub;0;2018-03-11 17:56:07;Independent exploration project on U.S. Mexican Border wall, apprehensions, and staffing data publicly released by U.S. Border Patrol and Security. Visualization, statistical analysis, and linear regression are carried out to tell a story.;Independent exploration project on U.S. Mexican Border wall;Government and Public Works;['Regression', 'predict', 'regression'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/ryanschaub/The-U.S.-Mexican-Border-Wall-and-Staffing-A-Statistical-Approach-;0.6;[];Staffing Wall;2018-03-11 18:30:44;2020-10-31 00:51:09;1;0.099;The-U.S.-Mexican-Border-Wall-and-Staffing-A-Statistical-Approach-;Social Policies
sa7mon;0;2019-06-12 18:02:28;Venmo trasaction dataset for data analysis/visualization/anything;Venmo trasaction dataset for data analysis/visualization/;Banking & Insurance;['ML'];;[];;https://github.com/sa7mon/venmo-data;0.6;[];Venmo Data;2020-08-11 21:04:03;2020-10-30 23:42:33;153;0.53;venmo-data;Consumer Financial
sacul-git;2;2018-10-19 23:02:25;Package for calculating animal dominance hierarchies;Package for calculating animal dominance hierarchies.;Biotechnological & Life Sciences;['rank'];Jupyter Notebook;['Jupyter Notebook: 94.3%', 'Python: 5.7%'];GPL-3.0;https://github.com/sacul-git/hierarpy;0.6;[];Animal Hierarchy;2018-12-11 18:42:32;2020-10-31 00:20:34;2;0.152;hierarpy;Life-sciences
SaiBiswas;0;;A Text Mining Project to classify the data into different categories based on the given inputs;Bank Grievance Compliance Management.;Banking & Insurance;['LSTM', 'Logistic regression', 'NN', 'RNN', 'Random forest', 'Regression', 'Test data', 'classification', 'fitting', 'label', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/SaiBiswas/Bank-Grievance-Compliance-Management/;1.0;['nltk', 'sklearn', 'textblob'];Compliance;2020-03-31 07:37:12;2020-10-31 00:20:11;;0.0;Bank-Grievance-Compliance-Management;Insurance and Risk
saisrivatsan;2;2019-01-17 17:11:24;Implementation of Optimal Auctions through Deep Learning;Optimal auctions using deep learning.;Economics;['Gradient Descent', 'NN', 'ReLu', 'Test data', 'Validation data', 'deep learning', 'hidden layer', 'input layer', 'layer', 'loss', 'model', 'output layer', 'train'];Jupyter Notebook;['Jupyter Notebook: 74.8%', 'Python: 25.2%'];MIT;https://github.com/saisrivatsan/deep-opt-auctions;1.0;['tensorflow'];Auctions;2019-11-24 22:06:15;2020-10-31 00:30:23;47;0.44;deep-opt-auctions;Machine Learning
samarthiith;0;2019-03-20 08:34:47;Code and Data for the analysis of generation adequacy implication of Germany's coal phase out;Generation adequacy issues with Germany’s coal phaseout.;Utilities;['Generation', 'Test data', 'label', 'loss', 'recommend'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/samarthiith/DE_CoalPhaseOut;0.6;[];Coal Phase Out;2020-02-19 09:45:36;2020-10-31 01:01:55;0;0.0;DE_CoalPhaseOut;Coal, Oil & Gas
Samimust;0;2017-02-23 11:40:40;Data Wrangling, EDA, Feature Engineering, Model Selection, Regression, Binary and Multi-class Classification (Python, scikit-learn);Time-To-Failure (TTF) or Remaining Useful Life (RUL);Manufacturing;['Decision Tree', 'Linear regression', 'NN', 'Naive Bayes', 'Random forest', 'Regression', 'Test data', 'Training data', 'classification', 'decision tree', 'ground truth', 'label', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Samimust/predictive-maintenance;1.0;['sklearn'];Predictive Maintenance 2;2017-08-06 15:43:59;2020-10-31 00:44:07;113;0.509;predictive-maintenance;Maintenance
sanatasy;0;2019-02-12 17:10:48;Restaurant location recommender;Restaurant location recommendation tool and analysis;Accommodation & Food;['ML', 'Random forest', 'Regression', 'model', 'predict', 'recommend', 'regression'];Jupyter Notebook;['Jupyter Notebook: 95.7%', 'Python: 2.1%', 'HTML: 2.1%', 'Other: 0.1%'];MIT;https://github.com/sanatasy/Restaurant_Risk;1.0;['sklearn'];Location Recommendation;2020-04-07 20:40:05;2020-10-30 23:34:51;1;0.099;Restaurant_Risk;Restaurant
sarachmax;0;;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;redicting market crashes using an LPPL model.;Finance;['fitting', 'loss'];Jupyter Notebook;['Jupyter Notebook: 97.9%', 'Python: 2.1%'];;https://github.com/sarachmax/MarketCrashes_Prediction/;1.0;['sklearn'];Market Crash Prediction;2019-02-13 16:48:00;2020-10-31 00:36:53;;0.0;MarketCrashes_Prediction;Trading & Investment
SarahMestiri;0;2017-12-14 23:06:12;Studying Online Retail Dataset and getting insights from it;Studying Online Retail Dataset and getting insights from it.;Wholesale & Retail;['Clustering', 'K-Means', 'classification', 'clustering', 'model', 'predict', 'rank'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/SarahMestiri/online-retail-case;1.0;['sklearn'];Retail Analysis;2018-01-27 21:02:33;2020-10-31 01:07:39;24;0.383;online-retail-case;Retail
Sardhendu;0;2018-02-15 06:04:36;Classifying the type of property given Real Estate, satellite and Street view Images;Classifying the type of property given Real Estate, satellite and Street view Images;Real Estate, Rental & Leasing;['AI', 'ANN', 'CV', 'Clustering', 'Generation', 'K-Means', 'ML', 'NN', 'RL', 'ReLu', 'ResNet', 'Test data', 'Training data', 'Understanding', 'VGG', 'Validation data', 'activation function', 'autoencoder', 'classification', 'clustering', 'deep learning', 'epoch', 'filter', 'fitting', 'label', 'labeled', 'layer', 'loss', 'model', 'neural network', 'neuron', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Python: 0.3%'];;https://github.com/Sardhendu/PropertyClassification;1.0;['imutils', 'keras', 'skimage', 'sklearn', 'tensorflow'];Real Estate Classification;2018-05-20 02:01:42;2020-10-31 00:57:49;11;0.311;PropertyClassification;Real Estate
scngo;0;2018-12-15 01:37:54;Insight Data Science project;Time series analysis of ambulance dispatches in the City of San Diego.;Emergency & Relief;['LSTM', 'NN', 'RNN', 'Test data', 'epoch', 'filter', 'label', 'labeled', 'model', 'neuron', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/scngo/SD-ambulance-allocation;1.0;['keras', 'sklearn', 'statsmodels'];Ambulance Allocation;2018-12-15 02:11:22;2020-10-31 00:35:22;1;0.099;SD-ambulance-allocation;Ambulance:
sdasadia;0;2017-06-29 18:51:29;Oil & Natural Gas prie prediction using ARIMA & Neural Networks;Oil & Natural Gas price prediction using ARIMA & Neural Networks;Utilities;['LSTM', 'Linear regression', 'Regression', 'Training data', 'layer', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/sdasadia/Oil-Natural-Gas-Price-Prediction;1.0;['keras', 'sklearn', 'statsmodels'];Oil & Gas;2017-07-09 20:27:25;2020-10-31 01:02:00;14;0.334;Oil-Natural-Gas-Price-Prediction;Coal, Oil & Gas
SeanMcOwen;0;2017-05-06 02:39:05;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Source code notebooks basic finance applications.;Finance;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/SeanMcOwen/FinanceAndPython.com-BasicFinance;0.0;[];Basic Finance;2017-06-21 04:04:10;2020-10-31 00:37:46;8;0.281;FinanceAndPython.com-BasicFinance;Trading & Investment
SeanMcOwen;0;2017-07-21 02:12:51;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Project to cluster industries according to financial attributes.;Finance;['Clustering', 'clustering'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/SeanMcOwen/FinanceAndPython.com-ClusteringIndustries;1.0;['sklearn', 'statsmodels'];Industry Clustering;2017-07-23 02:53:37;2020-10-31 00:36:31;4;0.214;FinanceAndPython.com-ClusteringIndustries;Trading & Investment
SeanMcOwen;0;2017-08-24 00:11:37;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Basic forward contracts and hedging.;Finance;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/SeanMcOwen/FinanceAndPython.com-Derivatives;0.0;[];Basic Derivatives;2017-10-13 01:32:24;2020-10-31 00:37:44;3;0.188;FinanceAndPython.com-Derivatives;Trading & Investment
SeanMcOwen;0;2017-08-02 21:52:19;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Basic investment tools in python.;Finance;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/SeanMcOwen/FinanceAndPython.com-Investments;0.0;[];Basic Investments;2017-08-17 03:24:53;2020-10-31 00:37:42;7;0.268;FinanceAndPython.com-Investments;Trading & Investment
sekhansen;0;;Text Mining Illustration with Bank of England minutes data;Textual analysis over bank minutes.;Banking & Insurance;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/sekhansen/mpc_minutes_demo/;0.0;[];Bank of England Minutes;2019-01-30 17:54:47;2020-10-31 00:19:49;;0.0;mpc_minutes_demo;Management and Operations
Semionn;0;2016-05-09 10:10:02;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;JB wholesale distribution analysis.;Wholesale & Retail;['AI', 'Clustering', 'RL', 'Regression', 'clustering', 'label', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 96.0%', 'Python: 4.0%'];GPL-3.0;https://github.com/Semionn/JB-wholesale-distribution-analysis;1.0;['sklearn', 'statsmodels'];Distribution;2016-06-16 13:26:23;2020-10-31 01:07:30;2;0.152;JB-wholesale-distribution-analysis;Wholesale
Senkichi;6;2019-03-22 01:32:25;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;We used 4 different algorithms to predict the likelihood of future fires.;Emergency & Relief;['CNN', 'Logistic regression', 'NN', 'Random forest', 'ReLu', 'Regression', 'Test data', 'Training data', 'label', 'layer', 'machine learning', 'model', 'neural network', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 93.0%', 'JavaScript: 3.8%', 'HTML: 1.5%', 'R: 1.4%', 'Other: 0.3%'];;https://github.com/Senkichi/The_Catastrophe_Coefficient;1.0;['keras', 'sklearn'];Fire Prediction;2019-10-21 18:31:09;2020-10-31 00:36:16;1;0.099;The_Catastrophe_Coefficient;Disaster Management
sentinel-hub;2;2018-12-03 11:33:24;Monitoring water levels of lakes and reservoirs using satellite imagery;Monitoring water levels of lakes and reservoirs using satellite imagery.;Utilities;[];Jupyter Notebook;['Jupyter Notebook: 98.8%', 'Python: 1.2%'];MIT;https://github.com/sentinel-hub/water-observatory-backend;0.4;['skimage'];Water Observatory;2019-11-02 20:12:38;2020-10-31 01:03:04;51;0.447;water-observatory-backend;Water & Pollution
sharmaroshan;0;2019-04-10 17:27:40;Mining Student's Performances through their results in final and intermediate exams using Machine Learning;Mining student performance using machine learning.;Education & Research;['Clustering', 'artificial neural network', 'clustering', 'label', 'machine learning', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/sharmaroshan/Education-Process-Mining;1.0;['sklearn'];Student Performance;2019-04-17 17:28:06;2020-10-31 00:31:03;10;0.302;Education-Process-Mining;Student
sharmaroshan;0;;In this Data set we are Predicting the Insurance Claim by each user, Machine Learning algorithms for Regression analysis are used and Data Visualization are also performed to support Analysis.;Predicting medical insurance claims.;Banking & Insurance;['Random forest', 'Regression', 'Training data', 'Understanding', 'label', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/sharmaroshan/Insurance-Claim-Prediction/;1.0;['sklearn'];Medical Insurance Claims;2019-04-20 13:04:39;2020-10-31 00:20:06;;0.0;Insurance-Claim-Prediction;Insurance and Risk
sharmaroshan;0;2019-03-31 11:36:09;Analyzing the Online Transactions in UK and the countries who are purchase stuff from them and analyzing the reviews from them using NLP and Machine Learning;Analyzing the Online Transactions in UK;Wholesale & Retail;['Clustering', 'NLP', 'classification', 'clustering', 'label', 'machine learning'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/sharmaroshan/Online-Retail-Transactions-of-UK;0.6;[];Online Insights;2019-03-31 11:41:55;2020-10-31 01:07:45;7;0.268;Online-Retail-Transactions-of-UK;Retail
sharmaroshan;0;2019-03-31 13:08:31;Anamoly Detection for Detecting Defected Manufactured Semi-Conductors, as in this case of Classification, the Defected Chips would be very less in comparison to perfect Chips so we have apply either Over-Sampling or Under-Sampling.;Detecting Defects;Manufacturing;['CV', 'Generation', 'classification', 'fitting', 'label', 'labeled', 'machine learning', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/sharmaroshan/SECOM-Detecting-Defected-Items;1.0;['sklearn', 'xgboost'];Detecting Defects;2019-05-20 19:51:37;2020-10-31 00:44:19;14;0.334;SECOM-Detecting-Defected-Items;Failure
sharmaroshan;0;2019-03-31 05:15:50;Students Performance Evaluation using Feature Engineering, Feature Extraction, Manipulation of Data, Data Analysis, Data Visualization and at lat applying Classification Algorithms from Machine Learning to Separate Students with different grades;Students Performance Evaluation using Feature Engineering;Education & Research;['Logistic regression', 'Random forest', 'Regression', 'Training data', 'classification', 'label', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/sharmaroshan/Students-Performance-Analytics;1.0;['sklearn'];Student Performance 4;2020-06-11 05:17:17;2020-10-31 00:31:15;10;0.302;Students-Performance-Analytics;Student
sharmaroshan;0;2019-03-31 10:47:50;Comparing Top food and feed Producers around the globe and also seeking some interesting answers, solutions, patterns, hints and warnings through the power of Data Analysis and Data Visualization using Machine Learning.;Comparing Top food and feed Producers around the globe.;Government and Public Works;['Clustering', 'K-Means', 'clustering', 'label', 'machine learning', 'rank'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/sharmaroshan/World-Food-Production;1.0;['sklearn'];World Food Production;2019-06-16 08:51:22;2020-10-31 00:49:58;10;0.302;World-Food-Production;Social Policies
shayanray;2;;GlassBox at MIT PolicyHackathon 2019. Bringing transparency and auditability to recidivism risk-assessment and parole/pre-trial decision-making process.;Transparency and audibility to recidivism risk assessment;Government and Public Works;['AI', 'CV', 'ML', 'ReLu', 'Regression', 'Test data', 'artificial intelligence', 'label', 'layer', 'model', 'predict', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 92.7%', 'Python: 7.3%'];;https://github.com/shayanray/GlassBox/;1.0;['sklearn'];Recidivism Prediction;2019-04-21 23:56:26;2020-10-31 00:49:44;;0.0;GlassBox;Social Policies
shivangchopra11;3;2018-10-25 12:44:00;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;ATM Surveillance in banks use case.;Banking & Insurance;['AI', 'CNN', 'LSTM', 'ML', 'NN', 'label', 'model', 'predict', 'recognition'];Jupyter Notebook;['Jupyter Notebook: 96.7%', 'Python: 3.3%'];;https://github.com/shivangchopra11/InfyHack;1.0;['imutils', 'keras', 'tensorflow'];ATM Surveillance;2018-11-12 15:02:29;2020-10-30 23:44:51;6;0.253;InfyHack;Physical
Shomona;0;;Use supervised learning to predict which banks will fail in 2010;Predicting bank failure.;Banking & Insurance;['Logistic regression', 'Regression', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Shomona/Bank-Failure-Prediction/;1.0;['sklearn'];Bank Failure;2019-02-16 20:24:20;2020-10-31 00:20:09;;0.0;Bank-Failure-Prediction;Insurance and Risk
Shreyas3108;0;2017-06-20 08:17:32;Predicting house prices using Linear Regression and GBR;Predicting house prices using Linear Regression and GBR;Real Estate, Rental & Leasing;['Gradient Boosting', 'Gradient boosting', 'Linear regression', 'Regression', 'model', 'predict', 'regression'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Shreyas3108/house-price-prediction;1.0;['sklearn'];House Price;2020-10-02 05:31:53;2020-10-31 00:57:52;142;0.525;house-price-prediction;Real Estate
siddhantmaharana;0;2018-12-28 16:58:29;The notebook uses several text mining techniques to extract essential features from a corpus of legal documents and then uses these features to answer several research questions and identify the driving factors that influence the FINRA arbitration decisions.;Identify the driving factors that influence the FINRA arbitration decisions.;Justice, Law and Regulations;['Regression', 'label', 'regression'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/siddhantmaharana/text-analysis-on-FINRA-docs;0.6;[];Driving Factors FINRA;2018-12-28 17:17:31;2020-10-31 00:42:24;0;0.0;text-analysis-on-FINRA-docs;Policy and Regulatory
SiddheshAcharekar;0;2018-07-19 13:19:58;Liveright is a roommate recommendation system for students seeking accommodation and roommates near their university.;A system for students seeking roommates;Accommodation & Food;['recommend'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/SiddheshAcharekar/Liveright;1.0;['sklearn'];Roommate Recommendation;2018-08-31 12:11:48;2020-10-30 23:38:51;1;0.099;Liveright;Accomodation
sierraporta;0;2019-05-06 06:52:59;Correlation study between dependent and independent variables for measure of Free-Surface energy and several variables of chemical composition for asphalt binders. Based on data: Wei, J., Dong, F., Li, Y., & Zhang, Y. (2014). Relationship analysis between surface free energy and chemical composition of asphalt binder. Construction and Building M;Construction materials, free energy and chemical composition of asphalt binder.;Construction & Engineering;['Decision Tree', 'Linear regression', 'Random forest', 'Regression', 'Test data', 'Training data', 'decision tree', 'label', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/sierraporta/asphalt_binder;1.0;['sklearn', 'statsmodels'];Asphalt Binder;2019-05-06 06:57:25;2020-10-31 00:29:32;0;0.0;asphalt_binder;Material Science
sky-t;0;2016-12-12 06:47:55;Work related to Hack Oregon Emergency Response Team;Emergency response analysis.;Emergency & Relief;['filter', 'label'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Shell: 0.1%'];;https://github.com/sky-t/hack-or-emergency-response;0.6;[];Emergency Response;2017-03-02 17:16:29;2020-10-31 00:32:32;3;0.188;hack-or-emergency-response;Preventative and Reactive
slegroux;0;;predict insurance claim denial;Predicting insurance claim denial;Banking & Insurance;['CV', 'classification', 'label', 'machine learning', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/slegroux/claimdenial/;1.0;['sklearn', 'statsmodels'];Claim Denial;2016-06-20 17:37:35;2020-10-31 00:20:07;;0.0;claimdenial;Insurance and Risk
staceb;2;2018-04-30 09:00:11;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Charity exploration and machine learning.;Government and Public Works;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/staceb/charities_in_the_united_states;0.0;[];US Charities;2018-04-30 09:01:09;2020-10-31 00:52:15;0;0.0;charities_in_the_united_states;Charities
starfoe;0;2018-04-29 20:57:39;This project will help people find the favorite lodging during their travel, based on images or some descriptions they upload.;Find your preferred lodging by uploading an image;Accommodation & Food;['CNN', 'CV', 'Clustering', 'NN', 'RL', 'clustering', 'filter', 'label', 'labeled', 'layer', 'model', 'recognition', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];Apache-2.0;https://github.com/starfoe/Eye-bnb;1.0;['sklearn'];Reverse Image Lodging;2018-12-04 22:07:28;2020-10-30 23:39:41;4;0.214;Eye-bnb;Accomodation
stratospark;0;2017-01-23 03:14:51;Food Classification with Deep Learning in Keras / Tensorflow;Classification using Keras;Accommodation & Food;['CNN', 'Computer Vision', 'Convolutional Neural Network', 'DL', 'Gradient Descent', 'Image classification', 'ML', 'NN', 'RL', 'Random forest', 'ResNet', 'Understanding', 'classification', 'deep learning', 'epoch', 'fitting', 'label', 'labeled', 'layer', 'loss', 'model', 'neural network', 'predict', 'recognition', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];MIT;https://github.com/stratospark/food-101-keras;1.0;['keras', 'sklearn'];Food Classification;2017-03-22 22:20:58;2020-10-30 23:31:49;640;0.621;food-101-keras;Food
surajmall;0;;Making agriculture smart agriculture;Notebooks from agricultural assistant;Agriculture;['label'];Jupyter Notebook;['Jupyter Notebook: 85.6%', 'HTML: 6.1%', 'JavaScript: 5.6%', 'CSS: 2.3%', 'PHP: 0.4%'];;https://github.com/surajmall/Agriculture-Assistant/;1.0;['keras', 'sklearn', 'tensorflow'];Assistant;2018-07-23 13:49:45;2020-10-31 00:18:51;;0.0;Agriculture-Assistant;Development
sushant2811;0;;Natural Language Processing on school-budget data to predict accurate labels for expenditure category;Budget classification.;Education & Research;['NLP', 'Natural Language', 'Natural Language Processing', 'classification', 'label', 'model', 'predict'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/sushant2811/SchoolBudgetData/;1.0;['nltk', 'sklearn'];Budget NLP 3;2018-07-22 23:48:29;2020-10-31 00:31:56;;0.0;SchoolBudgetData;School
t-davidson;2;2017-03-01 18:13:12;"Repository for the paper ""Automated Hate Speech Detection and the Problem of Offensive Language"", ICWSM 2017";"Repository for the paper ""Automated Hate Speech Detection and the Problem of Offensive Language""";Justice, Law and Regulations;['AI', 'Generation', 'label', 'labeled', 'model', 'predict'];Jupyter Notebook;['Jupyter Notebook: 96.1%', 'Python: 3.9%'];MIT;https://github.com/t-davidson/hate-speech-and-offensive-language;1.0;['nltk', 'sklearn'];Hate Speech and Offense;2020-07-23 18:47:12;2020-10-31 00:42:16;507;0.607;hate-speech-and-offensive-language;Policy and Regulatory
talmo;4;2018-05-25 02:15:50;LEAP is now deprecated -- check out its successor SLEAP!;Estimating animal poses using DL.;Biotechnological & Life Sciences;['CNN', 'CV', 'Computer Vision', 'Generation', 'ML', 'NN', 'Training data', 'deep learning', 'filter', 'label', 'machine learning', 'model', 'neural network', 'predict', 'recommend', 'train'];MATLAB;['MATLAB: 87.3%', 'Python: 12.6%', 'Shell: 0.1%'];Apache-2.0;https://github.com/talmo/leap;1.0;['keras', 'tensorflow'];Pose;2020-06-01 17:07:46;2020-10-30 23:47:45;182;0.542;leap;General
tanoybhattacharya;0;2019-04-09 21:12:30;This data is from Montgomery County in Pennsylvania State of USA. 911 is most important social security feature of USA. It is the no. which citizens can call in case of any emergencies such as crime, medical, traffic, fire etc.As a data analyst you have to analyze and visualize the data and answer the question in section;911 data analysis.;Emergency & Relief;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/tanoybhattacharya/911-Data-Analysis;0.0;[];Calls Data Analysis;2019-04-09 21:16:55;2020-10-31 00:32:55;1;0.099;911-Data-Analysis;Preventative and Reactive
tecoevo;2;2018-06-12 08:41:20;Supplementary Material of Bargus-Ribera & Gokhale, agriculture project;Eco-evolutionary dynamics.;Agriculture;['Generation', 'model'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/tecoevo/agriculture;0.6;[];Eco-evolutionary;2019-10-17 16:32:53;2020-10-30 23:41:28;2;0.152;agriculture;Development
TiesdeKok;0;;This repository provides everything to get started with Python for Text Mining / Natural Language Processing (NLP);Comprehensive NLP techniques for accounting research.;Accounting;['NLP', 'Natural Language', 'Natural Language Processing', 'RL', 'Support Vector Machines', 'machine learning', 'model', 'neural network', 'recognition', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Shell: 0.1%'];;https://github.com/TiesdeKok/Python_NLP_Tutorial/;1.0;['gensim', 'nltk', 'sklearn', 'spacy', 'textblob'];Extensive NLP;2020-06-05 03:28:46;2020-10-31 00:18:32;;0.0;Python_NLP_Tutorial;Textual Analysis
TiesdeKok;0;;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;A walk-through in how to obtain EDGAR data.;Accounting;['ML', 'NLP', 'Natural Language', 'Natural Language Processing', 'RL', 'predict'];Jupyter Notebook;['Jupyter Notebook: 67.1%', 'HTML: 32.9%'];;https://github.com/TiesdeKok/UW_Python_Camp/;0.6;[];EDGAR;2018-07-10 18:03:52;2020-10-31 00:18:45;;0.0;UW_Python_Camp;Data, Parsing and APIs
tilde-lab;7;2018-02-15 15:14:16;Curated list of known efforts in materials informatics;Curated list of known efforts in materials informatics.;Construction & Engineering;['AI', 'Generation', 'ML', 'model', 'predict'];;[];;https://github.com/tilde-lab/awesome-materials-informatics;0.6;[];Awesome Materials Informatics;2020-11-04 16:32:53;2020-10-31 00:29:37;93;0.494;awesome-materials-informatics;Material Science
timsainb;0;2018-10-23 01:33:46;A generative network for animal vocalizations. For dimensionality reduction, sequencing, clustering, corpus-building, and generating novel 'stimulus spaces'. All with notebook examples using freely available datasets.;A generative network for animal vocalizations;Biotechnological & Life Sciences;['AI', 'Clustering', 'ML', 'RL', 'autoencoder', 'clustering', 'epoch', 'filter', 'fitting', 'label', 'layer', 'loss', 'machine learning', 'model', 'output layer', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Other: 0.2%'];MIT;https://github.com/timsainb/AVGN;1.0;['skimage', 'sklearn', 'tensorflow'];Animal Vocalisations;2020-11-13 17:28:42;2020-10-31 00:21:08;49;0.444;AVGN;Life-sciences
tina31726;0;2017-09-20 03:37:45;CS584-Machine Learning Project;Developed predictive models for crime rate.;Emergency & Relief;['CV', 'Decision Tree', 'Linear regression', 'NN', 'Naive Bayes', 'Regression', 'decision tree', 'fitting', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/tina31726/Crime-Prediction;1.0;['sklearn'];Crime Prediction;2019-11-30 16:43:40;2020-10-31 00:34:38;11;0.311;Crime-Prediction;Crime
toningega;0;2018-12-13 21:03:28;Dummy data generator for GDPR compliance when testing on cloud;Dummy data generator for GDPR compliance;Justice, Law and Regulations;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/toningega/Data_Generator;0.4;['nltk'];Data Generator GDPR;2018-12-17 11:54:38;2020-10-31 00:42:10;0;0.0;Data_Generator;Tools
tradeasystems;0;2018-12-31 08:43:09;Layer to connect with market providers for data + trading from different algorithmic trading providers / cryptocurrencurrencies / forex / equities to local file database;A layer to connect with market data providers.;Finance;['AI', 'RL', 'VGG', 'filter', 'label', 'model'];Python;['Python: 99.7%', 'Jupyter Notebook: 0.3%'];;https://github.com/tradeasystems/tradeasystems_connector;0.6;[];TradeConnector;2020-11-18 21:37:47;2020-10-31 00:38:40;8;0.281;tradeasystems_connector;Data
tradingeconomics;16;2015-03-31 14:31:39;TRADING ECONOMICS - API Code Examples;Information for 196 countries.;Economics;['AI', 'ML', 'RL', 'Test data', 'Understanding', 'recommend'];Python;['Python: 24.2%', 'JavaScript: 15.1%', 'C#: 15.0%', 'HTML: 13.0%', 'R: 9.4%', 'Java: 8.4%', 'Other: 14.9%'];;https://github.com/tradingeconomics/tradingeconomics;0.6;[];Trading Economics API;2020-11-25 16:47:45;2020-10-31 00:29:56;274;0.569;tradingeconomics;General
trentwoodbury;0;2016-10-06 03:21:02;Regression Case Study Project on Manufacturing Auction Sale Data;Regression Case Study Project on Manufacturing Auction Sale Data.;Manufacturing;['Regression', 'regression'];Jupyter Notebook;['Jupyter Notebook: 99.2%', 'Python: 0.8%'];;https://github.com/trentwoodbury/ManufacturingAuctionRegression;1.0;['sklearn'];Auto Manufacturing;2016-10-06 04:17:16;2020-10-31 00:44:33;0;0.0;ManufacturingAuctionRegression;Quality
tslindner;3;2018-04-07 17:38:46;GWU Project due 2018-04-17 (Tim Lindner, Marie Minier, JT Von Seggern, Malvika Mathur, Saba Lemma);Effects of cannabis legalization on crime.;Government and Public Works;['label'];Jupyter Notebook;['Jupyter Notebook: 99.3%', 'Python: 0.7%'];;https://github.com/tslindner/Effects-of-Cannabis-Legalization;0.6;[];Cannabis Legalisation Effect;2018-08-12 15:45:19;2020-10-31 00:49:39;3;0.188;Effects-of-Cannabis-Legalization;Social Policies
tstreamDOTh;4;2017-12-23 18:24:29;Use Instacart public dataset to report which products are often shopped together.;Instacart public dataset to report which products are often shopped together.;Wholesale & Retail;['rank'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/tstreamDOTh/Instacart-Market-Basket-Analysis;0.6;[];Market Basket Analysis;2018-03-19 06:05:07;2020-10-31 01:07:33;22;0.375;Instacart-Market-Basket-Analysis;Wholesale
tullyvelte;0;2017-11-07 20:33:23;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Helping the school board and mayor make strategic decisions regarding future school budgets and priorities;Education & Research;[];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/tullyvelte/SchoolPerformanceDataAnalysis;0.0;[];School Budgets and Priorities;2018-02-26 19:33:30;2020-10-31 00:31:23;1;0.099;SchoolPerformanceDataAnalysis;School
txytju;0;2018-04-07 16:16:39;Repository of KDD Cup, 2018.;Predict air quality(aq) in Beijing and London in the next 48 hours.;Utilities;['Clustering', 'Machine Translation', 'NLP', 'Test data', 'Training data', 'clustering', 'filter', 'label', 'loss', 'machine learning', 'model', 'predict', 'rank', 'train'];Jupyter Notebook;['Jupyter Notebook: 96.4%', 'Python: 3.6%'];;https://github.com/txytju/air-quality-prediction;1.0;['keras', 'sklearn', 'tensorflow', 'xgboost'];Air Quality Prediction;2018-07-04 10:53:43;2020-10-31 01:04:48;47;0.44;air-quality-prediction;Water & Pollution
ual;2;2016-05-17 06:16:57;Analyzing and visualizing rental listings data;Analyzing and visualizing rental listings data.;Real Estate, Rental & Leasing;['AI', 'DL', 'Regression', 'filter', 'label', 'model', 'predict', 'regression'];Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];;https://github.com/ual/rental-listings;1.0;['statsmodels', 'theano'];Analysing Rentals;2019-02-28 17:07:16;2020-10-31 00:58:00;10;0.302;rental-listings;Rental & Leasing
uci-cbcl;0;2015-06-28 16:41:05;Deep learning for gene expression inference;Predict the expression of specified target genes from a panel of about 1,000 pre-selected “landmark genes”.;Biotechnological & Life Sciences;['AI', 'K-Means', 'Linear regression', 'Regression', 'deep learning', 'epoch', 'hidden layer', 'layer', 'model', 'predict', 'recommend', 'regression', 'train'];Python;['Python: 99.6%', 'Shell: 0.4%'];GPL-2.0;https://github.com/uci-cbcl/D-GEX;1.0;['pylearn2', 'sklearn', 'theano'];Gene Expression Inference;2019-02-18 05:33:41;2020-10-30 23:54:10;125;0.516;D-GEX;Genomics
un-modelling;5;2016-02-19 20:21:45;Estimating Electricity Consumption from Household Surveys;Estimating Electricity Consumption from Household Surveys;Utilities;['Regression', 'model', 'regression'];Jupyter Notebook;['Jupyter Notebook: 94.1%', 'Python: 5.9%'];GPL-3.0;https://github.com/un-modelling/Electricity_Consumption_Surveys;1.0;['sklearn', 'statsmodels'];Electricity Consumption;2018-05-31 09:10:59;2020-10-31 01:01:25;3;0.188;Electricity_Consumption_Surveys;Electricity
usnistgov;2;2015-05-07 15:19:48;Shared work of the Modeling Methodology for Smart Manufacturing project;Shared work of a modelling Methodology.;Manufacturing;['AI', 'CV', 'DL', 'GRU', 'Generation', 'ML', 'NER', 'NLU', 'NN', 'RL', 'RNN', 'VGG', 'classification', 'layer', 'loss', 'model', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/usnistgov/modelmeth;1.0;['statsmodels'];Smart Manufacturing;2017-01-23 16:58:13;2020-10-31 00:43:53;6;0.253;modelmeth;General
vibrationtoolbox;5;2015-07-23 14:35:57;Educational Vibration programs. Intended for undergraduate and early graduate students.;Educational vibration programs.;Construction & Engineering;['ML', 'label'];Python;['Python: 98.9%', 'Makefile: 1.1%'];;https://github.com/vibrationtoolbox/vibration_toolbox;0.6;[];Vibration;2020-11-15 16:41:27;2020-10-31 00:23:14;54;0.452;vibration_toolbox;Engineering
vicelab;4;2018-12-04 19:49:35;strategic landuse for agriculture and ecosystem recovery.;Strategic land use for agriculture and ecosystem recovery;Agriculture;['Regression', 'Training data', 'classification', 'filter', 'label', 'layer', 'machine learning', 'model', 'predict', 'regression', 'train'];Python;['Python: 53.1%', 'JavaScript: 46.9%'];;https://github.com/vicelab/slaer;0.6;[];Recovery;2019-08-13 21:06:34;2020-10-30 23:41:14;4;0.214;slaer;Economics
victorpena1;0;2019-04-17 16:20:57;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Natural gas demand prediction.;Utilities;['AI', 'Gradient Boosting', 'Gradient boosting', 'LSTM', 'NN', 'RNN', 'Random forest', 'Recurrent Neural Network', 'Supervised learning', 'Test data', 'Understanding', 'label', 'layer', 'model', 'neural network', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/victorpena1/Natural-Gas-Demand-Prediction;1.0;['keras', 'sklearn', 'statsmodels'];Demand Prediction;2019-04-18 21:48:07;2020-10-31 01:02:15;5;0.236;Natural-Gas-Demand-Prediction;Coal, Oil & Gas
vikram-bhati;0;2018-05-30 12:36:04;Crime classification, analysis & prediction in Indore city;Crime classification, analysis & prediction in Indore city.;Emergency & Relief;['Decision Tree', 'NN', 'classification', 'decision tree', 'model', 'predict', 'train'];Jupyter Notebook;['Jupyter Notebook: 95.2%', 'CSS: 3.1%', 'Other: 1.7%'];MIT;https://github.com/vikram-bhati/PAASBAAN-crime-prediction;1.0;['sklearn'];Crime Prediction;2018-05-30 12:55:38;2020-10-31 00:34:36;22;0.375;PAASBAAN-crime-prediction;Crime
Vipul115;0;2018-11-03 22:55:42;This project aims to understand trends in agricultural prices through quantity arrival data for different commodities in state of Maharashtra, India.;Agricultural price prediction;Agriculture;['Understanding', 'filter', 'model'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Vipul115/Statistical-Time-Series-Analysis-on-Agricultural-Commodity-Prices;1.0;['statsmodels'];Prices 2;2019-03-05 11:08:51;2020-10-30 23:40:42;12;0.319;Statistical-Time-Series-Analysis-on-Agricultural-Commodity-Prices;Economics
viritaromero;0;2018-12-18 19:12:40;Artificial Intelligence app that detects diseases in plants using a deep learning model;App that detects diseases in plants using a deep learning model.;Biotechnological & Life Sciences;['AI', 'CNN', 'CV', 'Computer Vision', 'Convolutional Neural Network', 'NN', 'ReLu', 'ResNet', 'classification', 'deep learning', 'epoch', 'label', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 98.6%', 'Python: 1.4%'];;https://github.com/viritaromero/Plant-diseases-classifier;0.6;[];Plants Disease;2019-02-26 07:54:48;2020-10-30 23:55:13;93;0.494;Plant-diseases-classifier;Life-sciences
vsub21;0;2018-05-17 04:11:45;A Jupyter dashboard depicting the effects of various financial regulations on systemic risk.;Systematic risk of various financial regulations.;Justice, Law and Regulations;['Anomaly detection', 'predict'];Jupyter Notebook;['Jupyter Notebook: 91.4%', 'HTML: 8.6%'];;https://github.com/vsub21/systemic-risk-dashboard;0.6;[];Risk;2019-05-16 00:04:09;2020-10-31 00:43:18;2;0.152;systemic-risk-dashboard;Policy and Regulatory
vtyeh;0;2018-02-22 04:06:02;Using pandas to analyze school and student performance within a district;Using pandas to analyze school and student performance within a district;Education & Research;['label'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/vtyeh/pandas-challenge;0.6;[];School Performance 2;2018-08-16 22:44:57;2020-10-31 00:31:27;3;0.188;pandas-challenge;School
waldronlab;16;2016-02-09 10:26:44;Applied Statistics for High-Throughput Biology;Applied Statistics for High-Throughput Biology;Biotechnological & Life Sciences;['Clustering', 'Linear regression', 'Logistic regression', 'Regression', 'clustering', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/waldronlab/AppStatBio;0.6;[];Applied Stats;2019-11-10 20:18:06;2020-10-30 23:48:20;12;0.319;AppStatBio;General
wassname;0;2016-09-28 04:08:06;Using machine learning to find water pipelines in aerial images with 73% accuracy;Using machine learning to find water pipelines in aerial images.;Utilities;['Computer Vision', 'Convolutional Neural Network', 'Image segmentation', 'ReLu', 'Rectifier', 'Test data', 'Training data', 'U-Net', 'activation function', 'autoencoder', 'classification', 'epoch', 'fitting', 'ground truth', 'label', 'layer', 'loss', 'model', 'neural network', 'predict', 'recognition', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/wassname/pipe-segmentation;1.0;['keras', 'skimage'];Water Pipelines;2016-10-02 02:20:20;2020-10-31 01:03:09;14;0.334;pipe-segmentation;Water & Pollution
whs2k;2;2018-03-20 05:48:15;A Machine Learning Law Match Maker;A machine learning law match maker.;Justice, Law and Regulations;['AI', 'machine learning', 'model', 'train'];Jupyter Notebook;['Jupyter Notebook: 80.0%', 'HTML: 11.0%', 'Python: 6.5%', 'CSS: 2.3%', 'Makefile: 0.2%'];MIT;https://github.com/whs2k/GPO-AI;1.0;['gensim', 'nltk'];ML Law Matching;2018-04-03 17:18:21;2020-10-31 00:43:45;0;0.0;GPO-AI;Judicial Applied
whugue;0;2016-06-22 14:44:19;Can we identify schools at risk for closure by performance and other characteristics?;Identify schools at risk for closure by performance and other characteristics.;Education & Research;['DL', 'Random forest', 'classification', 'label', 'model', 'predict', 'rank', 'train'];Jupyter Notebook;['Jupyter Notebook: 98.9%', 'HTML: 1.1%'];;https://github.com/whugue/school-closure;1.0;['sklearn'];School Closure;2018-07-31 20:17:04;2020-10-31 00:31:44;2;0.152;school-closure;School
widdowquinn;0;2014-07-08 06:38:10;Presentation and example material for the EMBL Plant and Pathogen Genomics workshop, 8-11 July 2014;Presentation and example material for Plant and Pathogen Genomics;Biotechnological & Life Sciences;['Clustering', 'classification', 'clustering', 'filter', 'predict', 'recommend', 'train'];Jupyter Notebook;['Jupyter Notebook: 99.3%', 'Other: 0.7%'];MIT;https://github.com/widdowquinn/Teaching-EMBL-Plant-Path-Genomics;0.6;[];Plant Genomics;2017-11-16 10:02:19;2020-10-30 23:55:11;6;0.253;Teaching-EMBL-Plant-Path-Genomics;Genomics
williamadams1;0;2018-10-05 15:46:37;Total Residential US Natural Gas Consumption is analyzed with a seasonal ARIMA model in Python;Natural gas consumption forecasting.;Utilities;['model', 'predict'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/williamadams1/natural-gas-consumption-forecasting;1.0;['statsmodels'];Consumption Forecasting;2018-10-05 16:40:02;2020-10-31 01:02:16;1;0.099;natural-gas-consumption-forecasting;Coal, Oil & Gas
worldbank;3;;A comparative assessment of machine learning classification algorithms applied to poverty prediction;A comparative assessment of machine learning classification algorithms applied to poverty prediction.;Government and Public Works;['AI', 'ANN', 'Automated machine learnin', 'Bayesian', 'CV', 'DL', 'Decision Tree', 'GBM', 'Generation', 'Gradient Boosting', 'Gradient boosting', 'K-Nearest neighbor', 'Logistic regression', 'ML', 'NER', 'NLP', 'NN', 'Naive Bayes', 'RL', 'Random forest', 'Regression', 'Support Vector Machines', 'Test data', 'Training data', 'Validation data', 'autoencoder', 'classification', 'decision tree', 'deep learning', 'epoch', 'filter', 'fitting', 'hidden layer', 'input layer', 'label', 'labeled', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'rank', 'recommend', 'regression', 'train', 'unlabeled'];Jupyter Notebook;['Jupyter Notebook: 97.9%', 'Python: 2.0%', 'Other: 0.1%'];;https://github.com/worldbank/ML-classification-algorithms-poverty/;1.0;['catboost', 'keras', 'lightgbm', 'sklearn', 'statsmodels', 'tensorflow', 'tpot', 'xgboost'];World Bank Poverty I;2018-09-28 14:05:35;2020-10-31 00:49:00;;0.0;ML-classification-algorithms-poverty;Social Policies
xiaofei6677;0;2018-07-23 07:33:52;A flickr metadata mining tool for tourism research;Metadata mining tool for tourism research.;Miscellaneous;['label', 'rank'];Python;['Python: 100.0%'];;https://github.com/xiaofei6677/TourismFlickrMiner;0.6;[];Flickr;2016-04-20 03:23:10;2020-10-31 00:45:48;1;0.099;TourismFlickrMiner;Tourism
xinychen;5;2018-09-28 12:49:48;Machine learning for transportation data imputation and prediction.;Creating accurate and efficient solutions for the spatio-temporal traffic data imputation and prediction tasks.;Utilities;['AI', 'Anomaly detection', 'Automated machine learnin', 'Bayesian', 'CNN', 'CV', 'Clustering', 'Computer Vision', 'DL', 'GAN', 'GRU', 'Generative Adversarial Network', 'ML', 'NN', 'Recurrent Neural Network', 'Regression', 'Training data', 'artificial intelligence', 'autoencoder', 'clustering', 'deep learning', 'epoch', 'filter', 'label', 'machine learning', 'model', 'neural network', 'predict', 'rank', 'recognition', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/xinychen/transdim;1.0;['statsmodels', 'tensorflow'];Transdim;2020-11-27 07:42:17;2020-10-31 01:05:25;435;0.598;transdim;Transportation
yajnab;0;2017-10-27 09:46:01;A project in python for automated design of different steel structure design for my B.Tech Project Part-1 & 2;Automated design of different steel structure;Construction & Engineering;['AI', 'NN', 'classification'];Python;['Python: 100.0%'];MIT;https://github.com/yajnab/pySteel;0.6;[];Pysteel;2018-05-01 13:51:05;2020-10-31 00:23:33;1;0.099;pySteel;Engineering
yiaktan;0;2017-11-11 00:56:44;Millions of developers and companies build, ship, and maintain their software on GitHub  the largest and most advanced development platform in the world.;Second hand concert tickets;Miscellaneous;['CV', 'Gradient Boosting', 'Gradient boosting', 'Linear regression', 'Logistic regression', 'Random forest', 'Regression', 'Test data', 'Understanding', 'classification', 'filter', 'hidden layer', 'input layer', 'label', 'layer', 'machine learning', 'model', 'output layer', 'predict', 'rank', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/yiaktan/Secondhand_Concert_Tickets;1.0;['keras', 'sklearn', 'statsmodels'];Concert Tickets;2018-03-18 22:42:23;2020-10-31 00:45:59;11;0.311;Secondhand_Concert_Tickets;Entertainment
YungChunLu;0;2016-10-28 20:08:00;The dataset contains 9568 data points collected from a Combined Cycle Power Plant over 6 years (2006-2011), when the plant was set to work with full load.;The dataset contains 9568 data points collected from a Combined Cycle Power Plant over 6 years;Utilities;['Decision Tree', 'Generation', 'Linear regression', 'Random forest', 'Regression', 'Test data', 'Understanding', 'decision tree', 'label', 'machine learning', 'model', 'predict', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/YungChunLu/UCI-Power-Plant;0.6;[];Power Plant;2016-10-28 20:53:47;2020-10-31 01:01:50;8;0.281;UCI-Power-Plant;Electricity
zhentaoshi;6;2016-01-17 16:43:44;Econ5170@CUHK: Computational Methods in Economics (2020 Spring).;Computational methods in economics.;Economics;['Linear regression', 'ML', 'NN', 'Regression', 'label', 'machine learning', 'model', 'predict', 'recommend', 'regression', 'train'];Jupyter Notebook;['Jupyter Notebook: 86.3%', 'R: 5.9%', 'TeX: 4.8%', 'Python: 2.2%', 'Julia: 0.8%'];GPL-3.0;https://github.com/zhentaoshi/econ5170;1.0;['statsmodels'];Computational;2020-10-26 03:26:31;2020-10-31 00:30:53;100;0.5;econ5170;Computational
zischwartz;0;2017-07-28 15:02:55;Worker Fatalities and Catastrophes Map from OSHA data;Worker Fatalities and Catastrophes Map from OSHA data;Government and Public Works;['AI', 'ML'];Jupyter Notebook;['Jupyter Notebook: 95.2%', 'JavaScript: 3.6%', 'Other: 1.2%'];;https://github.com/zischwartz/workerfatalities;0.6;[];Worker Fatalities;2018-09-20 20:01:45;2020-10-31 00:51:11;0;0.0;workerfatalities;Social Policies
