author;contributors;created_at;description;description2;industry;language_primary;languages;license;link;ml_detected;ml_libs;ml_tags;ml_terms;name;pushed_at;scraped_at;stars;stars_score;title;type
583;0;2020-03-15 02:19:04;;Ã¦ÂÂºÃ¥ÂÂ¨Ã¥Â­Â¦Ã¤Â¹Â Ã§ÂºÂ¯Ã§Â®ÂÃ¦Â³ÂÃ¥Â®ÂÃ§ÂÂ°Ã£ÂÂÃ¦ÂÂÃ§Â»Â­Ã¦ÂÂ´Ã¦ÂÂ°;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/583/machine_learning_notebook;1.0;['sklearn'];['KNN', 'NN', 'Regression'];['KNN', 'NN', 'classif', 'clustering', 'decision tree', 'gradient descent', 'k-means', 'k-nearest neighbor', 'linear regression', 'logistic regression', 'regression'];;2020-03-20 04:41:34;2020-12-19 22:36:54;13.0;0.327;machine_learning_notebook;
aaren;6;2014-02-17 17:28:59;Markdown <=> IPython Notebook;Markdown <=> IPython Notebook;;Jupyter Notebook;['Jupyter Notebook: 64.9%', 'Python: 33.3%', 'Smarty: 1.5%', 'Shell: 0.3%'];BSD-2-Clause;https://github.com/aaren/notedown;0.8;['pattern'];['Regression'];[];;2020-11-03 15:07:00;2020-12-20 08:46:03;746.0;0.629;notedown;
abhinavsagar;0;2019-06-18 14:10:12;Sample notebooks for Kaggle competitions;Sample notebooks for Kaggle competitions;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/abhinavsagar/kaggle-notebooks;1.0;['keras', 'skimage', 'sklearn', 'tensorflow'];['AI', 'ANN', 'CNN', 'CV', 'DL', 'K-Means', 'NN', 'RL', 'Random Forest', 'ReLu', 'Regression', 'U-Net'];['AI', 'NN', 'classif', 'clustering', 'detect', 'fit', 'k-means', 'predict', 'u-net'];;2020-09-22 15:27:59;2020-12-20 08:45:01;71.0;0.473;kaggle-notebooks;
abulbasar;2;2017-05-05 18:09:09;notebooks with example for machine learning examples;notebooks with example for machine learning examples;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];Apache-2.0;https://github.com/abulbasar/machine-learning;1.0;['keras', 'lightgbm', 'nltk', 'opencv-python', 'pattern', 'sklearn', 'spacy', 'statsmodels', 'tensorflow', 'vocabulary', 'xgboost'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'Decision Tree', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Sentiment Analysis', 'Text Classification'];['ML', 'machine learning'];;2020-09-10 06:32:24;2020-12-19 23:15:29;45.0;0.437;machine-learning;
acgeospatial;0;2018-01-28 16:21:21;Sample sample scripts and notebooks on processing satellite imagery;Sample sample scripts and notebooks on processing satellite imagery;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/acgeospatial/Satellite_Imagery_Python;1.0;['skimage', 'sklearn'];['CV', 'Classification', 'K-Means', 'Recommender'];['CV', 'classif', 'k-means'];;2021-01-02 15:31:39;2020-12-19 22:41:03;79.0;0.482;Satellite_Imagery_Python;
ageron;38;2016-02-16 19:48:39;A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in python using Scikit-Learn and TensorFlow.;A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in python using Scikit-Learn and TensorFlow.;;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Other: 0.3%'];Apache-2.0;https://github.com/ageron/handson-ml;1.0;['keras', 'nltk', 'pattern', 'skimage', 'sklearn', 'tensorflow', 'vocabulary', 'xgboost'];['AI', 'ANN', 'Anomaly Detection', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GRU', 'Gradient Boosting', 'Image Segmentation', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'Machine Translation', 'NER', 'NN', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];['AI', 'RL', 'bayesian', 'fit', 'layer', 'machine learning', 'model', 'predict', 'random forest', 'recommend', 'regression', 'reinforcement learning', 'supervised learning', 'train'];;2020-11-29 09:08:01;2020-12-20 08:43:41;21950.0;0.777;handson-ml;
ageron;40;2019-01-08 03:49:07;A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in Python using Scikit-Learn, Keras and TensorFlow 2.;A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in Python using Scikit-Learn, Keras and TensorFlow 2.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/ageron/handson-ml2;1.0;['keras', 'nltk', 'pattern', 'sklearn', 'spacy', 'tensorflow', 'vocabulary', 'xgboost'];['AI', 'ANN', 'Anomaly Detection', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GAN', 'GRU', 'Gradient Boosting', 'Image Segmentation', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'Machine Translation', 'NER', 'NLP', 'NN', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Sentiment Analysis', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];['AI', 'CNN', 'GAN', 'ML', 'NN', 'RL', 'RNN', 'activation function', 'anomaly', 'anomaly detection', 'artificial neural network', 'autoencoder', 'bayesian', 'classif', 'clustering', 'computer vision', 'convolutional neural network', 'decision tree', 'deep learning', 'detect', 'generative adversarial network', 'image segmentation', 'k-means', 'layer', 'loss', 'lstm', 'machine learning', 'machine translation', 'model', 'natural language processing', 'neural network', 'object detection', 'random forest', 'recommend', 'regression', 'reinforcement learning', 'resnet', 'sentiment analysis', 'supervised learning', 'support vector machines', 'train', 'unsupervised learning'];;2020-12-31 16:37:57;2020-12-20 08:50:37;12136.0;0.756;handson-ml2;
ageron;2;2020-06-23 06:38:28;Julia Jupyter/Colab Notebooks;Julia Jupyter/Colab Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/ageron/julia_notebooks;0.8;['pattern'];['AI', 'ML', 'RL', 'ReLu', 'Recommender'];[];;2020-07-06 05:21:38;2020-12-20 08:43:59;50.0;0.446;julia_notebooks;
ageron;3;2019-01-06 01:38:21;"Notebooks for my ""Deep Learning with TensorFlow 2 and Keras"" course";"Notebooks for my ""Deep Learning with TensorFlow 2 and Keras"" course";;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/ageron/tf2_course;1.0;['keras', 'pattern', 'sklearn', 'tensorflow', 'vocabulary'];['CNN', 'CV', 'Classification', 'GRU', 'LSTM', 'ML', 'NN', 'Object Detection', 'RL', 'RNN', 'ReLu', 'Regression', 'ResNet', 'Sentiment Analysis'];['RL', 'deep learning', 'machine learning', 'recommend', 'train'];;2020-11-13 18:06:13;2020-12-20 08:43:22;1736.0;0.673;tf2_course;
AiswaryaSrinivas;0;2018-07-29 12:28:42;This contains python notebooks for Data Analysis;This contains python notebooks for Data Analysis;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/AiswaryaSrinivas/DataScienceWithPython;1.0;['gensim', 'lightgbm', 'nltk', 'sklearn', 'spacy', 'textblob', 'vocabulary', 'xgboost'];['CV', 'Classification', 'Decision Tree', 'GBM', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'RL', 'Random Forest', 'Recommender', 'Regression'];['predict', 'recommend'];;2019-02-15 03:53:14;2020-12-20 08:51:42;17.0;0.352;DataScienceWithPython;
alchemyst;5;2015-09-02 17:56:42;Jupyter notebooks for Dynamics and Control;Jupyter notebooks for Dynamics and Control;;Jupyter Notebook;['Jupyter Notebook: 99.5%', 'Other: 0.5%'];GPL-3.0;https://github.com/alchemyst/Dynamics-and-Control;0.8;['keras', 'pattern', 'sklearn'];['AI', 'CV', 'Classification', 'Linear Regression', 'ML', 'NN', 'Recommender', 'Regression'];[];;2020-07-18 14:01:14;2020-12-20 08:44:28;76.0;0.479;Dynamics-and-Control;
alexcfleming;0;2017-11-22 03:06:21;Alex Fleming's solution work in Python on Deep Learning;Alex Fleming's solution work in Python on Deep Learning;;Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Python: 0.4%'];;https://github.com/alexcfleming/Python_DL_Working_Notebooks;1.0;['caffe', 'keras', 'pattern', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'ANN', 'AlexNet', 'CNN', 'CV', 'Chatbot', 'Classification', 'Clustering', 'DL', 'GRU', 'LSTM', 'Logistic Regression', 'ML', 'Machine Translation', 'NER', 'NLP', 'NN', 'Object Detection', 'RNN', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Speech Recognition', 'Supervised Learning', 'VGG'];['DL', 'deep learning'];;2018-02-15 06:57:31;2020-12-20 08:51:01;15.0;0.34;Python_DL_Working_Notebooks;
algorithmiaio;0;2016-01-12 20:02:40;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/algorithmiaio/awesome-ipython-notebooks;0.8;['nltk', 'pattern', 'sklearn', 'vocabulary'];['AI', 'Classification', 'ML', 'NLP', 'Regression', 'Sentiment Analysis'];[];;2016-04-27 17:54:51;2020-12-20 08:48:40;46.0;0.439;awesome-ipython-notebooks;
Alireza-Akhavan;0;2019-12-02 18:36:15;RNN(SimpleRNN, LSTM, GRU) Tensorflow2.0 & Keras Notebooks (Workshop materials);RNN(SimpleRNN, LSTM, GRU) Tensorflow2.0 & Keras Notebooks (Workshop materials);;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Python: 0.3%'];;https://github.com/Alireza-Akhavan/rnn-notebooks;1.0;['keras', 'pattern', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'CNN', 'Classification', 'GRU', 'LSTM', 'Machine Translation', 'NLP', 'NN', 'RNN', 'ReLu'];['CNN', 'NLP', 'NN', 'RNN', 'classif', 'gru', 'layer', 'loss', 'lstm', 'model', 'predict', 'recogn', 'text classification', 'train'];;2020-02-11 15:56:32;2020-12-19 22:22:49;45.0;0.437;rnn-notebooks;
allegroai;0;2019-06-10 09:12:14;TRAINS Jupyter Notebook Plugin - Add GIT Support For Jupyter Notebook;TRAINS Jupyter Notebook Plugin - Add GIT Support For Jupyter Notebook;;Python;['Python: 53.1%', 'JavaScript: 45.0%', 'Shell: 1.9%'];Apache-2.0;https://github.com/allegroai/trains-jupyter-plugin;1.0;['pattern'];['AI', 'Classification', 'DL'];['recommend', 'train'];;2020-04-01 12:30:02;2020-12-19 23:27:02;38.0;0.423;trains-jupyter-plugin;
altair-viz;7;2018-04-27 21:21:29;Notebooks for the Altair tutorial;Notebooks for the Altair tutorial;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/altair-viz/altair-tutorial;0.8;['pattern'];['RL'];[];;2020-05-26 01:19:15;2020-12-19 22:30:43;264.0;0.567;altair-tutorial;
amitsaha;0;2016-05-31 18:10:30;;;;HTML;['HTML: 39.6%', 'JavaScript: 28.1%', 'CSS: 20.9%', 'Jupyter Notebook: 11.4%'];MIT;https://github.com/amitsaha/jupyter-notebook-slides;1.0;['statsmodels'];['Linear Regression', 'ML', 'Recommender', 'Regression'];['ML', 'RL', 'fit', 'gru', 'layer', 'recommend', 'train'];;2017-06-14 05:40:33;2020-12-20 08:44:31;17.0;0.352;jupyter-notebook-slides;
amueller;11;2016-05-29 18:29:47;"Notebooks and code for the book ""Introduction to Machine Learning with Python""";"Notebooks and code for the book ""Introduction to Machine Learning with Python""";;Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Python: 0.4%'];;https://github.com/amueller/introduction_to_ml_with_python;1.0;['nltk', 'sklearn', 'spacy', 'vocabulary'];['CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GBM', 'Gradient Boosting', 'K-Means', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Sentiment Analysis', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];['CV', 'decision tree', 'label', 'machine learning', 'model', 'neural network', 'recommend', 'train'];;2020-10-15 18:19:04;2020-12-19 22:42:10;5106.0;0.722;introduction_to_ml_with_python;
Anaconda-Platform;3;2015-10-20 20:07:06;next generation slides for Jupyter Notebooks;next generation slides for Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 65.6%', 'JavaScript: 24.7%', 'Python: 4.0%', 'CSS: 2.9%', 'Makefile: 1.3%', 'Batchfile: 1.2%', 'Smarty: 0.3%'];;https://github.com/Anaconda-Platform/nbpresent;1.0;['pattern'];['ANN', 'Classification', 'ML', 'NER', 'NN', 'RL'];['ML'];;2020-06-22 23:09:17;2020-12-20 08:52:05;157.0;0.532;nbpresent;
anurag;4;2017-01-23 01:38:56;Docker environment for fast.ai Deep Learning Course 1 at http://course.fast.ai;Docker environment for fast.ai Deep Learning Course 1 at http://course.fast.ai;;Python;['Python: 90.6%', 'Dockerfile: 9.1%', 'Shell: 0.3%'];MIT;https://github.com/anurag/fastai-course-1;1.0;['pattern'];['ML', 'RL', 'Recommender'];['deep learning'];;2020-08-28 15:17:07;2020-12-19 23:32:33;98.0;0.498;fastai-course-1;
apache;40;2019-09-19 04:00:17;Submarine is Cloud Native Machine Learning Platform.;Submarine is Cloud Native Machine Learning Platform.;;Java;['Java: 53.2%', 'Python: 11.3%', 'Shell: 9.0%', 'TypeScript: 7.9%', 'Scala: 5.7%', 'HTML: 4.7%', 'Other: 8.2%'];Apache-2.0;https://github.com/apache/submarine;1.0;['Pillow', 'keras', 'mxnet', 'pytorch', 'sklearn', 'tensorflow', 'xgboost'];['AI', 'AlexNet', 'CNN', 'CV', 'Classification', 'GAN', 'LSTM', 'ML', 'NN', 'RL', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'VGG'];['AI', 'AutoML', 'ML', 'NER', 'NN', 'RL', 'classif', 'clustering', 'deep learning', 'detect', 'epoch', 'filter', 'label', 'layer', 'logistic regression', 'loss', 'machine learning', 'model', 'predict', 'recogn', 'recommend', 'regression', 'resnet', 'test data', 'train', 'training data', 'vgg'];;2021-01-02 14:32:31;2020-12-19 22:27:15;376.0;0.589;submarine;
aparrish;0;2018-01-26 19:30:04;Notebooks and other materials for Reading and Writing Electronic Text;Notebooks and other materials for Reading and Writing Electronic Text;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/aparrish/rwet;1.0;['gensim', 'keras', 'nltk', 'pattern', 'sklearn', 'spacy', 'stanza', 'tensorflow', 'vocabulary'];['AI', 'Classification', 'Clustering', 'K-Means', 'LSTM', 'ML', 'NER', 'NLP', 'NN', 'RL', 'RNN', 'Random Forest', 'Recommender', 'Sentiment Analysis'];['AI', 'ML', 'NLP', 'NN', 'fit', 'neural network', 'predict'];;2020-10-27 19:09:53;2020-12-20 08:51:55;127.0;0.517;rwet;
aqibsaeed;0;2016-11-04 14:55:05;Convolutional Neural Network for Human Activity Recognition in Tensorflow;Convolutional Neural Network for Human Activity Recognition in Tensorflow;;Jupyter Notebook;['Jupyter Notebook: 57.0%', 'Java: 43.0%'];Apache-2.0;https://github.com/aqibsaeed/Human-Activity-Recognition-using-CNN;1.0;['tensorflow'];['ReLu'];['CNN', 'NN', 'detect', 'model', 'recogn', 'train'];;2019-12-30 14:24:48;2020-12-19 23:14:45;377.0;0.589;Human-Activity-Recognition-using-CNN;
araffin;4;2019-10-10 08:53:31;Stable-Baselines tutorial for Journes Nationales de la Recherche en Robotique 2019;Stable-Baselines tutorial for JournÃÂ©es Nationales de la Recherche en Robotique 2019;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/araffin/rl-tutorial-jnrr19;1.0;['tensorflow'];['AI', 'ANN', 'DL', 'LSTM', 'ML', 'NN', 'RL', 'Recommender', 'Supervised Learning'];['DL', 'RL', 'model', 'reinforcement learning'];;2020-09-28 11:04:25;2020-12-19 23:15:58;185.0;0.543;rl-tutorial-jnrr19;
asfadmin;7;2019-02-20 20:33:23;;;;Jupyter Notebook;['Jupyter Notebook: 95.7%', 'Python: 4.3%'];GPL-3.0;https://github.com/asfadmin/asf-jupyter-notebooks;1.0;['keras', 'pattern', 'skimage', 'tensorflow'];['AI', 'ANN', 'Bayesian', 'CNN', 'CV', 'Classification', 'DL', 'GRU', 'LSTM', 'ML', 'NER', 'NN', 'RL', 'RNN', 'ReLu', 'Recommender'];['RL', 'train'];;2020-12-08 02:11:11;2020-12-20 08:44:48;23.0;0.379;asf-jupyter-notebooks;
atcemgil;0;2015-10-03 06:58:24;Contains Example Programs and Notebooks for some courses at Bogazici University, Department of Computer Engineering;Contains Example Programs and Notebooks for some courses at Bogazici University, Department of Computer Engineering;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];MIT;https://github.com/atcemgil/notes;1.0;['nltk', 'pattern', 'pytorch', 'sklearn'];['AI', 'ANN', 'Anomaly Detection', 'Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GRU', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'RNN', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning', 'Unsupervised learning'];['bayesian', 'machine learning'];;2019-05-28 11:58:12;2020-12-20 08:45:21;152.0;0.53;notes;
auduno;0;2015-07-25 19:39:17;Notebook example of how to generate class visualizations with Caffe;Notebook example of how to generate class visualizations with Caffe;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/auduno/deepdraw;1.0;['caffe'];['CNN', 'Classification', 'NN', 'ReLu', 'Recommender', 'VGG'];['alexnet', 'model', 'neural network', 'train'];;2016-06-18 20:35:34;2020-12-19 23:26:27;331.0;0.581;deepdraw;
Auquan;9;2017-01-21 11:24:18;Ipython notebooks for math and finance tutorials;Ipython notebooks for math and finance tutorials;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Auquan/Tutorials;1.0;['gensim', 'nltk', 'sklearn', 'spacy', 'statsmodels', 'vocabulary'];['AI', 'Bayesian', 'CV', 'Clustering', 'DL', 'Decision Tree', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'RL', 'Recommender', 'Regression'];['fit', 'model', 'rank'];;2020-08-01 17:03:34;2020-12-20 08:44:05;623.0;0.619;Tutorials;
Autodesk;3;2016-07-14 17:35:49;Notebook-integrated tools for molecular simulation and visualization;Notebook-integrated tools for molecular simulation and visualization;;Python;['Python: 87.2%', 'Jupyter Notebook: 11.8%', 'Shell: 1.0%'];Apache-2.0;https://github.com/Autodesk/molecular-design-toolkit;1.0;['caffe', 'pattern'];['AI', 'CV', 'Classification', 'DL', 'ML', 'NER', 'NN', 'RL', 'Recommender'];['AI', 'filter', 'label', 'model', 'recommend', 'train'];;2018-04-02 18:31:34;2020-12-20 08:52:20;115.0;0.51;molecular-design-toolkit;
aviaryan;3;2017-02-21 20:13:54;Make Sublime Text your favorite note taking/journal application;Ã°ÂÂÂ Make Sublime Text your favorite note taking/journal application;;Python;['Python: 100.0%'];MIT;https://github.com/aviaryan/SublimeNotebook;0.8;['pattern'];['AI', 'NN', 'Recommender'];[];;2018-04-30 09:28:17;2020-12-20 08:51:39;199.0;0.548;SublimeNotebook;
aviaryan;0;2018-02-11 12:54:40;Use VS Code as a reliable note-taking/journal application;Ã°ÂÂÂ Use VS Code as a reliable note-taking/journal application;;Python;['Python: 100.0%'];MIT;https://github.com/aviaryan/VSCodeNotebook;0.8;['pattern'];['AI', 'NN', 'Recommender'];[];;2020-09-30 09:03:44;2020-12-20 08:49:32;575.0;0.615;VSCodeNotebook;
aws;267;2017-10-23 05:55:22;Example notebooks that show how to apply machine learning, deep learning and reinforcement learning in Amazon SageMaker;Example notebooks that show how to apply machine learning, deep learning and reinforcement learning in Amazon SageMaker;;Jupyter Notebook;['Jupyter Notebook: 78.7%', 'Python: 17.5%', 'Roff: 2.2%', 'Shell: 0.6%', 'HTML: 0.6%', 'Dockerfile: 0.3%', 'Other: 0.1%'];Apache-2.0;https://github.com/aws/amazon-sagemaker-examples;1.0;['Pillow', 'gensim', 'h2o', 'keras', 'mxnet', 'nltk', 'opencv-python', 'pattern', 'pytorch', 'rl_coach', 'skimage', 'sklearn', 'spacy', 'tensorflow', 'textblob', 'vocabulary', 'xgboost'];['AI', 'ANN', 'AlexNet', 'Anomaly Detection', 'AutoML', 'Bayesian', 'CNN', 'CV', 'Chatbot', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GAN', 'GBM', 'GRU', 'Gradient Boosting', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'Machine Translation', 'NER', 'NLG', 'NLP', 'NLU', 'NN', 'Object Detection', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Sentiment Analysis', 'Speech Recognition', 'Supervised Learning', 'Support Vector Machines', 'Text Classification', 'Unsupervised learning', 'VGG'];['AI', 'AutoML', 'CNN', 'CV', 'DL', 'ML', 'NN', 'RL', 'anomaly', 'anomaly detection', 'classif', 'clustering', 'convolutional neural network', 'decision tree', 'deep learning', 'detect', 'epoch', 'filter', 'fit', 'ground truth', 'image classification', 'k-means', 'label', 'layer', 'logistic regression', 'loss', 'lstm', 'machine learning', 'machine translation', 'model', 'neural network', 'object detection', 'output layer', 'predict', 'rank', 'recogn', 'recommend', 'recommender', 'regression', 'reinforcement learning', 'resnet', 'reward', 'sentiment analysis', 'supervised learning', 'test data', 'train', 'training data', 'unlabeled', 'unsupervised learning', 'validation data', 'vgg'];;2021-01-03 12:30:24;2020-12-19 22:48:02;4656.0;0.718;amazon-sagemaker-examples;
aws-samples;13;2019-12-06 20:53:29;Sample Jupyter Notebooks for Amazon Augmented AI (A2I);Sample Jupyter Notebooks for Amazon Augmented AI (A2I);;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/aws-samples/amazon-a2i-sample-jupyter-notebooks;1.0;['mxnet', 'nltk', 'pattern', 'sklearn', 'vocabulary', 'xgboost'];['AI', 'CV', 'Classification', 'Gradient Boosting', 'Logistic Regression', 'ML', 'Object Detection', 'RL', 'Recommender', 'Regression', 'ResNet', 'Sentiment Analysis', 'Speech Recognition', 'Supervised Learning'];['AI', 'ML', 'detect', 'label', 'model', 'object detection', 'predict', 'train'];;2020-12-13 16:35:58;2020-12-20 08:51:27;35.0;0.416;amazon-a2i-sample-jupyter-notebooks;
aws-samples;20;2018-11-23 23:10:45;Notebooks and examples on how to onboard and use various features of Amazon Forecast.;Notebooks and examples on how to onboard and use various features of Amazon Forecast.;;Jupyter Notebook;['Jupyter Notebook: 99.0%', 'Python: 1.0%'];;https://github.com/aws-samples/amazon-forecast-samples;1.0;['nltk', 'pattern', 'sklearn', 'vocabulary'];['AI', 'ANN', 'AutoML', 'Bayesian', 'CNN', 'Classification', 'DL', 'ML', 'NER', 'NLP', 'NN', 'RL', 'Recommender', 'Regression'];['AutoML', 'ML', 'RL', 'label', 'machine learning', 'model', 'predict', 'rank', 'recommend', 'regression', 'train', 'training data'];;2020-12-15 01:58:47;2020-12-20 08:43:20;283.0;0.571;amazon-forecast-samples;
aws-samples;14;2018-11-23 23:05:33;Notebooks and examples on how to onboard and use various features of Amazon Personalize;Notebooks and examples on how to onboard and use various features of Amazon Personalize;;Jupyter Notebook;['Jupyter Notebook: 98.0%', 'Python: 1.9%', 'JavaScript: 0.1%'];;https://github.com/aws-samples/amazon-personalize-samples;1.0;['pattern'];['AI', 'Classification', 'DL', 'ML', 'NN', 'RL', 'RNN', 'Recommender'];['AI', 'AutoML', 'ML', 'NN', 'RL', 'RNN', 'filter', 'fit', 'ground truth', 'label', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'rank', 'recommend', 'recommender', 'recurrent neural network', 'train'];;2020-12-15 19:47:51;2020-12-20 08:43:03;260.0;0.566;amazon-personalize-samples;
aws-samples;4;2020-06-11 22:06:22;Tools to run Jupyter notebooks as jobs in Amazon SageMaker - ad hoc, on a schedule, or in response to events;Tools to run Jupyter notebooks as jobs in Amazon SageMaker - ad hoc, on a schedule, or in response to events;;Python;['Python: 56.3%', 'TypeScript: 36.5%', 'Shell: 5.3%', 'Dockerfile: 0.7%', 'Makefile: 0.6%', 'JavaScript: 0.5%', 'CSS: 0.1%'];Apache-2.0;https://github.com/aws-samples/sagemaker-run-notebook;1.0;['mxnet', 'pattern', 'sklearn', 'xgboost'];['AI', 'Classification', 'DL', 'ML', 'NER', 'NN', 'RL', 'ReLu', 'Recommender', 'Regression'];['ML', 'deep learning', 'label', 'regression'];;2020-11-06 06:38:50;2020-12-20 08:44:52;35.0;0.416;sagemaker-run-notebook;
azer;9;2016-11-20 20:32:29;Stuff going through my mind;Stuff going through my mind;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/azer/notebook;1.0;['pattern', 'sklearn'];['CV', 'Classification', 'DL', 'Logistic Regression', 'NN', 'ReLu', 'Regression', 'Supervised Learning'];['AI', 'ML', 'NER', 'NLP', 'NN', 'RL', 'artificial intelligence', 'artificial neural network', 'classif', 'clustering', 'computer vision', 'deep learning', 'detect', 'epoch', 'filter', 'fit', 'gradient descent', 'gru', 'hidden layer', 'image classification', 'input layer', 'label', 'layer', 'logistic regression', 'loss', 'machine learning', 'machine translation', 'model', 'natural language processing', 'neural network', 'neuron', 'output layer', 'predict', 'propagation', 'random forest', 'rank', 'recogn', 'recommend', 'regression', 'relu', 'reward', 'sentiment analysis', 'speech recognition', 'supervised learning', 'test data', 'train', 'training data', 'unsupervised learning'];;2020-12-31 01:45:11;2020-12-20 08:43:58;635.0;0.62;notebook;
Azure;12;2019-10-03 16:37:22;Interactive Azure Sentinel Notebooks provides security insights and actions to investigate anomalies and hunt for malicious behaviors.;Interactive Azure Sentinel Notebooks provides security insights and actions to investigate anomalies and hunt for malicious behaviors.;;Jupyter Notebook;['Jupyter Notebook: 99.1%', 'Other: 0.9%'];MIT;https://github.com/Azure/Azure-Sentinel-Notebooks;1.0;['pattern', 'sklearn'];['AI', 'CV', 'Classification', 'Clustering', 'DL', 'ML', 'NLP', 'NN', 'RL', 'Recommender', 'Supervised Learning', 'Unsupervised learning'];['ML', 'RL', 'label', 'recommend'];;2020-12-16 21:24:55;2020-12-20 08:51:13;102.0;0.501;Azure-Sentinel-Notebooks;
Azure;48;2018-08-17 17:29:14;Python notebooks with ML and deep learning examples with Azure Machine Learning | Microsoft;Python notebooks with ML and deep learning examples with Azure Machine Learning | Microsoft;;Jupyter Notebook;['Jupyter Notebook: 78.4%', 'Python: 11.1%', 'Java: 9.5%', 'Other: 1.0%'];MIT;https://github.com/Azure/MachineLearningNotebooks;1.0;['Pillow', 'keras', 'opencv-python', 'pattern', 'pytorch', 'sklearn', 'tensorflow', 'vocabulary', 'xgboost'];['AI', 'ANN', 'AlexNet', 'AutoML', 'Bayesian', 'CNN', 'CV', 'Classification', 'DL', 'Decision Tree', 'GBM', 'GRU', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'NN', 'Object Detection', 'RL', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Supervised Learning', 'Text Classification', 'VGG'];['AI', 'AutoML', 'CNN', 'DL', 'ML', 'NN', 'RL', 'automated machine learning', 'classif', 'convolutional neural network', 'decision tree', 'deep learning', 'detect', 'filter', 'image classification', 'label', 'lstm', 'machine learning', 'machine translation', 'model', 'natural language processing', 'neural network', 'object detection', 'predict', 'recogn', 'recommend', 'regression', 'reinforcement learning', 'resnet', 'reward', 'test data', 'train', 'training data', 'vgg'];;2020-12-12 00:49:34;2020-12-20 08:44:21;2058.0;0.682;MachineLearningNotebooks;
Azure;6;2019-04-08 09:21:47;Open Datasets example notebooks;Open Datasets example notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/Azure/OpenDatasetsNotebooks;1.0;['pattern', 'sklearn'];['AutoML', 'ML', 'Regression'];['label'];;2020-01-05 12:25:31;2020-12-20 08:49:30;10.0;0.302;OpenDatasetsNotebooks;
Azure-Samples;13;2019-06-24 20:12:43;Sample Notebooks;Sample Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Azure-Samples/cosmos-notebooks;1.0;['pattern'];['AI', 'Anomaly Detection', 'CV', 'ML', 'Recommender'];['regression'];;2020-10-02 18:25:06;2020-12-20 08:52:28;15.0;0.34;cosmos-notebooks;
Azure-Samples;7;2018-05-03 13:50:10;Example Notebooks for Azure Machine Learning;Example Notebooks for Azure Machine Learning;;Jupyter Notebook;['Jupyter Notebook: 49.5%', 'HTML: 48.9%', 'Python: 1.5%', 'R: 0.1%'];MIT;https://github.com/Azure-Samples/MachineLearningSamples-Notebooks;1.0;['keras', 'pattern', 'sklearn', 'statsmodels', 'tensorflow', 'vocabulary'];['AI', 'AlexNet', 'CNN', 'CV', 'Classification', 'DL', 'LSTM', 'Linear Regression', 'ML', 'NN', 'Object Detection', 'RL', 'Random Forest', 'Recommender', 'Regression', 'ResNet', 'Sentiment Analysis', 'Text Classification'];['AI', 'AutoML', 'CV', 'ML', 'NN', 'computer vision', 'fit', 'label', 'machine learning', 'model', 'regression'];;2019-01-11 14:05:49;2020-12-20 08:46:05;24.0;0.383;MachineLearningSamples-Notebooks;
barbagroup;10;2014-01-21 23:19:20;Classical Aerodynamics of potential flow using Python and Jupyter Notebooks;Classical Aerodynamics of potential flow using Python and Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Other: 0.2%'];;https://github.com/barbagroup/AeroPython;1.0;['pattern'];['AI', 'ML', 'NN', 'Recommender'];['rank', 'recommend'];;2020-06-25 17:59:58;2020-12-20 08:45:59;483.0;0.604;AeroPython;
barbagroup;11;2014-02-11 15:52:40;"A sequence of Jupyter notebooks featuring the ""12 Steps to Navier-Stokes"" http://lorenabarba.com/";"A sequence of Jupyter notebooks featuring the ""12 Steps to Navier-Stokes"" http://lorenabarba.com/";;Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Other: 0.4%'];;https://github.com/barbagroup/CFDPython;1.0;['pattern'];['ML', 'Recommender'];['model', 'rank', 'recommend'];;2020-12-14 13:27:26;2020-12-20 08:51:07;1769.0;0.674;CFDPython;
benjaminwilson;0;2017-10-28 13:39:45;Jupyter Notebook exercises for k-means clustering with Python 3 and scikit-learn;Jupyter Notebook exercises for k-means clustering with Python 3 and scikit-learn;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/benjaminwilson/python-clustering-exercises;1.0;['sklearn'];['Clustering', 'K-Means'];['clustering', 'k-means'];;2019-10-24 15:56:22;2020-12-19 23:59:25;153.0;0.53;python-clustering-exercises;
bhargavvader;3;2016-12-08 11:07:56;Contains Jupyter Notebooks of stuff I am working on.;Contains Jupyter Notebooks of stuff I am working on.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/bhargavvader/personal;1.0;['gensim', 'keras', 'pattern', 'sklearn', 'spacy', 'theano', 'vocabulary'];['Chatbot', 'Classification', 'Clustering', 'DL', 'GRU', 'K-Means', 'KNN', 'LSTM', 'ML', 'NER', 'NLP', 'NN', 'RNN', 'Recommender', 'Regression', 'Text Classification'];['CV', 'NLP', 'classif', 'clustering', 'deep learning', 'detect', 'filter', 'label', 'logistic regression', 'machine learning', 'model', 'naive bayes', 'neural network', 'predict', 'recommend', 'regression', 'train'];;2020-10-04 01:10:49;2020-12-20 08:47:57;187.0;0.544;personal;
bhattbhavesh91;0;2019-05-16 11:39:15;My Experiments with Time Series;My Experiments with Time Series;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];;https://github.com/bhattbhavesh91/time_series_notebooks;0.8;['pattern', 'statsmodels'];['AI'];[];;2019-10-14 12:55:35;2020-12-20 09:20:26;11.0;0.311;time_series_notebooks;
bikz05;0;2015-05-08 01:08:53;This repository contains IPython notebooks that I have written.;This repository contains IPython notebooks that I have written.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/bikz05/ipython-notebooks;1.0;['sklearn'];['CV', 'Classification', 'ML', 'Naive Bayes', 'Recommender'];['computer vision', 'detect', 'filter', 'linear regression', 'logistic regression', 'machine learning', 'naive bayes', 'recogn', 'regression'];;2017-03-22 03:49:14;2020-12-19 22:44:07;89.0;0.491;ipython-notebooks;
biocore;14;2013-10-01 23:39:04;American Gut open-access data and IPython notebooks;American Gut open-access data and IPython notebooks;;Jupyter Notebook;['Jupyter Notebook: 73.9%', 'Python: 25.2%', 'Other: 0.9%'];;https://github.com/biocore/American-Gut;1.0;['pattern', 'statsmodels'];['AI', 'Classification', 'Clustering', 'DL', 'GAN', 'GRU', 'ML', 'NN', 'RL', 'Recommender'];['classif', 'detect', 'filter', 'fit', 'gru', 'label', 'layer', 'loss', 'model', 'predict', 'test data', 'train'];;2017-03-17 17:29:28;2020-12-20 09:10:32;93.0;0.494;American-Gut;
biolab;2;2015-03-01 12:25:20;Biolab's IPython's notebooks.;Biolab's IPython's notebooks.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/biolab/ipynb;0.8;['pattern'];['Classification', 'ML'];[];;2020-10-19 13:17:18;2020-12-19 23:30:12;13.0;0.327;ipynb;
biplobsd;2;2020-04-25 19:26:56;Another colab notebook! [testing environment];Another colab notebook!  [testing environment];;Jupyter Notebook;['Jupyter Notebook: 92.3%', 'Python: 7.7%'];GPL-3.0;https://github.com/biplobsd/OneClickRun;0.8;['pattern'];['AI', 'CNN', 'CV', 'DL', 'GAN', 'KNN', 'ML', 'NER', 'NLU', 'NN', 'RL', 'RNN', 'Recommender'];[];;2020-12-09 05:48:40;2020-12-20 08:46:42;235.0;0.559;OneClickRun;
bokeh;33;2014-07-07 16:42:49;Interactive Web Plotting with Bokeh in IPython notebook;Interactive Web Plotting with Bokeh in IPython notebook;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];BSD-3-Clause;https://github.com/bokeh/bokeh-notebooks;0.8;['pattern'];['ML'];[];;2020-12-29 19:01:14;2020-12-19 23:56:39;619.0;0.619;bokeh-notebooks;
bqplot;45;2015-09-26 04:02:18;Plotting library for IPython/Jupyter notebooks;Plotting library for IPython/Jupyter notebooks;;TypeScript;['TypeScript: 77.3%', 'Python: 20.1%', 'GLSL: 1.2%', 'Other: 1.4%'];Apache-2.0;https://github.com/bqplot/bqplot;1.0;['pattern', 'sklearn'];['AI', 'Classification', 'ML', 'NN', 'RL', 'Recommender'];['label', 'layer', 'model'];;2020-12-18 14:59:43;2020-12-19 23:44:56;2972.0;0.699;bqplot;
BrambleXu;7;2017-10-22 01:03:56;Python  (2017);Ã¥ÂÂ©Ã§ÂÂ¨PythonÃ¨Â¿ÂÃ¨Â¡ÂÃ¦ÂÂ°Ã¦ÂÂ®Ã¥ÂÂÃ¦ÂÂ Ã§Â¬Â¬Ã¤ÂºÂÃ§ÂÂ (2017) Ã¤Â¸Â­Ã¦ÂÂÃ§Â¿Â»Ã¨Â¯ÂÃ§Â¬ÂÃ¨Â®Â°;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/BrambleXu/pydata-notebook;1.0;['pattern'];['RL'];['model'];;2018-05-08 12:39:43;2020-12-20 08:50:52;4030.0;0.712;pydata-notebook;
briandalessandro;13;2014-10-01 08:45:51;This holds iPython notebooks and lecture slides for the Intro to Data Science Master's course I teach at NYU.;This holds iPython notebooks and lecture slides for the Intro to Data Science Master's course I teach at NYU.;;Jupyter Notebook;['Jupyter Notebook: 96.1%', 'HTML: 3.4%', 'Python: 0.5%'];;https://github.com/briandalessandro/DataScienceCourse;1.0;['pattern', 'skimage', 'sklearn', 'statsmodels', 'vocabulary'];['Bayesian', 'CV', 'Classification', 'Clustering', 'Decision Tree', 'Gradient Boosting', 'K-Means', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'Recommender', 'Regression', 'Supervised Learning', 'Text Classification'];['recommend'];;2020-12-20 13:03:57;2020-12-19 23:02:58;519.0;0.609;DataScienceCourse;
brianwarehime;2;2020-05-01 16:18:52;threatnote.io | Cyber Threat Intelligence Notebook;threatnote.io | Cyber Threat Intelligence Notebook;;JavaScript;['JavaScript: 54.2%', 'CSS: 42.8%', 'HTML: 2.1%', 'Python: 0.9%', 'Shell: 0.0%', 'Dockerfile: 0.0%'];Apache-2.0;https://github.com/brianwarehime/threatnote;0.8;['pattern'];['AI', 'CV', 'Classification', 'ML', 'RL'];[];;2020-05-08 17:21:29;2020-12-19 23:00:59;69.0;0.471;threatnote;
BritneyMuller;0;2020-06-17 22:46:49;A place for non-technical individuals to access data science & machine learning programs.;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/BritneyMuller/colab-notebooks;1.0;['pytorch', 'skimage', 'sklearn', 'tensorflow'];['AI', 'Classification', 'DL', 'GAN', 'GRU', 'LSTM', 'Linear Regression', 'ML', 'NLP', 'NN', 'RL', 'RNN', 'Recommender', 'Regression'];['AI', 'NLP', 'RL', 'machine learning'];;2020-12-15 17:11:07;2020-12-20 08:51:31;52.0;0.449;colab-notebooks;
BUStools;8;2018-11-12 17:24:36;;;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];BSD-2-Clause;https://github.com/BUStools/BUS_notebooks_python;1.0;['sklearn', 'statsmodels'];['Clustering'];['neuron', 'recommend'];;2019-07-18 03:24:28;2020-12-19 23:09:46;17.0;0.352;BUS_notebooks_python;
c1mone;0;2016-12-18 14:27:06;tensorflow tutorial with jupyter notebooks;Ã¤Â¸Â­Ã¦ÂÂÃ§ÂÂ tensorflow tutorial with jupyter notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/c1mone/Tensorflow-101;1.0;['keras', 'sklearn', 'tensorflow'];['CNN', 'Classification', 'GAN', 'LSTM', 'NN', 'RNN', 'ReLu', 'Rectifier', 'Regression'];['AI', 'CNN', 'GAN', 'NN', 'RNN', 'autoencoder', 'fit', 'generative adversarial network', 'layer', 'logistic regression', 'model', 'neural network', 'regression'];;2018-04-28 13:57:24;2020-12-19 23:31:08;172.0;0.538;Tensorflow-101;
caicloud;8;2018-09-08 03:15:29;Kernel for Kubeflow in Jupyter Notebook;Kernel for Kubeflow in Jupyter Notebook;;Go;['Go: 94.2%', 'Dockerfile: 3.0%', 'Python: 1.6%', 'Shell: 1.2%'];Apache-2.0;https://github.com/caicloud/ciao;1.0;['pytorch', 'tensorflow'];['NN', 'RL', 'ReLu'];['AI', 'ML', 'NN', 'RL', 'detect', 'filter', 'fit', 'hidden layer', 'label', 'layer', 'machine learning', 'model', 'rank', 'recogn', 'recommend', 'regression', 'relu', 'train'];;2019-08-13 09:13:58;2020-12-19 22:56:15;60.0;0.46;ciao;
california-civic-data-coalition;9;2017-02-11 20:38:01;A step-by-step guide to analyzing data with Python and the Jupyter Notebook.;A step-by-step guide to analyzing data with Python and the Jupyter Notebook.;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Makefile: 0.1%'];MIT;https://github.com/california-civic-data-coalition/first-python-notebook;0.8;['pattern'];['ML'];[];;2020-12-23 09:47:24;2020-12-19 23:32:16;31.0;0.405;first-python-notebook;
Calysto;2;2018-02-04 16:40:29;Notebooks for Conx, Deep Learning software;Notebooks for Conx, Deep Learning software;;Jupyter Notebook;['Jupyter Notebook: 98.3%', 'HTML: 1.7%'];;https://github.com/Calysto/conx-notebooks;1.0;['keras', 'pattern', 'sklearn', 'tensorflow'];['AI', 'ANN', 'CNN', 'Classification', 'Clustering', 'DL', 'LSTM', 'ML', 'NLP', 'NN', 'RL', 'RNN', 'ReLu', 'Recommender', 'VGG'];['RL', 'deep learning', 'layer', 'neural network', 'recommend'];;2019-04-29 20:21:49;2020-12-20 08:47:27;24.0;0.383;conx-notebooks;
cameroncruz;0;2019-03-30 01:09:12;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/cameroncruz/notebooks;0.8;['keras', 'sklearn', 'tensorflow'];['Classification'];[];;2019-04-01 22:51:10;2020-12-20 09:23:02;23.0;0.379;notebooks;
cantaro86;0;2019-09-10 17:35:01;Collection of notebooks about quantitative finance, with interactive python code.;Collection of notebooks about quantitative finance, with interactive python code.;;Jupyter Notebook;['Jupyter Notebook: 97.9%', 'Python: 1.4%', 'Other: 0.7%'];AGPL-3.0;https://github.com/cantaro86/Financial-Models-Numerical-Methods;1.0;['pattern', 'statsmodels', 'tensorflow'];['AI', 'Bayesian', 'Clustering', 'GBM', 'Linear Regression', 'ML', 'NN', 'Regression'];['filter', 'fit', 'linear regression', 'model', 'regression'];;2020-12-28 09:59:30;2020-12-19 22:20:26;3098.0;0.701;Financial-Models-Numerical-Methods;
carlosfab;0;2019-07-11 15:21:09;Notebooks de anlises e projetos de Data Science em Python;Notebooks de anÃÂ¡lises e projetos de Data Science em Python;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/carlosfab/data_science;1.0;['sklearn', 'xgboost'];['AI', 'Classification', 'GRU', 'ML', 'Random Forest', 'Regression', 'Supervised Learning'];['deep learning', 'machine learning'];;2019-12-27 17:10:28;2020-12-20 08:47:04;84.0;0.486;data_science;
ccniuj;0;2017-01-15 12:05:12;Jupyter notebook for Udemy course: Python data science and machine learning bootcamp;Jupyter notebook for Udemy course: Python data science and machine learning bootcamp;;Jupyter Notebook;['Jupyter Notebook: 91.6%', 'HTML: 8.4%'];;https://github.com/ccniuj/python_data_science_and_machine_learning_bootcamp;1.0;['nltk', 'pattern', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Rectifier', 'Regression', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];['machine learning'];;2017-01-15 12:20:34;2020-12-19 23:42:10;175.0;0.54;python_data_science_and_machine_learning_bootcamp;
cedrickchee;0;2018-07-12 16:21:07;Data science Python notebooksa collection of Jupyter notebooks on machine learning, deep learning, statistical inference, data analysis and visualization.;Data science Python notebooksÃ¢ÂÂa collection of Jupyter notebooks on machine learning, deep learning, statistical inference, data analysis and visualization.;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Shell: 0.1%'];MIT;https://github.com/cedrickchee/data-science-notebooks;1.0;['caffe', 'gensim', 'keras', 'pytorch', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'AlexNet', 'CNN', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GAN', 'Image Segmentation', 'K-Means', 'LSTM', 'Linear Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'Object Detection', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Support Vector Machines', 'Text Classification', 'U-Net', 'VGG'];['AI', 'CV', 'DL', 'GAN', 'ML', 'NLP', 'NN', 'RNN', 'classif', 'clustering', 'computer vision', 'convolutional neural network', 'deep learning', 'detect', 'filter', 'fit', 'generative adversarial network', 'image segmentation', 'label', 'linear regression', 'logistic regression', 'lstm', 'machine learning', 'machine translation', 'model', 'natural language processing', 'neural network', 'object detection', 'predict', 'propagation', 'random forest', 'recogn', 'regression', 'resnet', 'sentiment analysis', 'speech recognition', 'text classification', 'train', 'training data', 'u-net', 'vgg'];;2019-01-11 22:00:20;2020-12-20 08:52:24;73.0;0.476;data-science-notebooks;
cellardoor42;2;2017-02-05 20:55:29;An unofficial Evernote desktop client for Linux;An unofficial Evernote desktop client for Linux;;JavaScript;['JavaScript: 58.2%', 'HTML: 41.8%'];MIT;https://github.com/cellardoor42/whatever;1.0;['pattern', 'stanza'];['AI', 'DL', 'ML', 'NER', 'NN', 'RL', 'Recommender'];['AI', 'DL', 'ML', 'NER', 'NN', 'RL', 'detect', 'epoch', 'filter', 'fit', 'gru', 'label', 'layer', 'loss', 'model', 'predict', 'propagation', 'rank', 'recogn', 'recommend', 'regression', 'reward', 'test data', 'train'];;2020-10-06 06:15:21;2020-12-19 23:22:59;354.0;0.586;whatever;
ceos-seo;7;2016-12-21 19:11:27;Jupyter Notebook examples for our Data Cube capable algorithms and functions;Jupyter Notebook examples for our Data Cube capable algorithms and functions;;Jupyter Notebook;['Jupyter Notebook: 99.5%', 'Other: 0.5%'];Apache-2.0;https://github.com/ceos-seo/data_cube_notebooks;1.0;['pattern', 'skimage', 'sklearn'];['AI', 'CV', 'Classification', 'Clustering', 'K-Means', 'Linear Regression', 'ML', 'Random Forest', 'Recommender', 'Regression'];['CV', 'classif', 'detect', 'filter', 'fit', 'label', 'machine learning', 'model', 'random forest', 'train'];;2020-11-18 23:11:39;2020-12-19 22:30:27;29.0;0.4;data_cube_notebooks;
cerlymarco;0;2019-04-22 20:45:20;Repository containing notebooks of my posts on Medium;;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];;https://github.com/cerlymarco/MEDIUM_NoteBook;1.0;['gensim', 'imutils', 'keras', 'lightgbm', 'nltk', 'sklearn', 'spacy', 'statsmodels', 'tensorflow', 'vocabulary'];['AI', 'Anomaly Detection', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'GAN', 'GBM', 'GRU', 'Gradient Boosting', 'LSTM', 'NER', 'NN', 'RL', 'RNN', 'ReLu', 'Regression', 'ResNet', 'VGG'];['anomaly', 'autoencoder', 'bayesian', 'classif', 'clustering', 'detect', 'lstm', 'model', 'predict', 'regression', 'resnet'];;2020-12-21 23:40:36;2020-12-20 09:44:46;558.0;0.613;MEDIUM_NoteBook;
cgoliver;0;2016-11-05 21:36:02;Assorted Python Notebooks.;Assorted Python Notebooks.;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];;https://github.com/cgoliver/Notebooks;0.8;['pattern', 'sklearn'];['AI', 'CNN', 'Clustering', 'DL', 'K-Means', 'ML', 'NN', 'RL', 'Recommender', 'Supervised Learning', 'Unsupervised learning', 'VGG'];[];;2017-12-03 02:09:47;2020-12-20 09:40:46;7.0;0.268;Notebooks;
ChadFulton;0;2017-01-28 13:55:21;Jupyter notebooks on time series econometrics topics.;Jupyter notebooks on time series econometrics topics.;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];;https://github.com/ChadFulton/tsa-notebooks;0.8;['pattern', 'statsmodels'];['AI', 'Bayesian', 'ML', 'RL', 'Recommender', 'Regression'];[];;2020-09-11 03:30:48;2020-12-20 08:50:02;157.0;0.532;tsa-notebooks;
chainer-community;5;2018-02-22 08:52:47;this repository is synchronized with ReadTheDocs.;this repository is synchronized with ReadTheDocs.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/chainer-community/chainer-colab-notebook;1.0;['Pillow', 'caffe', 'chainerrl', 'pattern', 'vocabulary'];['AI', 'AlexNet', 'Bayesian', 'CNN', 'CV', 'Classification', 'DL', 'GAN', 'Linear Regression', 'ML', 'NER', 'NN', 'Object Detection', 'RL', 'RNN', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'VGG'];['RL'];;2020-03-07 08:54:00;2020-12-19 22:27:59;49.0;0.444;chainer-colab-notebook;
chambliss;0;2018-11-16 00:11:32;Repo for small projects that fit inside a Jupyter Notebook. Inside: word2vec news analysis and regression, tutorial on working with survey data, and more.;Repo for small projects that fit inside a Jupyter Notebook. Inside: word2vec news analysis and regression, tutorial on working with survey data, and more.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/chambliss/Notebooks;1.0;['gensim', 'nltk', 'pattern', 'sklearn', 'vocabulary', 'xgboost'];['AI', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'Recommender', 'Regression', 'Sentiment Analysis'];['NER', 'classif', 'clustering', 'k-means', 'model', 'predict', 'regression', 'train'];;2019-10-24 19:18:54;2020-12-20 09:44:12;9.0;0.292;Notebooks;
chhayac;2;2017-12-16 06:18:15;15+ Machine/Deep Learning Projects in Ipython Notebooks;15+  Machine/Deep Learning Projects in Ipython Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/chhayac/Machine-Learning-Notebooks;1.0;['keras', 'nltk', 'skimage', 'sklearn', 'tensorflow', 'xgboost'];['AI', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Sentiment Analysis', 'Supervised Learning', 'Unsupervised learning'];['CNN', 'NN', 'autoencoder', 'classif', 'convolutional neural network', 'deep learning', 'detect', 'fit', 'layer', 'linear regression', 'logistic regression', 'machine learning', 'model', 'neural network', 'predict', 'recogn', 'recommend', 'regression', 'sentiment analysis', 'supervised learning', 'unsupervised learning'];;2020-04-03 05:31:41;2020-12-20 10:21:01;36.0;0.418;Machine-Learning-Notebooks;
chmp;3;2016-02-07 20:24:41;Pytest in IPython notebooks.;Pytest in IPython notebooks.;;Jupyter Notebook;['Jupyter Notebook: 66.7%', 'Python: 33.3%'];MIT;https://github.com/chmp/ipytest;1.0;['pattern'];['AI', 'Classification', 'Recommender'];['AI', 'NN', 'detect', 'epoch', 'fit', 'model'];;2020-07-25 11:36:37;2020-12-20 08:50:03;133.0;0.52;ipytest;
chris1610;0;2015-05-12 02:01:20;Code, Notebooks and Examples from Practical Business Python;Code, Notebooks and Examples from Practical Business Python;;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Other: 0.3%'];BSD-3-Clause;https://github.com/chris1610/pbpython;1.0;['pattern', 'sklearn'];['Bayesian', 'ML', 'RL', 'Recommender', 'Regression'];['ML', 'RL'];;2020-11-29 19:49:46;2020-12-19 22:46:15;1481.0;0.666;pbpython;
christophebourguignat;0;2014-11-11 23:34:41;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/christophebourguignat/notebooks;0.8;['sklearn', 'tensorflow'];['Anomaly Detection', 'CV', 'Classification', 'Clustering', 'Logistic Regression', 'ML', 'NN', 'Random Forest', 'ReLu', 'Regression', 'Supervised Learning', 'Unsupervised learning'];[];;2017-01-15 20:37:56;2020-12-20 09:41:32;157.0;0.532;notebooks;
CJWorkbench;15;2016-10-17 17:58:31;The data journalism platform with built in training;The data journalism platform with built in training;;Python;['Python: 57.7%', 'JavaScript: 25.1%', 'HTML: 10.1%', 'SCSS: 4.8%', 'Shell: 1.7%', 'Dockerfile: 0.3%', 'Other: 0.3%'];AGPL-3.0;https://github.com/CJWorkbench/cjworkbench;1.0;['nltk', 'pattern'];['AI', 'ANN', 'Classification', 'DL', 'ML', 'NER', 'NN', 'RL', 'Recommender', 'Regression'];['RL', 'filter', 'fit', 'model'];;2021-01-03 06:17:11;2020-12-19 23:33:40;234.0;0.559;cjworkbench;
cliburn;3;2017-01-09 23:16:41;Notebooks, worksheets and homework for STA 663 class;Notebooks, worksheets and homework for STA 663 class;;Jupyter Notebook;['Jupyter Notebook: 98.7%', 'Roff: 1.3%', 'Python: 0.0%', 'Forth: 0.0%', 'Standard ML: 0.0%', 'C++: 0.0%'];MIT;https://github.com/cliburn/sta-663-2017;1.0;['gensim', 'keras', 'nltk', 'pattern', 'sklearn', 'statsmodels', 'tensorflow', 'theano'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'GRU', 'Image Segmentation', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'RL', 'Random Forest', 'Recommender', 'Regression', 'Supervised Learning', 'Unsupervised learning'];['AI', 'CV', 'ML', 'bayesian', 'classif', 'clustering', 'filter', 'fit', 'image classification', 'label', 'loss', 'machine learning', 'model', 'predict', 'regression', 'reward', 'test data', 'train'];;2017-04-20 18:45:09;2020-12-19 22:28:23;37.0;0.421;sta-663-2017;
CODAIT;5;2020-04-22 16:36:35;Jupyter notebooks that analyze COVID-19 time series data;Jupyter notebooks that analyze COVID-19 time series data;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];Apache-2.0;https://github.com/CODAIT/covid-notebooks;1.0;['pattern', 'sklearn'];['AI', 'RL', 'Regression'];['AI', 'machine learning'];;2020-11-24 22:33:23;2020-12-20 09:44:22;78.0;0.481;covid-notebooks;
codeneuro;3;2015-05-28 00:44:26;Interactive notebooks for trying analyses and exploring datasets;Interactive notebooks for trying analyses and exploring datasets;;CSS;['CSS: 64.6%', 'HTML: 18.0%', 'Makefile: 8.2%', 'Python: 7.1%', 'JavaScript: 2.1%'];MIT;https://github.com/codeneuro/notebooks;1.0;['pattern', 'skimage', 'sklearn'];['Clustering', 'Linear Regression', 'Recommender', 'Regression'];['RL'];;2015-08-10 16:49:18;2020-12-20 09:08:47;31.0;0.405;notebooks;
codenode;3;2009-05-28 03:52:02;Interactive Programming Notebook for the Web Browser;Interactive Programming Notebook for the Web Browser;;JavaScript;['JavaScript: 67.2%', 'Python: 32.8%'];;https://github.com/codenode/codenode;0.8;['pattern'];['AI', 'ANN', 'Classification', 'DL', 'ML', 'NER', 'NN', 'RL', 'Recommender'];[];;2020-10-01 07:24:37;2020-12-20 09:40:55;97.0;0.497;codenode;
codingforentrepreneurs;2;2019-08-07 00:01:27;Various notebooks we're working on from either our blog cfe.sh/blog or as general research.;Various notebooks we're working on from either our blog cfe.sh/blog or as general research.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/codingforentrepreneurs/Notebooks;1.0;['keras', 'pattern', 'sklearn', 'tensorflow'];['AI', 'Classification', 'DL', 'LSTM', 'NN', 'Recommender'];['classif', 'deep learning', 'machine learning', 'neural network'];;2020-11-18 23:23:57;2020-12-20 08:49:29;21.0;0.371;Notebooks;
COGS108;4;2017-04-05 01:50:54;Introductory tutorial notebooks for learning data science, as part of the Data Science in Practice materials.;Introductory tutorial notebooks for learning data science, as part of the Data Science in Practice materials.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/COGS108/Tutorials;1.0;['gensim', 'keras', 'nltk', 'pattern', 'sklearn', 'statsmodels', 'tensorflow', 'theano', 'vocabulary'];['Classification', 'Clustering', 'DL', 'K-Means', 'Linear Regression', 'ML', 'NER', 'NLP', 'NN', 'RL', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines'];['label'];;2020-07-01 05:16:49;2020-12-19 23:14:21;56.0;0.455;Tutorials;
Computational-Content-Analysis-2020;0;2020-01-09 00:15:48;Jupyter Notebooks to follow for each week;Jupyter Notebooks to follow for each week;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];;https://github.com/Computational-Content-Analysis-2020/Content-Analysis-2020;0.8;['Pillow', 'caffe', 'gensim', 'keras', 'nltk', 'pattern', 'pytorch', 'skimage', 'sklearn', 'spacy', 'tensorflow', 'vocabulary'];['AI', 'Bayesian', 'CNN', 'CV', 'Chatbot', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'K-Means', 'KNN', 'LSTM', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'Naive Bayes', 'Object Detection', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Speech Recognition', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];[];;2020-06-12 22:12:19;2020-12-19 22:45:47;24.0;0.383;Content-Analysis-2020;
computationalmodelling;20;2015-04-09 09:40:33;A py.test plugin to validate Jupyter notebooks;A py.test plugin to validate Jupyter notebooks;;Python;['Python: 50.1%', 'Jupyter Notebook: 49.7%', 'Makefile: 0.2%'];;https://github.com/computationalmodelling/nbval;1.0;['pattern'];['AI', 'Classification', 'ML', 'Recommender'];['GBM', 'detect', 'model', 'recogn', 'train'];;2020-12-31 16:58:16;2020-12-20 09:11:43;327.0;0.581;nbval;
ContextLab;2;2017-01-24 21:15:35;Supporting notebooks and data from hypertools paper;Supporting notebooks and data from hypertools paper;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/ContextLab/hypertools-paper-notebooks;0.8;['sklearn', 'statsmodels'];['Classification', 'Clustering', 'K-Means', 'Linear Regression', 'Regression'];[];;2018-08-06 01:47:08;2020-12-19 23:43:19;145.0;0.526;hypertools-paper-notebooks;
csaluja;0;2018-03-06 10:43:20;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/csaluja/JupyterNotebooks-Medium;0.8;['pattern', 'sklearn'];['ML', 'RL', 'Recommender'];[];;2018-07-23 23:52:39;2020-12-20 08:48:42;96.0;0.497;JupyterNotebooks-Medium;
ctgk;2;2017-02-05 12:02:58;PRML algorithms implemented in Python;PRML algorithms implemented in Python;;Jupyter Notebook;['Jupyter Notebook: 93.4%', 'Python: 6.6%'];MIT;https://github.com/ctgk/PRML;1.0;['pattern', 'sklearn'];['Bayesian', 'Classification', 'Clustering', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'ReLu', 'Regression'];['ML', 'classif', 'machine learning', 'model', 'neural network', 'recogn', 'regression'];;2020-07-02 11:38:05;2020-12-20 09:33:32;9363.0;0.746;PRML;
cuttlefishh;0;2016-11-23 00:31:52;An introduction to data science using Python and Pandas with Jupyter notebooks;An introduction to data science using Python and Pandas with Jupyter notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/cuttlefishh/python-for-data-analysis;1.0;['pattern', 'sklearn', 'statsmodels'];['Classification', 'Clustering', 'Decision Tree', 'GRU', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'NN', 'Random Forest', 'Recommender', 'Regression'];['CV', 'ML', 'fit', 'label', 'model', 'train'];;2020-10-02 15:06:39;2020-12-20 09:32:17;557.0;0.613;python-for-data-analysis;
d2l-ai;2;2019-07-03 21:43:25;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/d2l-ai/1day-notebooks;1.0;['mxnet', 'vocabulary'];['AlexNet', 'CNN', 'Classification', 'GRU', 'LSTM', 'Linear Regression', 'NN', 'RNN', 'ReLu', 'Regression', 'ResNet', 'VGG'];['alexnet', 'classif', 'convolutional neural network', 'deep learning', 'gru', 'image classification', 'layer', 'linear regression', 'lstm', 'neural network', 'recurrent neural network', 'regression', 'resnet', 'vgg'];;2019-08-29 00:59:01;2020-12-20 09:07:10;64.0;0.465;1day-notebooks;
d2l-ai;5;2019-04-19 22:15:55;Books with Jupyter notebooks;Books with Jupyter notebooks;;Python;['Python: 98.2%', 'Shell: 1.8%'];Apache-2.0;https://github.com/d2l-ai/d2l-book;1.0;['pattern'];['AI', 'ML', 'RL'];['ML', 'NLP', 'RL', 'computer vision', 'deep learning', 'fit', 'label', 'lstm', 'model', 'neural network', 'recommend', 'train'];;2020-12-28 05:29:49;2020-12-20 08:52:02;77.0;0.48;d2l-book;
d2l-ai;193;2018-10-09 01:04:37;Interactive deep learning book with code, math, and discussions. Available in multi-frameworks. Adopted at 140 universities.;Interactive deep learning book with code, math, and discussions. Available in multi-frameworks. Adopted at 140 universities.;;Python;['Python: 72.5%', 'TeX: 15.4%', 'HTML: 11.8%', 'Shell: 0.3%'];;https://github.com/d2l-ai/d2l-en;1.0;['keras', 'mxnet', 'tensorflow', 'vocabulary'];['Classification', 'DL', 'GRU', 'LSTM', 'Linear Regression', 'ML', 'Machine Translation', 'NN', 'RL', 'RNN', 'ReLu', 'Recommender', 'Regression', 'ResNet'];['AI', 'CNN', 'CV', 'DL', 'GAN', 'ML', 'NLP', 'NN', 'RL', 'RNN', 'activation function', 'alexnet', 'anomaly', 'anomaly detection', 'artificial intelligence', 'artificial neural network', 'autoencoder', 'bayesian', 'classif', 'clustering', 'computer vision', 'convolutional neural network', 'decision tree', 'deep learning', 'detect', 'document summarization', 'epoch', 'filter', 'fit', 'generative adversarial network', 'gradient descent', 'ground truth', 'gru', 'hidden layer', 'image classification', 'image segmentation', 'input layer', 'label', 'layer', 'linear regression', 'logistic regression', 'loss', 'lstm', 'machine learning', 'machine translation', 'model', 'naive bayes', 'named entity recognition', 'natural language processing', 'natural language understanding', 'neural network', 'neuron', 'object detection', 'output layer', 'predict', 'propagation', 'rank', 'recogn', 'recommend', 'recommender', 'recurrent neural network', 'regression', 'reinforcement learning', 'relu', 'resnet', 'reward', 'sentiment analysis', 'speech recognition', 'supervised learning', 'support vector machines', 'test data', 'text classification', 'train', 'training data', 'unlabeled', 'unsupervised learning', 'validation data', 'vgg'];;2021-01-03 11:47:54;2020-12-20 09:50:27;8371.0;0.742;d2l-en;
d2l-ai;143;2017-08-23 04:40:24;140;Ã£ÂÂÃ¥ÂÂ¨Ã¦ÂÂÃ¥Â­Â¦Ã¦Â·Â±Ã¥ÂºÂ¦Ã¥Â­Â¦Ã¤Â¹Â Ã£ÂÂÃ¯Â¼ÂÃ©ÂÂ¢Ã¥ÂÂÃ¤Â¸Â­Ã¦ÂÂÃ¨Â¯Â»Ã¨ÂÂÃ£ÂÂÃ¨ÂÂ½Ã¨Â¿ÂÃ¨Â¡ÂÃ£ÂÂÃ¥ÂÂ¯Ã¨Â®Â¨Ã¨Â®ÂºÃ£ÂÂÃ¤Â¸Â­Ã¨ÂÂ±Ã¦ÂÂÃ§ÂÂÃ¨Â¢Â«Ã¥ÂÂ¨Ã§ÂÂ140Ã¦ÂÂÃ¥Â¤Â§Ã¥Â­Â¦Ã©ÂÂÃ§ÂÂ¨Ã¦ÂÂÃ¥Â­Â¦Ã£ÂÂ;;Python;['Python: 74.5%', 'HTML: 11.5%', 'Makefile: 10.1%', 'JavaScript: 1.5%', 'CSS: 1.4%', 'Dockerfile: 1.0%'];Apache-2.0;https://github.com/d2l-ai/d2l-zh;1.0;['mxnet', 'pattern', 'vocabulary'];['AI', 'DL', 'Linear Regression', 'ML', 'NN', 'RL', 'RNN', 'ReLu', 'Regression', 'ResNet', 'Sentiment Analysis'];['AI', 'CNN', 'CV', 'GAN', 'ML', 'NLP', 'NN', 'RL', 'RNN', 'activation function', 'alexnet', 'artificial intelligence', 'classif', 'computer vision', 'convolutional neural network', 'deep learning', 'detect', 'epoch', 'filter', 'fit', 'generative adversarial network', 'gradient descent', 'ground truth', 'gru', 'hidden layer', 'image segmentation', 'label', 'layer', 'linear regression', 'loss', 'lstm', 'machine learning', 'machine translation', 'model', 'natural language processing', 'neural network', 'object detection', 'pix2pix', 'predict', 'propagation', 'rank', 'recogn', 'recurrent neural network', 'regression', 'relu', 'resnet', 'sentiment analysis', 'speech recognition', 'train', 'training data', 'u-net', 'validation data', 'vgg'];;2021-01-03 04:02:53;2020-12-20 09:11:22;19607.0;0.773;d2l-zh;
d2l-ai;2;2018-12-27 20:04:03;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/d2l-ai/notebooks;0.8;['caffe', 'keras', 'mxnet', 'pattern', 'pytorch', 'spacy', 'tensorflow', 'vocabulary'];['AI', 'ANN', 'AlexNet', 'Anomaly Detection', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'Document Summarization', 'GAN', 'GRU', 'Image Segmentation', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'Machine Translation', 'NER', 'NLP', 'NN', 'Naive Bayes', 'Object Detection', 'RL', 'RNN', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Sentiment Analysis', 'Speech Recognition', 'Supervised Learning', 'Support Vector Machines', 'Text Classification', 'Unsupervised learning', 'VGG'];[];;2019-08-29 00:16:36;2020-12-20 09:07:08;64.0;0.465;notebooks;
dair-ai;0;2020-03-18 15:43:18;Sharing your data science notebooks with the community has never been this easy.;Ã°ÂÂÂ¬ Sharing your data science notebooks with the community has never been this easy.;;Jupyter Notebook;['Jupyter Notebook: 95.0%', 'HTML: 1.6%', 'JavaScript: 1.0%', 'CSS: 0.8%', 'Ruby: 0.5%', 'Shell: 0.4%', 'Other: 0.7%'];Apache-2.0;https://github.com/dair-ai/notebooks;1.0;['keras', 'nltk', 'pattern', 'pytorch', 'spacy', 'tensorflow', 'vocabulary'];['AI', 'CNN', 'CV', 'Classification', 'DL', 'LSTM', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'RL', 'RNN', 'ReLu', 'Recommender', 'Rectifier', 'Regression', 'Sentiment Analysis', 'Text Classification'];['AI', 'CV', 'ML', 'NLP', 'artificial intelligence', 'deep learning', 'detect', 'fit', 'label', 'object detection', 'recommend'];;2020-08-08 02:36:00;2020-12-19 23:30:04;16.0;0.346;notebooks;
danielfrg;2;2019-12-13 20:19:40;Build dashboards using Jupyter Notebooks;Build dashboards using Jupyter Notebooks;;JavaScript;['JavaScript: 40.4%', 'SCSS: 22.1%', 'HTML: 18.1%', 'Python: 10.5%', 'Makefile: 8.8%', 'Shell: 0.1%'];Apache-2.0;https://github.com/danielfrg/jupyter-flex;1.0;['sklearn'];['Classification', 'Clustering', 'K-Means', 'Linear Regression', 'ML', 'Regression'];['ML', 'classif', 'clustering'];;2020-12-21 17:35:39;2020-12-20 09:23:15;91.0;0.493;jupyter-flex;
danilobellini;0;2017-05-28 02:54:40;My IPython Notebooks;My IPython Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/danilobellini/notebooks;1.0;['pattern', 'sklearn'];['CV', 'Classification', 'Clustering', 'GRU', 'K-Means', 'LSTM', 'ML', 'NN', 'RL', 'Regression'];['classif', 'clustering', 'gru', 'k-means', 'linear regression', 'machine learning', 'regression'];;2019-10-26 14:49:07;2020-12-20 08:48:45;103.0;0.502;notebooks;
dannguyen;2;2016-04-26 17:57:09;Python 3.x notebooks about real-world data cleaning and visualization;Python 3.x notebooks about real-world data cleaning and visualization;;Jupyter Notebook;['Jupyter Notebook: 99.1%', 'Python: 0.9%'];;https://github.com/dannguyen/python-notebooks-data-wrangling;1.0;['pattern'];['GRU', 'ML', 'NN', 'RL'];['ML'];;2016-05-04 06:52:42;2020-12-19 23:56:09;54.0;0.452;python-notebooks-data-wrangling;
dask;32;2018-03-04 02:58:32;Easy-to-run example notebooks for Dask;Easy-to-run example notebooks for Dask;;Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Other: 0.4%'];CC-BY-SA-4.0;https://github.com/dask/dask-examples;1.0;['pattern', 'pytorch', 'skimage', 'sklearn', 'tpot', 'xgboost'];['Anomaly Detection', 'AutoML', 'CNN', 'CV', 'Classification', 'DL', 'Image Segmentation', 'K-Means', 'Linear Regression', 'ML', 'NN', 'RL', 'ReLu', 'Recommender', 'Regression', 'ResNet'];['RL', 'machine learning'];;2021-01-02 06:07:24;2020-12-19 22:38:53;237.0;0.56;dask-examples;
dask;8;2015-08-14 13:44:53;Collection of dask example notebooks;Collection of dask example notebooks;;Jupyter Notebook;['Jupyter Notebook: 80.2%', 'HTML: 19.8%'];Learn more about GitHub Sponsors;https://github.com/dask/old-dask-examples;0.8;['pattern', 'skimage'];['Recommender'];[];;2018-02-14 13:05:09;2020-12-19 23:32:19;56.0;0.455;old-dask-examples;
DataBiosphere;32;2017-07-11 22:29:16;Notebook service;Notebook service;;Scala;['Scala: 70.6%', 'Jupyter Notebook: 26.3%', 'Shell: 2.9%', 'HTML: 0.1%', 'Python: 0.1%', 'Dockerfile: 0.0%'];;https://github.com/DataBiosphere/leonardo;1.0;['caffe', 'pattern'];['AI', 'Linear Regression', 'ML', 'Regression'];['AI', 'RL', 'label', 'model', 'train'];;2021-01-01 03:14:12;2020-12-19 22:48:57;20.0;0.367;leonardo;
dataflowr;6;2018-09-10 14:40:17;code for deep learning courses;;;Jupyter Notebook;['Jupyter Notebook: 98.9%', 'Python: 1.1%'];Apache-2.0;https://github.com/dataflowr/notebooks;0.8;['mxnet', 'pattern', 'pytorch', 'skimage', 'sklearn', 'vocabulary'];['AI', 'CNN', 'Classification', 'Clustering', 'DL', 'Federated Learning', 'GAN', 'GRU', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'RL', 'RNN', 'ReLu', 'Recommender', 'Rectifier', 'Regression', 'ResNet', 'Supervised Learning', 'Unsupervised learning', 'VGG'];[];;2020-12-04 10:08:56;2020-12-19 23:15:56;510.0;0.608;notebooks;
DataScienceUWL;2;2019-08-21 20:56:58;DS775 using Jupyter Notebooks;DS775 using Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Other: 0.3%'];;https://github.com/DataScienceUWL/DS775v2;0.8;['pattern', 'sklearn', 'statsmodels', 'tensorflow', 'tpot', 'xgboost'];['AI', 'AutoML', 'Bayesian', 'CV', 'Classification', 'Decision Tree', 'GRU', 'Gradient Boosting', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'Recommender', 'Regression'];[];;2020-10-09 22:33:18;2020-12-20 10:26:54;6.0;0.253;DS775v2;
davidasboth;0;2016-11-03 22:27:55;A collection of code (mostly Jupyter notebooks) associated with entries on my blog;A collection of code (mostly Jupyter notebooks) associated with entries on my blog;;Jupyter Notebook;['Jupyter Notebook: 88.8%', 'HTML: 9.5%', 'MATLAB: 1.7%'];;https://github.com/davidasboth/blog-notebooks;0.8;['sklearn'];['Classification', 'Clustering', 'K-Means', 'ML', 'Random Forest'];[];;2017-10-08 20:56:05;2020-12-19 23:14:01;13.0;0.327;blog-notebooks;
davidbp;3;2015-07-18 12:51:22;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/davidbp/lxmls-notebooks;1.0;['theano', 'vocabulary'];['Bayesian', 'Classification', 'DL', 'GRU', 'LSTM', 'Linear Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'RNN', 'Recommender', 'Regression', 'Sentiment Analysis', 'Speech Recognition', 'Supervised Learning', 'Unsupervised learning'];['ML'];;2017-07-27 14:27:10;2020-12-19 23:14:04;14.0;0.334;lxmls-notebooks;
davidgengenbach;0;2017-04-26 23:48:29;The VGG16 and VGG19 networks in caffe with jupyter notebook;The VGG16 and VGG19 networks in caffe with jupyter notebook;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Shell: 0.1%'];GPL-3.0;https://github.com/davidgengenbach/vgg-caffe;1.0;['caffe'];['Classification', 'ReLu', 'VGG'];['layer', 'model', 'vgg'];;2017-10-18 12:16:51;2020-12-20 09:22:54;42.0;0.431;vgg-caffe;
davidsbatista;2;2016-12-21 18:19:54;Assorted exercises and proof-of-concepts to understand and study machine learning and statistical learning theory;Assorted exercises and proof-of-concepts to understand and study machine learning and statistical learning theory;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/davidsbatista/machine-learning-notebooks;0.8;['keras', 'sklearn', 'vocabulary'];['CV', 'Classification', 'LSTM', 'Linear Regression', 'NN', 'RNN', 'ReLu', 'Regression'];[];;2018-10-24 21:35:04;2020-12-19 23:09:59;33.0;0.411;machine-learning-notebooks;
DB2-Samples;0;2017-06-13 00:18:42;Db2 JSON Examples using Jupyter Notebooks;Db2 JSON Examples using Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/DB2-Samples/db2jupyter;1.0;['pattern'];['AI', 'ANN', 'DL', 'GAN', 'ML', 'NER', 'NN', 'RL', 'Recommender'];['NN', 'fit', 'loss', 'recommend'];;2020-04-24 15:02:29;2020-12-20 10:21:49;25.0;0.387;db2jupyter;
dc-aichara;0;2019-02-28 02:40:07;Python Scripts and Jupyter Notebooks;Python Scripts and Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 58.2%', 'Python: 39.9%', 'MATLAB: 1.2%', 'CSS: 0.7%'];;https://github.com/dc-aichara/DS-ML-Public;1.0;['catboost', 'lightgbm', 'sklearn', 'xgboost'];['AI', 'ANN', 'Bayesian', 'GBM', 'ML', 'NN', 'Regression'];['GBM', 'ML', 'bayesian', 'fit', 'model', 'regression'];;2020-11-16 11:38:22;2020-12-19 23:06:42;23.0;0.379;DS-ML-Public;
dcavar;0;2016-10-25 00:46:44;Python tutorials as Jupyter Notebooks for NLP, ML, AI;Python tutorials as Jupyter Notebooks for NLP, ML, AI;;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Python: 0.3%'];Apache-2.0;https://github.com/dcavar/python-tutorial-notebooks;1.0;['gensim', 'keras', 'nltk', 'pattern', 'sklearn', 'spacy', 'tensorflow', 'vocabulary'];['AI', 'Bayesian', 'CNN', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GRU', 'K-Means', 'KNN', 'LSTM', 'Logistic Regression', 'ML', 'Machine Translation', 'NER', 'NLP', 'NN', 'RL', 'RNN', 'ReLu', 'Recommender', 'Regression', 'Text Classification'];['AI', 'ML', 'NLP', 'artificial intelligence', 'machine learning', 'natural language processing'];;2020-11-15 14:20:31;2020-12-19 23:44:38;51.0;0.447;python-tutorial-notebooks;
deep-learning-indaba;0;2018-08-14 08:52:24;Practical Notebooks for the Deep Learning Indaba 2018;Practical Notebooks for the Deep Learning Indaba 2018;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/deep-learning-indaba/indaba-2018;1.0;['keras', 'pattern', 'tensorflow', 'vocabulary'];['AI', 'AlexNet', 'CNN', 'Classification', 'DL', 'GRU', 'LSTM', 'Linear Regression', 'ML', 'Machine Translation', 'NER', 'NN', 'RL', 'RNN', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Supervised Learning', 'Unsupervised learning', 'VGG'];['deep learning'];;2018-09-13 07:26:56;2020-12-20 10:25:15;138.0;0.523;indaba-2018;
deepmipt;0;2018-12-13 08:35:17;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/deepmipt/dp_notebooks;1.0;['keras', 'pattern', 'tensorflow'];['AI', 'Chatbot', 'Classification', 'LSTM', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'RL', 'Regression', 'Sentiment Analysis', 'Text Classification'];['NER', 'classif', 'model', 'recogn', 'text classification'];;2019-12-04 17:33:57;2020-12-20 10:17:00;36.0;0.418;dp_notebooks;
DeltaAnalytics;19;2017-04-28 00:38:43;Machine learning fundamentals lesson in interactive notebooks;Machine learning fundamentals lesson in interactive notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];CC-BY-4.0;https://github.com/DeltaAnalytics/machine_learning_for_good;1.0;['keras', 'nltk', 'pattern', 'sklearn', 'statsmodels', 'textblob', 'vocabulary'];['ANN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'Recommender', 'Regression', 'Sentiment Analysis', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];['classif', 'clustering', 'decision tree', 'fit', 'gradient boosting', 'k-means', 'label', 'linear regression', 'logistic regression', 'machine learning', 'model', 'natural language processing', 'predict', 'random forest', 'recogn', 'recommend', 'regression', 'supervised learning', 'test data', 'train', 'training data', 'unlabeled', 'unsupervised learning'];;2020-12-25 09:06:22;2020-12-19 23:08:09;135.0;0.521;machine_learning_for_good;
dformoso;0;2017-08-12 05:05:33;Data Science Notebook on a Classification Task, using sklearn and Tensorflow.;Data Science Notebook on a Classification Task, using sklearn and Tensorflow.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/dformoso/sklearn-classification;1.0;['sklearn', 'tensorflow'];['CV', 'Classification', 'Decision Tree', 'Gradient Boosting', 'KNN', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'Random Forest', 'Regression'];['RL', 'classif', 'machine learning', 'predict', 'rank', 'train'];;2018-07-24 06:18:55;2020-12-20 09:36:45;495.0;0.606;sklearn-classification;
dgkim5360;0;2017-12-01 09:05:11;"Jupyter notebooks for summarizing and reproducing the textbook ""The Elements of Statistical Learning"" 2/E by Hastie, Tibshirani, and Friedman";"Jupyter notebooks for summarizing and reproducing the textbook ""The Elements of Statistical Learning"" 2/E by Hastie, Tibshirani, and Friedman";;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/dgkim5360/the-elements-of-statistical-learning-notebooks;0.8;['pattern', 'pytorch', 'sklearn'];['AI', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines', 'Text Classification', 'Unsupervised learning'];[];;2018-05-05 04:14:12;2020-12-20 09:12:18;236.0;0.56;the-elements-of-statistical-learning-notebooks;
dgokondra;0;2019-04-24 13:44:26;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/dgokondra/stepik_pandas_notebooks.github.io;0.8;['sklearn'];['Classification', 'ML'];[];;2019-05-03 17:33:19;2020-12-20 09:20:00;49.0;0.444;stepik_pandas_notebooks.github.io;
diegoinacio;0;2019-12-06 15:37:47;An authorial collection of Computer Vision fundamentals and useful python notebooks;:eye: A collection of Computer Vision fundamentals and useful python notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/diegoinacio/computer-vision-notebooks;1.0;['Pillow', 'keras', 'opencv-python', 'pattern', 'tensorflow'];['AI', 'CNN', 'CV', 'Classification', 'GRU', 'ML', 'NN', 'Object Detection', 'ReLu'];['AI', 'NN', 'computer vision', 'fit', 'machine learning'];;2020-12-24 19:32:28;2020-12-20 10:28:34;59.0;0.459;computer-vision-notebooks;
differential-machine-learning;2;2019-12-16 18:16:55;Implement, demonstrate, reproduce and extend the results of the article 'Differential Machine Learning' (Huge & Savine, 2020), and cover implementation details left out of the working paper;Implement, demonstrate, reproduce and extend the results of the article 'Differential Machine Learning' (Huge & Savine, 2020), and cover implementation details left out of the working paper;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/differential-machine-learning/notebooks;1.0;['sklearn', 'tensorflow'];['ANN', 'CV', 'DL', 'Linear Regression', 'ML', 'NN', 'Regression'];['ML', 'machine learning', 'model', 'neural network', 'regression', 'train'];;2020-06-14 22:43:04;2020-12-19 23:39:13;29.0;0.4;notebooks;
digitalearthafrica;23;2019-07-18 04:31:13;Notebooks for the Digital Earth Africa Sandbox;Notebooks for the Digital Earth Africa Sandbox;;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Python: 0.3%'];Apache-2.0;https://github.com/digitalearthafrica/deafrica-sandbox-notebooks;1.0;['pattern', 'skimage', 'sklearn'];['AI', 'CV', 'Classification', 'Clustering', 'Decision Tree', 'Image Segmentation', 'Linear Regression', 'ML', 'RL', 'Recommender', 'Regression', 'Supervised Learning', 'Unsupervised learning'];['machine learning', 'recommend', 'train', 'training data'];;2020-12-21 20:33:03;2020-12-19 22:22:25;21.0;0.371;deafrica-sandbox-notebooks;
diljeet1994;0;2018-05-17 08:05:32;Python Notes on IPython Notebook files.;Python Notes on IPython Notebook files.;;Jupyter Notebook;['Jupyter Notebook: 97.1%', 'HTML: 2.7%', 'Python: 0.2%'];;https://github.com/diljeet1994/Python_Tutorials;0.8;['nltk', 'sklearn', 'statsmodels'];['Linear Regression', 'RL', 'Recommender', 'Regression'];[];;2019-07-26 03:35:31;2020-12-19 22:40:49;25.0;0.387;Python_Tutorials;
DJCordhose;4;2018-08-16 09:21:47;"Notebooks and Colab links for the code samples for the Manning video course ""Deep Learning Crash Course""";"Notebooks and Colab links for the code samples for the Manning video course ""Deep Learning Crash Course""";;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/DJCordhose/deep-learning-crash-course-notebooks;1.0;['keras', 'sklearn', 'tensorflow'];['AI', 'Classification', 'Linear Regression', 'ML', 'NN', 'RL', 'ReLu', 'Regression', 'Supervised Learning'];['ML', 'deep learning', 'layer', 'model', 'neural network', 'predict', 'train'];;2020-05-05 11:06:40;2020-12-20 09:19:56;26.0;0.39;deep-learning-crash-course-notebooks;
dmonn;0;2017-08-31 16:14:10;"Notebook for O'Reilly's ""Deep Convolutional Generative Adversarial Networks""";"Notebook for O'Reilly's ""Deep Convolutional Generative Adversarial Networks""";;Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Python: 0.4%'];;https://github.com/dmonn/dcgan-oreilly;1.0;['Pillow', 'tensorflow'];['CNN', 'Classification', 'GAN', 'NN', 'RL', 'ReLu'];['GAN', 'generative adversarial network', 'recommend'];;2017-11-04 14:12:33;2020-12-20 10:20:58;90.0;0.492;dcgan-oreilly;
dnc1994;2;2016-02-24 11:26:55;Jupyter notebooks and code examples for my Kaggle Beginners' Guide.;Jupyter notebooks and code examples for my Kaggle Beginners' Guide.;;Jupyter Notebook;['Jupyter Notebook: 74.7%', 'Python: 25.3%'];MIT;https://github.com/dnc1994/Kaggle-Playground;1.0;['nltk', 'pattern', 'sklearn', 'statsmodels', 'xgboost'];['AI', 'CV', 'Classification', 'Logistic Regression', 'NER', 'Random Forest', 'Regression'];['model', 'rank', 'train'];;2019-07-03 06:22:05;2020-12-19 22:20:17;187.0;0.544;Kaggle-Playground;
dongdonghy;0;2018-11-23 14:37:06;-PyTorch;Ã¤Â»Â£Ã§Â Â -Ã£ÂÂÃ¦Â·Â±Ã¥ÂºÂ¦Ã¥Â­Â¦Ã¤Â¹Â Ã¤Â¹ÂPyTorchÃ§ÂÂ©Ã¤Â½ÂÃ¦Â£ÂÃ¦ÂµÂÃ¥Â®ÂÃ¦ÂÂÃ£ÂÂ;;Python;['Python: 89.7%', 'C: 3.8%', 'Jupyter Notebook: 3.1%', 'Cuda: 2.8%', 'Shell: 0.3%', 'C++: 0.2%', 'MATLAB: 0.1%'];;https://github.com/dongdonghy/Detection-PyTorch-Notebook;1.0;['caffe', 'detectron', 'imutils', 'py-faster-rcnn', 'pytorch', 'skimage', 'tensorflow'];['AI', 'CNN', 'CV', 'Classification', 'ML', 'NN', 'Object Detection', 'RL', 'ReLu', 'Regression', 'ResNet', 'VGG'];['CNN', 'CV', 'NN', 'alexnet', 'artificial intelligence', 'classif', 'computer vision', 'convolutional neural network', 'detect', 'epoch', 'loss', 'model', 'neural network', 'object detection', 'recogn', 'rectifier', 'regression', 'resnet', 'train', 'vgg'];;2020-08-14 05:05:13;2020-12-20 09:50:44;391.0;0.592;Detection-PyTorch-Notebook;
donnemartin;12;2015-01-23 19:38:29;Data science Python notebooks: Deep learning (TensorFlow, Theano, Caffe, Keras), scikit-learn, Kaggle, big data (Spark, Hadoop MapReduce, HDFS), matplotlib, pandas, NumPy, SciPy, Python essentials, AWS, and various command lines.;Data science Python notebooks: Deep learning (TensorFlow, Theano, Caffe, Keras), scikit-learn, Kaggle, big data (Spark, Hadoop MapReduce, HDFS), matplotlib, pandas, NumPy, SciPy, Python essentials, AWS, and various command lines.;;Python;['Python: 100.0%'];;https://github.com/donnemartin/data-science-ipython-notebooks;1.0;['caffe', 'gensim', 'keras', 'nltk', 'pattern', 'sklearn', 'statsmodels', 'tensorflow', 'theano', 'vocabulary'];['AI', 'ANN', 'AlexNet', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GRU', 'Gradient Boosting', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'Object Detection', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Rectifier', 'Regression', 'ResNet', 'Sentiment Analysis', 'Speech Recognition', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning', 'VGG'];['AI', 'ANN', 'CNN', 'DL', 'ML', 'NER', 'NN', 'RL', 'RNN', 'alexnet', 'artificial neural network', 'autoencoder', 'classif', 'clustering', 'computer vision', 'convolutional neural network', 'deep learning', 'detect', 'epoch', 'filter', 'gradient boosting', 'gru', 'image classification', 'k-means', 'k-nearest neighbor', 'label', 'layer', 'linear regression', 'logistic regression', 'loss', 'lstm', 'machine learning', 'model', 'neural network', 'predict', 'random forest', 'recogn', 'recommend', 'recurrent neural network', 'regression', 'resnet', 'supervised learning', 'support vector machines', 'train', 'unsupervised learning', 'vgg'];;2020-12-21 20:44:47;2020-12-19 22:37:07;20002.0;0.774;data-science-ipython-notebooks;
drckf;0;2019-02-05 14:48:10;"Jupyter notebooks for ""A high-bias, low-variance introduction to Machine Learning for physicists""";"Jupyter notebooks for ""A high-bias, low-variance introduction to Machine Learning for physicists""";;HTML;['HTML: 53.1%', 'Jupyter Notebook: 46.9%'];;https://github.com/drckf/mlreview_notebooks;1.0;['keras', 'pattern', 'pytorch', 'sklearn', 'tensorflow', 'xgboost'];['AI', 'Bayesian', 'Boltzmann Machine', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning'];['ML', 'boltzmann machine', 'clustering', 'deep learning', 'fit', 'gradient descent', 'label', 'machine learning', 'model', 'neural network', 'supervised learning', 'unsupervised learning'];;2019-02-05 14:55:10;2020-12-20 09:27:55;72.0;0.475;mlreview_notebooks;
DrSkippy;9;2013-09-20 01:06:19;Ipython notebook presentations for getting starting with basic programming, statistics and machine learning techniques;Ipython notebook presentations for getting starting with basic programming, statistics and machine learning techniques;;Jupyter Notebook;['Jupyter Notebook: 75.4%', 'HTML: 24.1%', 'Python: 0.5%', 'Shell: 0.0%', 'R: 0.0%', 'CSS: 0.0%'];Unlicense;https://github.com/DrSkippy/Data-Science-45min-Intros;1.0;['keras', 'nltk', 'pattern', 'sklearn', 'tensorflow', 'theano', 'vocabulary'];['AI', 'Bayesian', 'Boltzmann Machine', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'K-Means', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'ReLu', 'Regression', 'Sentiment Analysis', 'Supervised Learning', 'Unsupervised learning'];['ML', 'NER', 'NN', 'RL', 'classif', 'clustering', 'decision tree', 'detect', 'filter', 'fit', 'k-means', 'k-nearest neighbor', 'label', 'layer', 'linear regression', 'logistic regression', 'machine learning', 'model', 'naive bayes', 'natural language processing', 'neural network', 'predict', 'recogn', 'recommend', 'regression', 'supervised learning', 'support vector machines', 'train', 'unsupervised learning'];;2019-10-02 19:33:51;2020-12-19 22:49:17;1484.0;0.666;Data-Science-45min-Intros;
dudeperf3ct;0;2018-12-07 11:12:27;This repo contains all the notebooks mentioned in blog.;This repo contains all the notebooks mentioned in blog.;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];;https://github.com/dudeperf3ct/DL_Notebooks;1.0;['Pillow', 'caffe', 'face_recognition', 'gensim', 'keras', 'mlbox', 'nltk', 'pattern', 'py-faster-rcnn', 'pytorch', 'skimage', 'sklearn', 'spacy', 'tensorflow', 'theano', 'vocabulary'];['AI', 'CNN', 'CV', 'Classification', 'DL', 'Federated Learning', 'GAN', 'GRU', 'LSTM', 'ML', 'NLP', 'NN', 'Object Detection', 'RL', 'RNN', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Sentiment Analysis', 'Text Classification', 'VGG'];['AI', 'CNN', 'CV', 'DL', 'GAN', 'ML', 'NLP', 'NN', 'RNN', 'classif', 'convolutional neural network', 'deep learning', 'detect', 'epoch', 'federated learning', 'fit', 'generative adversarial network', 'gru', 'k-nearest neighbor', 'layer', 'loss', 'lstm', 'machine learning', 'model', 'neural network', 'object detection', 'recogn', 'recurrent neural network', 'resnet', 'train', 'vgg'];;2020-01-26 01:14:26;2020-12-19 22:25:50;56.0;0.455;DL_Notebooks;
Dyakonov;0;2015-04-12 15:46:12;my notebooks;my notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Dyakonov/notebooks;0.8;['catboost', 'lightgbm', 'sklearn', 'vocabulary', 'xgboost'];['AI', 'CV', 'Classification', 'GBM', 'ML', 'NN', 'Recommender', 'Regression'];[];;2019-12-03 12:47:28;2020-12-19 23:24:22;35.0;0.416;notebooks;
eclarson;0;2015-05-28 16:32:12;This is a collection of iPython notebooks from my course on data mining. Data used in the notebooks can be downloaded from the given links in the notebooks.;This is a collection of iPython notebooks from my course on data mining. Data used in the notebooks can be downloaded from the given links in the notebooks.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/eclarson/DataMiningNotebooks;0.8;['skimage', 'sklearn'];['Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'Gradient Boosting', 'Image Segmentation', 'K-Means', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'Recommender', 'Regression', 'Support Vector Machines'];[];;2017-09-20 02:30:18;2020-12-20 09:41:23;130.0;0.519;DataMiningNotebooks;
eclarson;0;2016-08-23 17:05:32;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/eclarson/MachineLearningNotebooks;1.0;['keras', 'nltk', 'skimage', 'sklearn', 'statsmodels', 'tensorflow', 'vocabulary'];['AI', 'AlexNet', 'CNN', 'CV', 'Classification', 'DL', 'GRU', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'RL', 'RNN', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Sentiment Analysis', 'Support Vector Machines', 'VGG'];['machine learning'];;2020-12-15 22:55:13;2020-12-20 09:08:25;81.0;0.484;MachineLearningNotebooks;
ecmwf;4;2018-10-22 16:36:07;Example notebooks showing how to work with ECMWF services and data;Example notebooks showing how to work with ECMWF services and data;;Jupyter Notebook;['Jupyter Notebook: 95.7%', 'GLSL: 4.3%'];Apache-2.0;https://github.com/ecmwf/notebook-examples;0.8;['pattern'];['AI', 'ML'];[];;2020-09-22 18:09:52;2020-12-19 23:29:49;38.0;0.423;notebook-examples;
edbullen;0;2017-05-02 16:08:17;Python NLTK Jupyter Notebooks;Python NLTK Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/edbullen/nltk;1.0;['nltk', 'pattern', 'sklearn', 'spacy'];['Chatbot', 'Classification', 'ML', 'NLP', 'NN', 'Naive Bayes', 'Random Forest', 'Supervised Learning'];['classif', 'machine learning', 'natural language processing'];;2017-05-04 16:19:20;2020-12-19 23:59:40;49.0;0.444;nltk;
ehmatthes;4;2013-09-10 14:31:18;A set of IPython notebooks and learning resources for an Introduction to Programming class, focusing on Python.;A set of IPython notebooks and learning resources for an Introduction to Programming class, focusing on Python.;;Jupyter Notebook;['Jupyter Notebook: 97.9%', 'Python: 1.0%', 'HTML: 0.6%', 'Shell: 0.2%', 'CSS: 0.2%', 'JavaScript: 0.1%'];MIT;https://github.com/ehmatthes/intro_programming;1.0;['pattern'];['AI', 'NN', 'Recommender'];['AI', 'NN', 'fit'];;2018-08-16 21:51:21;2020-12-19 23:46:11;364.0;0.587;intro_programming;
Einsteinish;0;2016-10-17 03:46:25;Artificial Neural Networks - Gradient descent, BFGS, Regularization with Jupyter notebook;Artificial Neural Networks - Gradient descent, BFGS, Regularization with Jupyter notebook;;Jupyter Notebook;['Jupyter Notebook: 99.3%', 'Python: 0.7%'];;https://github.com/Einsteinish/Artificial-Neural-Networks-with-Jupyter;1.0;['keras', 'theano'];['ANN', 'Classification', 'Linear Regression', 'ML', 'NN', 'Regression'];['ANN', 'NN', 'artificial neural network', 'classif', 'deep learning', 'fit', 'gradient descent', 'image classification', 'neural network', 'propagation', 'recogn', 'train'];;2016-11-10 00:53:45;2020-12-19 23:27:45;42.0;0.431;Artificial-Neural-Networks-with-Jupyter;
Einsteinish;0;2016-10-18 06:32:59;Code repository - Jupyter notebook;Code repository - Jupyter notebook;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Einsteinish/bogotobogo-Machine-Learning;1.0;['nltk', 'sklearn', 'vocabulary'];['CV', 'Classification', 'NLP', 'Regression', 'Sentiment Analysis'];['NLP', 'fit', 'logistic regression', 'machine learning', 'natural language processing', 'random forest', 'regression', 'sentiment analysis', 'train'];;2016-11-03 17:47:41;2020-12-19 23:11:04;32.0;0.408;bogotobogo-Machine-Learning;
elegant-scipy;3;2017-07-13 15:18:39;The compiled, clean (not run) Jupyter notebooks for Elegant SciPy;The compiled, clean (not run) Jupyter notebooks for Elegant SciPy;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/elegant-scipy/notebooks;1.0;['pattern', 'skimage', 'sklearn'];['CV', 'Classification', 'Clustering', 'Image Segmentation', 'ML', 'Recommender'];['AI', 'fit', 'label', 'loss'];;2020-02-11 23:26:49;2020-12-20 10:23:36;93.0;0.494;notebooks;
elyra-ai;18;2019-10-22 21:37:58;Elyra extends JupyterLab Notebooks with an AI centric approach.;Elyra extends JupyterLab Notebooks with an AI centric approach.;;Python;['Python: 48.3%', 'TypeScript: 43.2%', 'CSS: 3.9%', 'JavaScript: 1.3%', 'Makefile: 1.0%', 'Shell: 0.9%', 'Other: 1.4%'];Apache-2.0;https://github.com/elyra-ai/elyra;1.0;['pattern', 'stanza', 'tensorflow'];['AI', 'Classification', 'ML', 'NER', 'RL'];['AI', 'ML', 'NER', 'RL', 'classif', 'deep learning', 'detect', 'filter', 'label', 'machine learning', 'model', 'predict', 'recogn', 'recommend', 'train'];;2020-12-31 19:01:13;2020-12-20 09:27:47;745.0;0.629;elyra;
Emergent-Behaviors-in-Biology;0;2019-09-05 03:44:03;"Notebooks for ""A high bias low-variance introduction to Machine Learning for physicists.""";"Notebooks for ""A high bias low-variance introduction to Machine Learning for physicists.""";;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Emergent-Behaviors-in-Biology/mlreview_notebooks;1.0;['keras', 'pattern', 'pytorch', 'sklearn', 'tensorflow', 'xgboost'];['AI', 'Bayesian', 'Boltzmann Machine', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning'];['label'];;2019-10-15 02:04:33;2020-12-19 23:39:01;36.0;0.418;mlreview_notebooks;
emmettgb;0;2019-08-24 02:05:02;Random notebooks for various projects.;Random notebooks for various projects.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/emmettgb/Emmetts-DS-NoteBooks;0.8;['sklearn', 'xgboost'];['Classification', 'DL', 'LSTM', 'Linear Regression', 'ML', 'Random Forest', 'Regression'];[];;2021-01-01 22:51:02;2020-12-19 23:12:19;21.0;0.371;Emmetts-DS-NoteBooks;
empathy87;2;2019-01-23 03:30:18;"A series of Python Jupyter notebooks that help you better understand ""The Elements of Statistical Learning"" book";"A series of Python Jupyter notebooks that help you better understand ""The Elements of Statistical Learning"" book";;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/empathy87/The-Elements-of-Statistical-Learning-Python-Notebooks;1.0;['catboost', 'pattern', 'sklearn', 'statsmodels', 'tensorflow'];['AI', 'ANN', 'CV', 'Classification', 'Clustering', 'Decision Tree', 'Gradient Boosting', 'K-Means', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Random Forest', 'Regression', 'Speech Recognition', 'Supervised Learning', 'Support Vector Machines'];['classif', 'clustering', 'decision tree', 'detect', 'k-means', 'k-nearest neighbor', 'linear regression', 'logistic regression', 'model', 'neural network', 'predict', 'random forest', 'rank', 'recogn', 'regression', 'speech recognition', 'support vector machines', 'train'];;2020-01-15 14:31:24;2020-12-19 23:38:49;379.0;0.59;The-Elements-of-Statistical-Learning-Python-Notebooks;
empet;0;2015-08-02 18:32:15;IPython notebooks for Plotly plots;IPython notebooks for Plotly plots;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/empet/Plotly-plots;0.8;['pattern', 'skimage'];['AI', 'Clustering', 'ML', 'RL', 'Recommender'];[];;2020-12-11 19:47:55;2020-12-20 09:12:28;39.0;0.425;Plotly-plots;
enakai00;0;2016-05-24 14:42:50;Jupyter Notebooks for TensorFlow Book;Jupyter Notebooks for TensorFlow Book;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/enakai00/jupyter_tfbook;0.8;['tensorflow'];['CNN', 'ML', 'NN', 'ReLu'];[];;2017-11-03 10:51:43;2020-12-19 23:28:55;67.0;0.469;jupyter_tfbook;
equinor;4;2019-03-08 17:22:42;Notebooks with examples and demos of segyio;Notebooks with examples and demos of segyio;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];LGPL-3.0;https://github.com/equinor/segyio-notebooks;1.0;['pattern', 'skimage'];['AI'];['filter'];;2020-05-06 10:25:10;2020-12-19 23:19:26;51.0;0.447;segyio-notebooks;
erhwenkuo;3;2017-11-07 14:15:00;Jupyter notebooks for using & learning Keras;Jupyter notebooks for using & learning Keras;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/erhwenkuo/deep-learning-with-keras-notebooks;1.0;['Pillow', 'face_recognition', 'gensim', 'keras', 'opencv-python', 'openface', 'pattern', 'pytorch', 'skimage', 'sklearn', 'tensorflow'];['AI', 'ANN', 'AlexNet', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'GRU', 'Gradient Boosting', 'LSTM', 'ML', 'NLP', 'NN', 'Object Detection', 'RL', 'RNN', 'ReLu', 'Regression', 'ResNet', 'Supervised Learning', 'Unsupervised learning', 'VGG'];['CNN', 'CV', 'ML', 'NN', 'RNN', 'autoencoder', 'classif', 'detect', 'image classification', 'lstm', 'model', 'natural language processing', 'recogn', 'train', 'vgg'];;2018-12-19 17:12:14;2020-12-20 09:20:45;2010.0;0.68;deep-learning-with-keras-notebooks;
ericmjl;2;2017-03-05 02:34:43;A collection of Bayesian data analysis recipes using PyMC3;A collection of Bayesian data analysis recipes using PyMC3;;Jupyter Notebook;['Jupyter Notebook: 97.6%', 'Python: 2.3%', 'Makefile: 0.1%'];MIT;https://github.com/ericmjl/bayesian-analysis-recipes;1.0;['pattern', 'sklearn', 'statsmodels', 'tensorflow', 'theano'];['AI', 'Bayesian', 'Classification', 'DL', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'RL', 'RNN', 'ReLu', 'Regression'];['bayesian', 'label', 'model', 'train'];;2020-11-28 02:47:27;2020-12-20 10:08:40;458.0;0.601;bayesian-analysis-recipes;
erykml;0;2018-10-28 19:22:10;Scripts/Notebooks used for my articles published on Medium;Scripts/Notebooks used for my articles published on Medium;;Jupyter Notebook;['Jupyter Notebook: 99.0%', 'Other: 1.0%'];;https://github.com/erykml/medium_articles;1.0;['pattern', 'skimage', 'sklearn', 'statsmodels'];['Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'Linear Regression', 'Logistic Regression', 'ML', 'Naive Bayes', 'Random Forest', 'Recommender', 'Regression'];['CNN', 'NN', 'autoencoder', 'classif', 'computer vision', 'detect', 'filter', 'image classification', 'linear regression', 'machine learning', 'model', 'random forest', 'regression'];;2020-12-08 23:24:16;2020-12-20 09:53:39;158.0;0.532;medium_articles;
espnet;5;2019-07-30 08:58:49;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/espnet/notebook;0.8;['nltk', 'pytorch'];['GAN', 'ML', 'NN', 'Speech Recognition'];[];;2021-01-02 02:33:42;2020-12-19 22:58:45;12.0;0.319;notebook;
executablebooks;63;2018-06-14 01:55:51;Build interactive, publication-quality documents from Jupyter Notebooks;Build interactive, publication-quality documents from Jupyter Notebooks;;Python;['Python: 81.7%', 'Jupyter Notebook: 7.5%', 'HTML: 5.8%', 'TeX: 4.4%', 'Shell: 0.6%'];BSD-3-Clause;https://github.com/executablebooks/jupyter-book;1.0;['pattern'];['ML', 'RL', 'Regression'];['AI', 'ML', 'RL', 'filter', 'fit', 'label', 'layer', 'loss', 'predict', 'recogn', 'recommend', 'train'];;2020-12-28 18:20:23;2020-12-20 10:32:25;1999.0;0.68;jupyter-book;
explosion;3;2016-12-25 13:06:36;Jupyter notebooks for spaCy examples and tutorials;Ã°ÂÂÂ«  Jupyter notebooks for spaCy examples and tutorials;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/explosion/spacy-notebooks;1.0;['gensim', 'pattern', 'sklearn', 'spacy', 'vocabulary'];['Classification', 'ML', 'NER', 'NLP', 'NN', 'RL', 'Recommender', 'Text Classification'];['NLP'];;2019-02-01 14:41:40;2020-12-19 23:45:09;252.0;0.564;spacy-notebooks;
falloutdurham;4;2019-08-12 23:24:05;Repository for scripts and notebooks from the book: Programming PyTorch for Deep Learning;Repository for scripts and notebooks from the book: Programming PyTorch for Deep Learning;;Jupyter Notebook;['Jupyter Notebook: 98.2%', 'Python: 1.5%', 'Other: 0.3%'];MIT;https://github.com/falloutdurham/beginners-pytorch-deep-learning;1.0;['pytorch', 'skimage', 'spacy', 'vocabulary'];['AI', 'AlexNet', 'CNN', 'Classification', 'DL', 'LSTM', 'NN', 'ReLu', 'ResNet', 'Supervised Learning', 'Text Classification', 'U-Net'];['deep learning', 'model', 'supervised learning'];;2020-11-30 20:39:52;2020-12-19 23:32:47;161.0;0.534;beginners-pytorch-deep-learning;
fastai;2;2020-02-12 17:39:14;Notebooks for upcoming fastai book (draft / incomplete);Notebooks for upcoming fastai book (draft / incomplete);;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/fastai/book_nbs;0.8;['pytorch', 'sklearn', 'spacy'];['CNN', 'CV', 'Classification', 'DL', 'Decision Tree', 'LSTM', 'ML', 'NLP', 'NN', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'ResNet'];[];;2020-03-01 22:00:01;2020-12-20 09:09:10;151.0;0.529;book_nbs;
fastai;91;2020-02-28 19:26:47;The fastai book, published as Jupyter Notebooks;The fastai book, published as Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];GPL-3.0;https://github.com/fastai/fastbook;1.0;['face_recognition', 'pattern', 'pytorch', 'sklearn', 'spacy', 'tensorflow', 'vocabulary'];['AI', 'AlexNet', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GAN', 'GBM', 'GRU', 'Gradient Boosting', 'Image Segmentation', 'KNN', 'LSTM', 'Linear Regression', 'ML', 'NLP', 'NN', 'Object Detection', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Rectifier', 'Regression', 'ResNet', 'Sentiment Analysis', 'Speech Recognition', 'Supervised Learning', 'Text Classification', 'U-Net', 'VGG'];['AI', 'deep learning', 'layer'];;2020-12-31 10:29:35;2020-12-20 09:51:16;11151.0;0.753;fastbook;
fastai;3;2020-10-12 16:28:41;Create publication-quality books from Jupyter notebooks;Create publication-quality books from Jupyter notebooks;;Jupyter Notebook;['Jupyter Notebook: 96.9%', 'Python: 2.9%', 'Other: 0.2%'];Apache-2.0;https://github.com/fastai/fastdoc;1.0;['pattern'];['AI', 'CV', 'Classification', 'DL', 'ML', 'NER', 'RL', 'Regression'];['ML'];;2020-12-17 00:03:07;2020-12-20 09:08:56;114.0;0.509;fastdoc;
fastai;39;2020-02-03 05:19:46;An easy to use blogging platform, with enhanced support for Jupyter Notebooks.;An easy to use blogging platform, with enhanced support for Jupyter Notebooks.;;Jupyter Notebook;['Jupyter Notebook: 98.2%', 'HTML: 0.6%', 'JavaScript: 0.3%', 'SCSS: 0.3%', 'Ruby: 0.2%', 'Shell: 0.2%', 'Other: 0.2%'];Apache-2.0;https://github.com/fastai/fastpages;1.0;['pattern'];['ML', 'NN', 'RL', 'Recommender'];['AI', 'CV', 'ML', 'RL', 'chatbot', 'deep learning', 'filter', 'fit', 'label', 'machine learning', 'model', 'predict', 'rank', 'recommend'];;2021-01-01 23:54:59;2020-12-20 09:06:35;2038.0;0.681;fastpages;
fastai;49;2019-11-18 17:37:35;Create delightful python projects using Jupyter Notebooks;Create delightful python projects using Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 79.4%', 'Python: 19.6%', 'Other: 1.0%'];Apache-2.0;https://github.com/fastai/nbdev;1.0;['pattern'];['Classification', 'DL', 'ML', 'NER', 'RL', 'Recommender'];['deep learning', 'fit', 'label', 'layer', 'machine learning'];;2020-12-30 19:26:42;2020-12-20 09:30:16;2449.0;0.69;nbdev;
fastai;5;2017-05-16 17:28:12;Free online textbook of Jupyter notebooks for fast.ai Computational Linear Algebra course;Free online textbook of Jupyter notebooks for fast.ai Computational Linear Algebra course;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/fastai/numerical-linear-algebra;1.0;['pattern', 'pytorch', 'skimage', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'CNN', 'CV', 'Classification', 'DL', 'Linear Regression', 'ML', 'NN', 'RL', 'RNN', 'Recommender', 'Regression'];['deep learning', 'gradient descent', 'linear regression', 'machine learning', 'model', 'predict', 'rank', 'regression'];;2019-09-27 06:23:32;2020-12-20 09:06:49;7605.0;0.738;numerical-linear-algebra;
fastai;0;2018-05-18 14:22:58;Jupyter Notebooks for Computational Linear Algebra course, taught summer 2018 in USF MSDS program;Jupyter Notebooks for Computational Linear Algebra course, taught summer 2018 in USF MSDS program;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/fastai/numerical-linear-algebra-v2;1.0;['pattern', 'pytorch', 'skimage', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'CNN', 'CV', 'Classification', 'DL', 'Linear Regression', 'ML', 'NN', 'RL', 'RNN', 'Recommender', 'Regression'];['deep learning', 'gradient descent', 'linear regression', 'machine learning', 'model', 'predict', 'rank', 'regression'];;2018-07-05 01:31:49;2020-12-20 09:08:39;236.0;0.56;numerical-linear-algebra-v2;
fastmachinelearning;2;2020-06-02 12:59:21;Tutorial notebooks for hls4ml;Tutorial notebooks for hls4ml;;Jupyter Notebook;['Jupyter Notebook: 91.7%', 'Python: 3.5%', 'Dockerfile: 2.7%', 'Shell: 2.1%'];;https://github.com/fastmachinelearning/hls4ml-tutorial;1.0;['keras', 'sklearn', 'tensorflow'];['Classification', 'ML', 'NN', 'ReLu'];['AI', 'CV'];;2020-11-02 13:54:19;2020-12-19 23:52:21;31.0;0.405;hls4ml-tutorial;
FayeL37;0;2017-06-17 07:27:13;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/FayeL37/python_notebook;0.8;['tensorflow'];['ML'];[];;2020-10-16 18:09:29;2020-12-20 09:50:29;0.0;0.0;python_notebook;
fchollet;3;2017-09-05 19:47:56;"Jupyter notebooks for the code samples of the book ""Deep Learning with Python""";"Jupyter notebooks for the code samples of the book ""Deep Learning with Python""";;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/fchollet/deep-learning-with-python-notebooks;1.0;['keras', 'pattern', 'vocabulary'];['AI', 'Bayesian', 'CNN', 'CV', 'Classification', 'DL', 'GAN', 'GRU', 'LSTM', 'Logistic Regression', 'ML', 'Machine Translation', 'NLP', 'NN', 'RL', 'RNN', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Sentiment Analysis', 'Text Classification', 'VGG'];['GAN', 'NN', 'RNN', 'classif', 'deep learning', 'fit', 'lstm', 'neural network', 'predict', 'train'];;2020-09-30 20:20:28;2020-12-19 22:46:06;11951.0;0.755;deep-learning-with-python-notebooks;
FCTweedie;3;2015-01-19 23:25:33;NLTK notebook;NLTK notebook;;;[];;https://github.com/FCTweedie/NLTK;0.8;['nltk', 'pattern', 'vocabulary'];['ML', 'NLP'];[];;2015-12-02 04:45:44;2020-12-19 22:54:49;11.0;0.311;NLTK;
felixcheung;0;2015-04-18 07:27:33;Some notebook examples related to Apache Spark, IPython / Jupyter, Zeppelin;Some notebook examples related to Apache Spark, IPython / Jupyter, Zeppelin;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/felixcheung/spark-notebook-examples;0.8;['statsmodels'];['AI', 'K-Means', 'ML', 'Recommender'];[];;2016-05-13 04:18:02;2020-12-19 23:58:34;48.0;0.442;spark-notebook-examples;
floydhub;0;2017-02-16 12:14:27;Tensorflow Notebook Examples and Tutorials;Tensorflow Notebook Examples and Tutorials;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/floydhub/tensorflow-notebooks-examples;1.0;['tensorflow'];['Classification', 'DL', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'RNN', 'ReLu', 'Regression'];['CNN', 'NN', 'RNN', 'alexnet', 'autoencoder', 'classif', 'computer vision', 'convolutional neural network', 'layer', 'linear regression', 'logistic regression', 'loss', 'lstm', 'machine learning', 'model', 'natural language processing', 'neural network', 'recommend', 'recommender', 'recurrent neural network', 'regression', 'reinforcement learning', 'train', 'vgg'];;2019-05-13 20:57:15;2020-12-20 09:32:56;61.0;0.462;tensorflow-notebooks-examples;
fluentpython;2;2016-05-31 23:25:19;Jupyter Notebooks with Fluent Python examples;Jupyter Notebooks with Fluent Python examples;;Python;['Python: 90.6%', 'Jupyter Notebook: 7.5%', 'Other: 1.9%'];MIT;https://github.com/fluentpython/notebooks;0.8;['caffe', 'pattern'];['AI', 'ANN', 'DL', 'ML', 'NER', 'NN', 'RL'];[];;2016-06-01 00:41:43;2020-12-19 23:19:35;185.0;0.543;notebooks;
FugroRoames;0;2017-11-15 23:07:08;Public Jupyter notebooks from Fugro Roames;Public Jupyter notebooks from Fugro Roames;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/FugroRoames/RoamesNotebooks;0.8;['pattern', 'tensorflow'];['Classification', 'DL', 'ML', 'Recommender'];[];;2019-03-07 00:15:24;2020-12-19 23:57:06;26.0;0.39;RoamesNotebooks;
gabehollombe-aws;2;2018-09-26 02:32:23;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/gabehollombe-aws/jupyter-notebooks;0.8;['mxnet'];['Classification', 'DL', 'ML', 'NN'];[];;2019-02-14 01:47:12;2020-12-19 22:20:28;45.0;0.437;jupyter-notebooks;
gammapy;28;2014-05-19 17:12:49;Gammapy extras (datasets, notebooks, ...);Gammapy extras (datasets, notebooks, ...);;Jupyter Notebook;['Jupyter Notebook: 96.6%', 'Python: 3.3%', 'Shell: 0.1%'];;https://github.com/gammapy/gammapy-extra;1.0;['tensorflow'];['AI', 'DL', 'ML', 'NER', 'RL'];['DL', 'fit', 'model', 'test data'];;2020-12-04 09:00:55;2020-12-19 23:50:49;7.0;0.268;gammapy-extra;
gaoxuesong;0;2018-02-23 15:50:07;Keras  Python;Keras Ã¥Â¿Â«Ã©ÂÂÃ¤Â¸ÂÃ¦ÂÂÃ¢ÂÂÃ¢ÂÂÃ¥ÂÂºÃ¤ÂºÂ Python Ã§ÂÂÃ¦Â·Â±Ã¥ÂºÂ¦Ã¥Â­Â¦Ã¤Â¹Â Ã¥Â®ÂÃ¦ÂÂ;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/gaoxuesong/KerasNotebook;0.8;['keras', 'sklearn', 'statsmodels'];['CNN', 'CV', 'LSTM', 'ML', 'NN', 'ReLu', 'VGG'];[];;2018-02-23 19:24:42;2020-12-20 10:40:12;24.0;0.383;KerasNotebook;
gclouduniverse;4;2019-03-12 18:42:15;Fully Configured Example of CI/CD For Notebooks On Top Of GCP;Fully Configured Example of CI/CD For Notebooks On Top Of GCP;;Jupyter Notebook;['Jupyter Notebook: 97.5%', 'Shell: 1.4%', 'Python: 1.1%'];;https://github.com/gclouduniverse/notebooks-ci-showcase;1.0;['sklearn'];['Regression'];['AI', 'DL', 'deep learning', 'train'];;2020-12-22 02:05:52;2020-12-19 22:54:47;21.0;0.371;notebooks-ci-showcase;
gdsaxton;0;2015-07-03 19:01:15;ipython notebooks for analyzing Twitter data;ipython notebooks for analyzing Twitter data;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/gdsaxton/PANDAS;1.0;['pattern', 'statsmodels'];['AI', 'Classification', 'DL', 'GAN', 'LSTM', 'Logistic Regression', 'ML', 'NER', 'NN', 'RL', 'Recommender', 'Regression'];['recommend'];;2020-11-10 23:08:03;2020-12-20 09:40:41;45.0;0.437;PANDAS;
gee-community;0;2020-02-05 17:08:56;Repository to place example notebooks for Deep Learning applications with TensorFlow and Earth Engine.;Repository to place example notebooks for Deep Learning applications with TensorFlow and Earth Engine.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/gee-community/ee-tensorflow-notebooks;1.0;['keras', 'pattern', 'sklearn', 'tensorflow'];['AI', 'CNN', 'DL', 'LSTM', 'NN', 'RNN', 'ReLu', 'U-Net', 'VGG'];['deep learning'];;2020-04-01 21:53:38;2020-12-19 23:26:50;41.0;0.429;ee-tensorflow-notebooks;
geohot;3;2019-04-04 18:47:27;Some ipython notebooks implementing AI algorithms;Some ipython notebooks implementing AI algorithms;;Jupyter Notebook;['Jupyter Notebook: 99.4%', 'Python: 0.6%'];;https://github.com/geohot/ai-notebooks;1.0;['keras', 'pytorch', 'tensorflow'];['AI', 'Classification', 'DL', 'GAN', 'NN', 'ReLu'];['ML'];;2020-12-02 09:31:18;2020-12-19 22:22:51;436.0;0.598;ai-notebooks;
GeoscienceAustralia;32;2018-02-27 08:26:30;Repository for Digital Earth Australia Jupyter Notebooks: tools and workflows for geospatial analysis with Open Data Cube and xarray;Repository for Digital Earth Australia Jupyter Notebooks: tools and workflows for geospatial analysis with Open Data Cube and xarray;;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Python: 0.3%'];Apache-2.0;https://github.com/GeoscienceAustralia/dea-notebooks;1.0;['pattern', 'skimage', 'sklearn', 'statsmodels'];['AI', 'CV', 'Classification', 'Clustering', 'Decision Tree', 'Image Segmentation', 'K-Means', 'Linear Regression', 'ML', 'RL', 'Recommender', 'Regression', 'Supervised Learning', 'Unsupervised learning'];['recommend'];;2020-12-18 00:24:24;2020-12-20 09:18:52;123.0;0.515;dea-notebooks;
GeostatisticsLessons;0;2018-02-10 21:53:27;These are python notebooks accompanying Lessons available at GeostatisticsLessons.com;These are python notebooks accompanying Lessons available at GeostatisticsLessons.com;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/GeostatisticsLessons/GeostatisticsLessonsNotebooks;1.0;['sklearn', 'statsmodels'];['Clustering'];['model'];;2020-06-24 16:42:11;2020-12-19 22:36:50;16.0;0.346;GeostatisticsLessonsNotebooks;
Germey;0;2017-03-21 13:45:53;Python3 WebSpider Notebooks;Python3 WebSpider Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Germey/Python3NoteBooks;0.8;['pattern'];['ML', 'RL'];[];;2017-04-06 09:30:18;2020-12-20 10:19:53;14.0;0.334;Python3NoteBooks;
getmrinal;0;2018-04-12 09:29:50;Karma of Humans is AI;Karma of Humans is AI;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/getmrinal/ML-Notebook;1.0;['nltk', 'sklearn', 'tensorflow'];['Classification', 'Decision Tree', 'KNN', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'Random Forest', 'ReLu', 'Regression'];['AI', 'KNN', 'ML', 'NN', 'classif', 'decision tree', 'gradient descent', 'linear regression', 'machine learning', 'naive bayes', 'predict', 'random forest', 'regression', 'text classification'];;2020-03-09 10:23:41;2020-12-20 09:22:22;13.0;0.327;ML-Notebook;
GFigure;0;2018-04-21 13:37:07;Python 2017  Python for Data Analysis, 2nd Edition;Ã¥ÂÂ©Ã§ÂÂ¨PythonÃ¨Â¿ÂÃ¨Â¡ÂÃ¦ÂÂ°Ã¦ÂÂ®Ã¥ÂÂÃ¦ÂÂ 2017 Ã§Â¬Â¬Ã¤ÂºÂÃ§ÂÂ Ã¯Â¼ÂPython for Data Analysis, 2nd EditionÃ¯Â¼ÂÃ¤Â¸Â­Ã¦ÂÂÃ§Â¿Â»Ã¨Â¯ÂÃ§Â¬ÂÃ¨Â®Â°;;Jupyter Notebook;['Jupyter Notebook: 57.7%', 'HTML: 42.3%'];;https://github.com/GFigure/pydata-notebook;1.0;['pattern', 'sklearn', 'statsmodels'];['AI', 'CV', 'Linear Regression', 'ML', 'NN', 'RL', 'Regression', 'Sentiment Analysis'];['model'];;2018-04-21 13:42:26;2020-12-20 10:41:19;23.0;0.379;pydata-notebook;
giswqs;2;2020-01-25 18:58:17;A collection of 360+ Jupyter Python notebook examples for using Google Earth Engine with interactive mapping;;;Jupyter Notebook;['Jupyter Notebook: 61.5%', 'Python: 36.6%', 'JavaScript: 1.9%'];MIT;https://github.com/giswqs/earthengine-py-notebooks;1.0;['pattern', 'tensorflow'];['AI', 'Classification', 'Clustering', 'DL', 'Linear Regression', 'ML', 'NN', 'RL', 'Random Forest', 'Regression'];['classif', 'clustering', 'detect', 'filter', 'fit', 'layer', 'linear regression', 'machine learning', 'recogn', 'regression'];;2020-12-06 13:44:25;2020-12-19 22:58:53;742.0;0.629;earthengine-py-notebooks;
giswqs;0;2015-11-27 01:07:48;Python notebooks;Python notebooks;;Python;['Python: 100.0%'];;https://github.com/giswqs/Learning-Python;0.8;['nltk', 'skimage', 'sklearn', 'theano', 'vocabulary'];['CV', 'Classification', 'Clustering', 'DL', 'NN', 'Regression'];[];;2015-11-27 01:09:08;2020-12-19 23:32:45;6.0;0.253;Learning-Python;
gitmagistere;15;2019-03-12 13:17:08;notebooks Jupyter pour m@gistere;notebooks Jupyter pour m@gistere;;Jupyter Notebook;['Jupyter Notebook: 99.5%', 'Other: 0.5%'];;https://github.com/gitmagistere/notebook;0.8;['Pillow', 'h2o', 'nltk'];['AI', 'ANN', 'CNN', 'CV', 'Classification', 'DL', 'GAN', 'GBM', 'GRU', 'KNN', 'ML', 'NER', 'NLG', 'NN', 'RL', 'RNN', 'ReLu', 'Regression', 'VGG'];[];;2021-01-03 00:35:21;2020-12-20 10:32:50;3.0;0.188;notebook;
glouppe;2;2015-06-24 12:09:48;Random fiddling stored in notebooks;Random fiddling stored in notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/glouppe/notebooks;0.8;['keras', 'pattern', 'sklearn', 'tensorflow', 'theano', 'xgboost'];['Bayesian', 'CV', 'Classification', 'Clustering', 'Decision Tree', 'GRU', 'LSTM', 'ML', 'NN', 'Random Forest', 'ReLu', 'Regression', 'Supervised Learning'];[];;2017-03-11 14:18:36;2020-12-20 09:33:36;22.0;0.375;notebooks;
GoogleCloudPlatform;4;2014-07-10 02:35:08;Sample iPython notebook with soccer predictions;Sample iPython notebook with soccer predictions;;Jupyter Notebook;['Jupyter Notebook: 77.4%', 'Python: 22.6%'];Apache-2.0;https://github.com/GoogleCloudPlatform/ipython-soccer-predictions;1.0;['pattern', 'sklearn', 'statsmodels'];['Logistic Regression', 'ML', 'NER', 'Regression'];['machine learning', 'model', 'predict', 'recommend'];;2017-12-20 00:53:26;2020-12-19 22:40:39;447.0;0.6;ipython-soccer-predictions;
googledatalab;15;2016-04-20 20:56:19;Google Cloud Datalab samples and documentation;;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Shell: 0.2%'];Apache-2.0;https://github.com/googledatalab/notebooks;0.8;['nltk', 'pattern', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'Anomaly Detection', 'Classification', 'DL', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'RL', 'RNN', 'ReLu', 'Recommender', 'Regression', 'Speech Recognition', 'Text Classification'];[];;2018-08-17 20:44:40;2020-12-19 23:10:36;328.0;0.581;notebooks;
gopala-kr;0;2018-01-15 16:12:28;A collection of practical handson jupyter notebooks on bigdata/ml/dl/rl/cv/nlp/ds/scipy/viz-lib/various command lines;A collection of practical handson jupyter notebooks on bigdata/ml/dl/rl/cv/nlp/ds/scipy/viz-lib/various command lines;;Jupyter Notebook;['Jupyter Notebook: 99.2%', 'Python: 0.6%', 'HTML: 0.2%', 'TeX: 0.0%', 'Mathematica: 0.0%', 'Lua: 0.0%'];MIT;https://github.com/gopala-kr/notebooks;1.0;['Pillow', 'SimpleCV', 'caffe', 'face_recognition', 'gensim', 'h2o', 'keras', 'mxnet', 'nltk', 'opencv-python', 'pattern', 'py-faster-rcnn', 'pytorch', 'skimage', 'sklearn', 'spacy', 'statsmodels', 'tensorflow', 'textblob', 'theano', 'tpot', 'vocabulary', 'xgboost'];['AI', 'ANN', 'AlexNet', 'Anomaly Detection', 'Bayesian', 'Boltzmann Machine', 'CNN', 'CV', 'Chatbot', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GAN', 'GBM', 'GRU', 'Gradient Boosting', 'Image Segmentation', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'Machine Translation', 'NER', 'NLG', 'NLP', 'NLU', 'NN', 'Naive Bayes', 'Object Detection', 'Pix2Pix', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Rectifier', 'Regression', 'ResNet', 'Sentiment Analysis', 'Speech Recognition', 'Supervised Learning', 'Support Vector Machines', 'Text Classification', 'U-Net', 'Unsupervised learning', 'VGG'];['AI', 'ANN', 'CNN', 'CV', 'DL', 'GAN', 'KNN', 'ML', 'NER', 'NLP', 'NN', 'RL', 'RNN', 'activation function', 'alexnet', 'anomaly', 'anomaly detection', 'artificial intelligence', 'artificial neural network', 'autoencoder', 'bayesian', 'boltzmann machine', 'classif', 'clustering', 'computer vision', 'convolutional neural network', 'decision tree', 'deep learning', 'detect', 'epoch', 'filter', 'fit', 'generative adversarial network', 'gradient boosting', 'gradient descent', 'ground truth', 'gru', 'hidden layer', 'image classification', 'image segmentation', 'input layer', 'k-means', 'k-nearest neighbor', 'label', 'layer', 'linear regression', 'logistic regression', 'loss', 'lstm', 'machine learning', 'machine translation', 'model', 'naive bayes', 'natural language processing', 'neural network', 'neuron', 'object detection', 'output layer', 'pix2pix', 'predict', 'propagation', 'random forest', 'rank', 'recogn', 'recommend', 'recommender', 'rectifier', 'recurrent neural network', 'regression', 'reinforcement learning', 'relu', 'resnet', 'reward', 'sentiment analysis', 'speech recognition', 'supervised learning', 'support vector machines', 'test data', 'text classification', 'train', 'training data', 'unlabeled', 'unsupervised learning', 'validation data', 'vgg'];;2018-03-08 14:43:59;2020-12-20 10:39:44;7.0;0.268;notebooks;
gpuopenanalytics;8;2017-05-08 01:37:25;Demo notebooks inside a docker for end-to-end examples;Demo notebooks inside a docker for end-to-end examples;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Shell: 0.1%'];;https://github.com/gpuopenanalytics/demo-docker;1.0;['h2o', 'sklearn', 'xgboost'];['AI', 'Classification', 'Clustering', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'Regression'];['AI', 'ML', 'RL', 'classif', 'layer', 'linear regression', 'model', 'predict', 'recogn', 'regression', 'train'];;2018-02-22 00:10:34;2020-12-19 22:26:28;116.0;0.51;demo-docker;
gsurma;0;2018-11-07 16:40:27;CNN image classifier implemented in Keras Notebook .;CNN image classifier implemented in Keras Notebook Ã°ÂÂÂ¼Ã¯Â¸Â.;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];MIT;https://github.com/gsurma/image_classifier;1.0;['keras'];['AI', 'CNN', 'Classification', 'NN', 'ReLu'];['CNN', 'NN', 'classif', 'convolutional neural network', 'layer', 'loss', 'model', 'neural network', 'train'];;2019-12-09 14:46:16;2020-12-20 09:53:49;134.0;0.521;image_classifier;
gururajang;0;2020-04-20 11:40:56;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/gururajang/Notebooks_SparkML;1.0;['h2o', 'nltk', 'pattern', 'sklearn', 'vocabulary'];['AutoML', 'Classification', 'Clustering', 'KNN', 'ML', 'NN', 'Regression'];['ML'];;2020-04-26 09:50:16;2020-12-19 23:56:20;26.0;0.39;Notebooks_SparkML;
hadrienj;0;2018-08-08 09:59:31;This is the notebook associated with the blog post:;This is the notebook associated with the blog post:;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/hadrienj/Preprocessing-for-deep-learning;1.0;['keras'];['CNN', 'CV', 'Classification', 'DL', 'ML', 'NN'];['classif', 'computer vision', 'convolutional neural network', 'deep learning', 'image classification', 'layer', 'machine learning', 'neural network', 'predict', 'recogn', 'train'];;2020-01-13 11:19:12;2020-12-19 22:40:03;70.0;0.472;Preprocessing-for-deep-learning;
hans;0;2014-09-17 16:12:55;Informal IPython experiments and tutorials. TensorFlow, machine learning/deep learning/RL, NLP applications.;Informal IPython experiments and tutorials. TensorFlow, machine learning/deep learning/RL, NLP applications.;;Jupyter Notebook;['Jupyter Notebook: 98.1%', 'Python: 1.9%'];;https://github.com/hans/ipython-notebooks;1.0;['stanza', 'tensorflow', 'theano', 'vocabulary'];['Classification', 'GRU', 'LSTM', 'Linear Regression', 'ML', 'NN', 'RNN', 'ReLu', 'Regression'];['NLP', 'NN', 'RNN', 'model', 'train'];;2017-02-15 22:44:47;2020-12-19 23:58:40;143.0;0.525;ipython-notebooks;
HanXiaoyang;0;2015-11-30 04:02:58;the data and ipython notebook of my attempt to solve the kaggle titanic problem;the data and ipython notebook of my attempt to solve the kaggle titanic problem;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/HanXiaoyang/Kaggle_Titanic;1.0;['sklearn'];['CV', 'Classification', 'KNN', 'Logistic Regression', 'ML', 'NN', 'Random Forest', 'Regression'];['train'];;2016-05-16 01:30:21;2020-12-19 23:12:26;359.0;0.586;Kaggle_Titanic;
hardmaru;2;2017-07-11 07:30:53;tutorial notebooks;tutorial notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/hardmaru/pytorch_notebooks;1.0;['pytorch', 'tensorflow'];['AI', 'Logistic Regression', 'ML', 'NN', 'ReLu', 'Regression'];['classif'];;2018-04-05 06:15:12;2020-12-19 23:33:48;323.0;0.58;pytorch_notebooks;
harusametime;2;2018-09-11 06:36:40;Amazon SageMaker examples with Japanese comments: SageMaker;Amazon SageMaker examples with Japanese comments: SageMakerÃ£ÂÂ®Ã£ÂÂµÃ£ÂÂ³Ã£ÂÂÃ£ÂÂ«Ã£ÂÂ§Ã£ÂÂ;;Jupyter Notebook;['Jupyter Notebook: 84.2%', 'Python: 14.4%', 'HTML: 1.1%', 'Shell: 0.3%'];;https://github.com/harusametime/sagemaker-notebooks;1.0;['caffe', 'keras', 'mxnet', 'pattern', 'pytorch', 'skimage', 'sklearn', 'tensorflow', 'vocabulary', 'xgboost'];['AI', 'ANN', 'Anomaly Detection', 'CNN', 'CV', 'Classification', 'DL', 'GAN', 'ML', 'NER', 'NLP', 'NN', 'Object Detection', 'Pix2Pix', 'RL', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Text Classification'];['AI', 'CNN', 'CV', 'ML', 'NER', 'NLP', 'NN', 'classif', 'epoch', 'fit', 'hidden layer', 'image classification', 'label', 'layer', 'loss', 'machine translation', 'model', 'named entity recognition', 'natural language processing', 'neural network', 'pix2pix', 'predict', 'recogn', 'recommend', 'resnet', 'train', 'training data'];;2020-11-06 05:09:28;2020-12-19 23:59:33;34.0;0.413;sagemaker-notebooks;
HazyResearch;3;2016-09-23 05:20:50;Public materials for the Fall 2016 offering of CS145;Public materials for the Fall 2016 offering of CS145;;Jupyter Notebook;['Jupyter Notebook: 86.2%', 'Python: 9.1%', 'JavaScript: 4.7%'];;https://github.com/HazyResearch/cs145-notebooks-2016;1.0;['pattern'];['AI', 'Classification', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'RL', 'Recommender', 'Regression'];['recommend'];;2017-10-05 21:41:57;2020-12-20 09:48:53;36.0;0.418;cs145-notebooks-2016;
Holy-Shine;0;2018-10-23 08:55:34;pytorchjupyter notebook;:notebook: pytorchÃ¦ÂÂÃ§Â¨ÂÃ¤Â¸ÂÃ©ÂÂ¢Ã§ÂÂÃ¤Â¸ÂÃ¤ÂºÂÃ¤Â¸ÂªÃ¤ÂºÂºÃ¦Â±ÂÃ¥ÂÂÃ§ÂÂjupyter notebook;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Holy-Shine/Pytorch-notebook;1.0;['pytorch'];['GRU', 'Machine Translation', 'NN', 'RNN', 'ReLu'];['NN', 'RNN'];;2018-10-25 08:52:56;2020-12-20 00:53:24;18.0;0.357;Pytorch-notebook;
huggingface;0;2018-06-11 09:41:15;100 Times Faster Natural Language Processing in Python - iPython notebook;Ã°ÂÂÂ100 Times Faster Natural Language Processing in Python - iPython notebook;;HTML;['HTML: 76.8%', 'Jupyter Notebook: 23.2%'];;https://github.com/huggingface/100-times-faster-nlp;1.0;['pytorch', 'spacy', 'vocabulary'];['NLP', 'NN'];['natural language processing'];;2018-06-12 07:51:49;2020-12-20 10:32:39;311.0;0.577;100-times-faster-nlp;
huggingface;3;2020-06-15 13:55:11;Notebooks using the Hugging Face libraries;Notebooks using the Hugging Face libraries Ã°ÂÂ¤Â;;Jupyter Notebook;['Jupyter Notebook: 94.2%', 'Python: 5.8%'];Apache-2.0;https://github.com/huggingface/notebooks;0.8;['keras', 'nltk', 'pattern', 'pytorch', 'sklearn', 'spacy', 'tensorflow', 'vocabulary'];['AI', 'CNN', 'Classification', 'ML', 'Machine Translation', 'NER', 'NLG', 'NLP', 'NLU', 'NN', 'RL', 'Recommender', 'Regression', 'Sentiment Analysis', 'Text Classification'];[];;2020-12-23 15:25:39;2020-12-20 10:39:48;112.0;0.508;notebooks;
Hvass-Labs;0;2018-07-22 08:14:46;Research in investment finance with Python Notebooks;Research in investment finance with Python Notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];MIT;https://github.com/Hvass-Labs/FinanceOps;1.0;['sklearn', 'statsmodels'];['AI', 'ANN', 'Linear Regression', 'NN', 'Recommender', 'Regression'];['model', 'recommend'];;2020-12-17 15:03:00;2020-12-19 22:44:01;324.0;0.58;FinanceOps;
hyperspy;13;2014-06-18 11:05:40;HyperSpy IPython Notebooks demos;HyperSpy IPython Notebooks demos;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/hyperspy/hyperspy-demos;1.0;['pattern', 'skimage'];['ML', 'RL', 'Recommender'];['model', 'recommend'];;2020-01-31 08:24:21;2020-12-20 09:11:41;29.0;0.4;hyperspy-demos;
ianlewis;0;2016-07-22 13:57:52;Some Tensorflow examples and Jupyter notebooks;Some Tensorflow examples and Jupyter notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/ianlewis/tensorflow-examples;0.8;['tensorflow', 'theano'];['CNN', 'Classification', 'DL', 'Logistic Regression', 'ML', 'NN', 'ReLu', 'Regression'];[];;2016-07-22 14:02:32;2020-12-20 09:12:08;19.0;0.362;tensorflow-examples;
ianmcloughlin;0;2018-04-18 16:39:27;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Unlicense;https://github.com/ianmcloughlin/jupyter-teaching-notebooks;0.8;['Pillow', 'keras', 'sklearn', 'statsmodels', 'tensorflow'];['AI', 'ANN', 'Classification', 'K-Means', 'KNN', 'Linear Regression', 'ML', 'NN', 'RL', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning'];[];;2020-12-02 22:28:23;2020-12-19 23:45:05;7.0;0.268;jupyter-teaching-notebooks;
iArunava;2;2018-01-03 04:38:04;Jupyter NoteBooks to get you boosted with the basics of python with hands-on-practice.;Jupyter NoteBooks to get you boosted with the basics of python with hands-on-practice.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/iArunava/Python-TheNoTheoryGuide;0.8;['sklearn'];['CV', 'RL'];[];;2019-06-19 10:00:22;2020-12-20 09:50:54;91.0;0.493;Python-TheNoTheoryGuide;
IBM;8;2018-02-06 22:49:52;Run Node.js code in Python notebooks;Run Node.js code in Python notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/IBM/nodejs-in-notebooks;1.0;['pattern'];['ML', 'RL', 'Recommender'];['AI', 'NER', 'RL', 'fit', 'layer', 'recommend'];;2019-04-22 17:23:18;2020-12-20 09:11:47;85.0;0.487;nodejs-in-notebooks;
IBM;10;2017-04-20 16:09:54;A jupyter notebook that provides analysis for StarCraft 2 replays;A jupyter notebook that provides analysis for StarCraft 2 replays;;Jupyter Notebook;['Jupyter Notebook: 98.0%', 'Shell: 2.0%'];Apache-2.0;https://github.com/IBM/starcraft2-replay-analysis;1.0;['pattern'];['AI', 'CV'];['AI', 'NER', 'RL', 'detect', 'fit', 'layer', 'machine learning', 'recogn', 'recommend'];;2019-06-24 18:45:44;2020-12-20 10:58:43;88.0;0.49;starcraft2-replay-analysis;
ibm-et;4;2015-01-07 15:15:17;Sample Jupyter notebooks;Sample Jupyter notebooks;;HTML;['HTML: 100.0%'];MIT;https://github.com/ibm-et/jupyter-samples;1.0;['pattern', 'sklearn', 'statsmodels'];['AI', 'CV', 'Classification', 'Clustering', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'RL', 'Recommender', 'Regression'];['ML', 'fit', 'layer', 'linear regression', 'model', 'predict', 'regression'];;2015-11-24 22:30:46;2020-12-20 09:19:27;18.0;0.357;jupyter-samples;
IBMDataScience;0;2016-06-02 17:21:48;PySpark Notebook and Shiny App for Demo;PySpark Notebook and  Shiny App for Demo;;Jupyter Notebook;['Jupyter Notebook: 99.4%', 'R: 0.6%'];;https://github.com/IBMDataScience/SparkSummitDemo;1.0;['sklearn'];['Classification', 'Clustering', 'K-Means', 'Linear Regression', 'Logistic Regression', 'Regression'];['RL', 'clustering', 'fit', 'k-means', 'linear regression', 'model', 'regression'];;2017-03-24 21:41:03;2020-12-20 09:11:55;36.0;0.418;SparkSummitDemo;
ibrahimsharaf;5;2017-03-07 19:41:34;Long(er) text representation and classification using Doc2Vec embeddings;:notebook: Long(er) text representation and classification using Doc2Vec embeddings;;Python;['Python: 100.0%'];MIT;https://github.com/ibrahimsharaf/doc2vec;1.0;['gensim', 'sklearn', 'vocabulary'];['AI', 'Classification', 'Regression'];['classif', 'deep learning', 'logistic regression', 'model', 'regression', 'sentiment analysis', 'text classification'];;2020-09-27 14:14:08;2020-12-19 22:36:23;90.0;0.492;doc2vec;
IDR;9;2016-09-30 09:37:33;Jupyter Notebooks for the Image Data Resource;Jupyter Notebooks for the Image Data Resource;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/IDR/idr-notebooks;1.0;['pattern', 'skimage', 'sklearn'];['AI', 'ANN', 'Clustering', 'ML', 'NN', 'RL'];['clustering', 'label'];;2020-12-19 11:54:16;2020-12-19 22:26:13;10.0;0.302;idr-notebooks;
inkandswitch;4;2015-08-19 14:32:20;IPython notebook-compatible live coding experiment;IPython notebook-compatible live coding experiment;;Python;['Python: 95.4%', 'Jupyter Notebook: 2.2%', 'JavaScript: 2.2%', 'Go: 0.1%', 'CSS: 0.1%', 'HTML: 0.0%'];;https://github.com/inkandswitch/livebook;1.0;['pattern', 'stanza'];['AI', 'ANN', 'Bayesian', 'CV', 'Classification', 'DL', 'GAN', 'GRU', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'RL', 'ReLu', 'Recommender', 'Regression', 'VGG'];['AI', 'ML', 'NER', 'NN', 'RL', 'fit', 'model', 'recommend'];;2020-04-29 22:51:55;2020-12-20 10:16:27;188.0;0.544;livebook;
InsightDataLabs;0;2015-10-09 14:23:17;;;;;[];;https://github.com/InsightDataLabs/ipython-notebooks;0.8;['sklearn'];['Classification'];[];;2015-10-20 21:45:12;2020-12-19 22:23:59;30.0;0.403;ipython-notebooks;
InsightLab;33;2016-09-01 11:43:29;Jupyter notebooks from UFC data science course;:mortar_board: Jupyter notebooks from UFC data science course;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/InsightLab/data-science-cookbook;1.0;['keras', 'pattern', 'sklearn'];['AI', 'Classification', 'Clustering', 'GRU', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'Recommender', 'Regression'];['clustering', 'neural network', 'supervised learning', 'unsupervised learning'];;2020-08-27 18:53:52;2020-12-20 10:41:53;60.0;0.46;data-science-cookbook;
InsightSoftwareConsortium;11;2013-01-07 20:37:52;Jupyter notebooks for learning how to use SimpleITK;Jupyter notebooks for learning how to use SimpleITK;;Jupyter Notebook;['Jupyter Notebook: 85.2%', 'Python: 13.8%', 'Other: 1.0%'];Apache-2.0;https://github.com/InsightSoftwareConsortium/SimpleITK-Notebooks;1.0;['SimpleITK', 'pattern'];['AI', 'Classification', 'DL', 'Image Segmentation', 'ML', 'RL', 'Recommender', 'VGG'];['AI', 'ML', 'layer', 'recommend', 'train'];;2020-12-02 20:45:36;2020-12-19 23:28:22;469.0;0.603;SimpleITK-Notebooks;
ioos;8;2016-05-10 20:45:16;Notebook demonstrations and examples;Notebook demonstrations and examples;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/ioos/notebooks_demos;1.0;['vocabulary'];['AI', 'ML', 'NER', 'RL', 'Recommender'];['AI', 'CV', 'recommend'];;2020-12-09 00:55:59;2020-12-19 23:29:22;16.0;0.346;notebooks_demos;
ipython;718;2010-05-10 04:46:06;Official repository for IPython itself. Other repos in the IPython organization contain things like the website, documentation builds, etc.;Official repository for IPython itself. Other repos in the IPython organization contain things like the website, documentation builds, etc.;;Python;['Python: 70.8%', 'Jupyter Notebook: 28.8%', 'Other: 0.4%'];;https://github.com/ipython/ipython;1.0;['Pillow', 'pattern'];['AI', 'ANN', 'Classification', 'DL', 'GRU', 'ML', 'NER', 'NN', 'RL', 'Recommender', 'Regression'];['label', 'regression'];;2021-01-01 22:40:08;2020-12-20 09:45:07;14587.0;0.763;ipython;
ipython-contrib;102;2013-07-13 17:05:16;A collection of various notebook extensions for Jupyter;A collection of various notebook extensions for Jupyter;;JavaScript;['JavaScript: 53.9%', 'HTML: 34.8%', 'Python: 7.0%', 'TeX: 2.1%', 'CSS: 1.1%', 'Jupyter Notebook: 0.9%', 'Other: 0.2%'];;https://github.com/ipython-contrib/jupyter_contrib_nbextensions;1.0;['Pillow', 'pattern'];['Classification', 'ML'];['AI', 'ML', 'NN', 'RL', 'detect', 'filter', 'fit', 'label', 'model', 'recogn', 'recommend', 'train'];;2020-12-20 13:02:09;2020-12-20 09:33:11;4458.0;0.716;jupyter_contrib_nbextensions;
jakemdrew;0;2019-08-11 04:59:36;Class Repository for Machine Learning I - 7331;Class Repository for Machine Learning I - 7331;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/jakemdrew/DataMiningNotebooks;1.0;['skimage', 'sklearn'];['Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'Gradient Boosting', 'Image Segmentation', 'K-Means', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'Recommender', 'Regression', 'Support Vector Machines'];['machine learning'];;2019-08-11 05:08:14;2020-12-19 22:36:33;15.0;0.34;DataMiningNotebooks;
jakevdp;16;2016-08-10 14:24:36;Python Data Science Handbook: full text in Jupyter Notebooks;Python Data Science Handbook: full text in Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Other: 0.3%'];;https://github.com/jakevdp/PythonDataScienceHandbook;1.0;['pattern', 'skimage', 'sklearn', 'statsmodels', 'tensorflow', 'vocabulary'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'K-Means', 'KNN', 'Linear Regression', 'ML', 'NN', 'Naive Bayes', 'Object Detection', 'RL', 'Random Forest', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines', 'Text Classification', 'Unsupervised learning'];['ML'];;2020-12-15 05:12:38;2020-12-20 10:24:50;27443.0;0.784;PythonDataScienceHandbook;
jakevdp;5;2016-07-27 14:39:44;"The Jupyter Notebooks behind my OReilly report, ""A Whirlwind Tour of Python""";"The Jupyter Notebooks behind my OReilly report, ""A Whirlwind Tour of Python""";;Jupyter Notebook;['Jupyter Notebook: 91.5%', 'CSS: 3.2%', 'HTML: 2.6%', 'Python: 1.8%', 'Makefile: 0.9%'];CC0-1.0;https://github.com/jakevdp/WhirlwindTourOfPython;0.8;['pattern', 'statsmodels'];['CV', 'DL', 'ML', 'RL', 'Recommender'];[];;2020-11-23 23:19:19;2020-12-20 10:58:48;2607.0;0.693;WhirlwindTourOfPython;
jalammar;4;2016-12-15 07:39:51;SImple notebook and dataset to demonstrate classification in TensorFlow;SImple notebook and dataset to demonstrate classification in TensorFlow;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/jalammar/simpleTensorFlowClassificationExample;1.0;['tensorflow'];['Classification', 'NN'];['machine learning', 'neural network', 'neuron'];;2020-08-28 08:03:33;2020-12-19 23:30:50;89.0;0.491;simpleTensorFlowClassificationExample;
jamesdbrock;2;2019-06-25 08:07:32;Jupyter adaptation of Learn You a Haskell for Great Good!;Jupyter adaptation of Learn You a Haskell for Great Good!;;Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Other: 0.4%'];;https://github.com/jamesdbrock/learn-you-a-haskell-notebook;1.0;['pattern'];['GAN', 'ML', 'ReLu'];['AI', 'CV'];;2020-12-10 07:48:31;2020-12-20 10:23:39;58.0;0.458;learn-you-a-haskell-notebook;
JasonKessler;0;2017-07-04 22:54:21;Notebooks for the Seattle PyData 2017 talk on Scattertext;Notebooks for the Seattle PyData 2017 talk on Scattertext;;HTML;['HTML: 99.6%', 'Jupyter Notebook: 0.4%'];;https://github.com/JasonKessler/Scattertext-PyData;0.8;['gensim', 'sklearn', 'spacy'];['Logistic Regression', 'ML', 'Recommender', 'Regression'];[];;2018-01-12 01:48:34;2020-12-20 09:10:39;132.0;0.52;Scattertext-PyData;
jasonstrimpel;0;2016-01-02 09:12:46;Notebook for 19 January PyData Singapore Meetup;Notebook for 19 January PyData Singapore Meetup;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/jasonstrimpel/PyData-Meetup;0.7;['vocabulary'];[];['model'];;2018-07-11 07:40:14;2020-12-19 22:20:30;47.0;0.44;PyData-Meetup;
jayboxyz;0;2018-10-08 01:08:39;deepleaning notes.;:notebook: deepleaning notes.;;Jupyter Notebook;['Jupyter Notebook: 94.2%', 'Python: 5.8%'];;https://github.com/jayboxyz/deeplearning_cv_notes;1.0;['keras', 'pattern', 'sklearn', 'tensorflow', 'vocabulary'];['AlexNet', 'CNN', 'CV', 'Classification', 'GRU', 'LSTM', 'NN', 'Object Detection', 'RL', 'RNN', 'ReLu', 'ResNet', 'Text Classification', 'VGG'];['AI', 'AutoML', 'CNN', 'CV', 'DL', 'GAN', 'ML', 'NLP', 'NN', 'RL', 'RNN', 'alexnet', 'artificial intelligence', 'automated machine learning', 'classif', 'clustering', 'computer vision', 'convolutional neural network', 'deep learning', 'detect', 'epoch', 'filter', 'fit', 'gradient descent', 'ground truth', 'gru', 'hidden layer', 'image classification', 'image segmentation', 'input layer', 'k-means', 'label', 'layer', 'logistic regression', 'loss', 'lstm', 'machine learning', 'model', 'neural network', 'neuron', 'object detection', 'predict', 'propagation', 'random forest', 'rank', 'recogn', 'recommend', 'recurrent neural network', 'regression', 'reinforcement learning', 'relu', 'resnet', 'text classification', 'train', 'training data', 'u-net', 'validation data', 'vgg'];;2020-04-04 03:25:02;2020-12-20 09:37:00;217.0;0.554;deeplearning_cv_notes;
jbagnato;0;2017-11-27 23:03:32;Cdigo Python, Jupyter Notebooks, archivos csv con ejemplos para los ejercicios del Blog aprendemachinelearning.com y del libro Aprende Machine Learning en Espaol;CÃÂ³digo Python, Jupyter Notebooks, archivos csv con ejemplos para los ejercicios del Blog aprendemachinelearning.com;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Other: 0.2%'];GPL-3.0;https://github.com/jbagnato/machine-learning;1.0;['gensim', 'imutils', 'keras', 'nltk', 'opencv-python', 'py-faster-rcnn', 'skimage', 'sklearn', 'statsmodels', 'tensorflow', 'textblob', 'theano', 'vocabulary'];['CNN', 'Classification', 'GRU', 'K-Means', 'KNN', 'LSTM', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'Object Detection', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Sentiment Analysis', 'Supervised Learning'];['CNN', 'ML', 'NLP', 'NN', 'anomaly', 'anomaly detection', 'clustering', 'convolutional neural network', 'detect', 'k-means', 'machine learning', 'model', 'naive bayes', 'neural network', 'neuron', 'random forest'];;2020-12-27 10:38:17;2020-12-20 10:12:05;162.0;0.534;machine-learning;
jbwhit;0;2016-01-20 17:26:33;Jupyter Notebook tips and tricks for the Berkeley Institute for Data Science lecture. http://bids.berkeley.edu/;Jupyter Notebook tips and tricks for the Berkeley Institute for Data Science lecture. http://bids.berkeley.edu/;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/jbwhit/berkeley-jupyter-notebook;0.8;['sklearn'];['ML'];[];;2016-01-20 21:03:36;2020-12-19 22:28:02;22.0;0.375;berkeley-jupyter-notebook;
jdwittenauer;4;2014-06-01 00:14:43;A collection of IPython notebooks covering various topics.;A collection of IPython notebooks covering various topics.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/jdwittenauer/ipython-notebooks;1.0;['gensim', 'keras', 'nltk', 'pattern', 'pytorch', 'sklearn', 'spacy', 'statsmodels', 'tensorflow', 'vocabulary'];['AI', 'Anomaly Detection', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GAN', 'GRU', 'K-Means', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'RL', 'RNN', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Sentiment Analysis', 'Supervised Learning', 'Support Vector Machines'];['ML', 'NN', 'RNN', 'anomaly', 'anomaly detection', 'classif', 'clustering', 'deep learning', 'detect', 'generative adversarial network', 'image classification', 'k-means', 'label', 'linear regression', 'logistic regression', 'lstm', 'machine learning', 'model', 'neural network', 'predict', 'recommend', 'recommender', 'regression', 'support vector machines'];;2020-10-19 12:44:35;2020-12-19 23:09:42;2431.0;0.689;ipython-notebooks;
JeanKossaifi;7;2017-08-05 01:30:17;Tensor methods in Python with TensorLy;Tensor methods in Python with TensorLy;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/JeanKossaifi/tensorly-notebooks;0.8;['mxnet', 'pytorch', 'tensorflow'];['CNN', 'Classification', 'NN', 'RL', 'ReLu', 'Regression', 'VGG'];[];;2020-09-02 15:09:06;2020-12-19 23:38:17;323.0;0.58;tensorly-notebooks;
jerry-git;6;2018-05-01 11:46:24;Jupyter notebooks for teaching/learning Python 3;;;Python;['Python: 100.0%'];MIT;https://github.com/jerry-git/learn-python3;0.8;['pattern'];['AI', 'ML', 'Recommender', 'Regression'];[];;2020-11-12 13:12:06;2020-12-19 23:28:01;3411.0;0.705;learn-python3;
jessepisel;0;2019-01-25 21:37:29;some python notebooks for fun;some python notebooks for fun;;Lasso;['Lasso: 81.6%', 'Jupyter Notebook: 18.4%'];Unlicense;https://github.com/jessepisel/5minutesofpython;1.0;['sklearn'];['CV', 'Classification', 'DL', 'Decision Tree', 'Linear Regression', 'ML', 'Random Forest', 'Regression'];['machine learning'];;2019-11-14 14:43:19;2020-12-20 09:52:13;57.0;0.456;5minutesofpython;
jessstringham;0;2018-05-24 08:41:33;Jupyter notebooks for my blog;Jupyter notebooks for my blog;;Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Python: 0.4%'];MIT;https://github.com/jessstringham/notebooks;0.8;['keras', 'nltk', 'pattern', 'sklearn', 'spacy', 'tensorflow', 'theano'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'Machine Translation', 'NLP', 'NN', 'Naive Bayes', 'RL', 'ReLu', 'Regression', 'VGG'];[];;2020-01-06 16:24:39;2020-12-20 10:23:55;16.0;0.346;notebooks;
jg8610;0;2016-07-12 14:33:05;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/jg8610/multi-task-part-1-notebook;0.8;['tensorflow'];['ReLu'];[];;2016-07-12 14:33:55;2020-12-20 10:22:25;41.0;0.429;multi-task-part-1-notebook;
jldowns;0;2017-04-12 20:47:48;A walkthrough of some Google Earth Engine Features, as well as using the data in TensorFlow;A walkthrough of some Google Earth Engine Features, as well as using the data in TensorFlow;;Jupyter Notebook;['Jupyter Notebook: 86.8%', 'Python: 12.6%', 'Shell: 0.6%'];;https://github.com/jldowns/google_earth_engine_notebook;1.0;['pattern', 'tensorflow', 'vocabulary'];['AI', 'CNN', 'CV', 'Classification', 'Clustering', 'K-Means', 'ML', 'NN', 'RL', 'ReLu', 'Supervised Learning', 'Unsupervised learning'];['autoencoder', 'clustering', 'machine learning'];;2017-05-15 21:49:56;2020-12-19 22:22:45;72.0;0.475;google_earth_engine_notebook;
jmportilla;3;2015-04-27 22:44:40;Notebooks for Course;Notebooks for Course;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/jmportilla/Udemy---Machine-Learning;0.8;['nltk', 'pattern', 'sklearn', 'statsmodels', 'vocabulary'];['Classification', 'Decision Tree', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'Random Forest', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines'];[];;2016-07-06 23:58:38;2020-12-20 09:41:30;204.0;0.55;Udemy---Machine-Learning;
jmportilla;0;2015-02-06 22:56:33;My udemy notebooks;;;;[];;https://github.com/jmportilla/Udemy-notes;0.8;['pattern'];['Classification', 'GBM', 'ML', 'Recommender'];[];;2019-11-12 04:43:47;2020-12-20 09:11:27;459.0;0.601;Udemy-notes;
jmschrei;0;2017-09-14 22:20:40;Various notebooks and tutorials on subjects of interest.;Various notebooks and tutorials on subjects of interest.;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];;https://github.com/jmschrei/notebooks;0.8;['keras', 'mxnet', 'sklearn'];['CV', 'Classification', 'DL', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning'];[];;2020-06-09 19:30:36;2020-12-20 09:18:59;36.0;0.418;notebooks;
jmsteinw;0;2015-03-17 20:41:49;This is where all of the IPython Notebooks will be kept from the blog;This is where all of the IPython Notebooks will be kept from the blog;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/jmsteinw/Notebooks;0.8;['nltk', 'pattern', 'sklearn', 'xgboost'];['AI', 'CV', 'Classification', 'DL', 'GBM', 'Gradient Boosting', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'Recommender', 'Regression', 'Text Classification'];[];;2017-12-05 18:38:30;2020-12-19 22:42:32;52.0;0.449;Notebooks;
JohnLaTwC;3;2018-11-06 14:37:40;Shared Blogs and Notebooks;Shared Blogs and Notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/JohnLaTwC/Shared;1.0;['pattern'];['AI', 'DL', 'ML', 'RL'];['DL', 'RL', 'clustering', 'detect', 'filter', 'fit', 'layer', 'loss', 'machine learning', 'model', 'reward', 'train'];;2020-11-24 21:33:33;2020-12-19 23:17:54;243.0;0.562;Shared;
jonkrohn;0;2019-03-29 19:54:41;TensorFlow 2.x Jupyter Notebooks;TensorFlow 2.x Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/jonkrohn/tf2;1.0;['keras', 'tensorflow'];['Classification', 'LSTM', 'NN', 'ReLu'];['deep learning'];;2020-04-08 21:54:28;2020-12-19 22:22:34;42.0;0.431;tf2;
jonmmease;0;2018-06-13 13:52:00;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/jonmmease/plotly_ipywidget_notebooks;0.8;['sklearn'];['ML'];[];;2020-05-01 14:16:35;2020-12-20 09:32:53;79.0;0.482;plotly_ipywidget_notebooks;
jpcolino;0;2015-07-18 14:45:57;Set of Jupyter (iPython) notebooks (and few pdf-presentations) about things that I am interested on, like Computer Science, Statistics and Machine-Learning, Artificial Intelligence (AI), Financial Engineering, Optimization, Stochastic Modelling, Time-Series forecasting, Science in general... and more.;Set of Jupyter (iPython) notebooks (and few pdf-presentations) about things that I am interested on, like Computer Science, Statistics and Machine-Learning, Artificial Intelligence (AI), Financial Engineering, Optimization, Stochastic Modelling, Time-Series forecasting, Science in general... and more.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-3.0;https://github.com/jpcolino/IPython_notebooks;1.0;['keras', 'pattern', 'sklearn', 'tensorflow', 'theano', 'vocabulary'];['AI', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GRU', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning', 'Unsupervised learning'];['AI', 'CV', 'NN', 'RNN', 'artificial intelligence', 'classif', 'clustering', 'detect', 'filter', 'gru', 'k-means', 'lstm', 'machine learning', 'model', 'neural network', 'regression', 'support vector machines'];;2020-02-16 16:25:40;2020-12-19 22:22:32;40.0;0.427;IPython_notebooks;
jpmorganchase;9;2018-03-17 21:38:11;Support for jupyter notebook templates in jupyterlab;Support for jupyter notebook templates in jupyterlab;;TypeScript;['TypeScript: 73.1%', 'Python: 12.3%', 'JavaScript: 9.1%', 'Jupyter Notebook: 2.9%', 'Makefile: 2.6%'];Apache-2.0;https://github.com/jpmorganchase/jupyterlab_templates;1.0;['pattern'];['Classification', 'ML'];['recommend'];;2021-01-01 23:31:05;2020-12-19 23:12:40;214.0;0.553;jupyterlab_templates;
jrjohansson;18;2012-11-29 11:43:34;Lectures on scientific computing with python, as IPython notebooks.;Lectures on scientific computing with python, as IPython notebooks.;;Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Other: 0.4%'];;https://github.com/jrjohansson/scientific-python-lectures;0.8;['pattern', 'statsmodels'];['ML', 'RL', 'Recommender'];[];;2020-03-04 20:10:39;2020-12-20 09:33:19;2967.0;0.699;scientific-python-lectures;
jstac;2;2015-08-12 20:57:42;Code and notebooks for Econometric Theory;Code and notebooks for Econometric Theory;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/jstac/econometrics;0.8;['sklearn', 'statsmodels'];['Bayesian', 'Linear Regression', 'RL', 'Regression'];[];;2016-09-19 01:09:34;2020-12-19 23:18:17;65.0;0.467;econometrics;
jtpio;2;2017-12-10 11:17:44;[UNMAINTAINED] p5.js in the Classic Jupyter Notebook with Jupyter Widgets;[UNMAINTAINED] p5.js in the Classic Jupyter Notebook with Jupyter Widgets;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/jtpio/p5-jupyter-notebook;0.8;['pattern'];['ML'];[];;2020-03-21 18:08:20;2020-12-19 22:25:56;35.0;0.416;p5-jupyter-notebook;
juanklopper;0;2016-08-28 07:17:02;Jupyter notebooks for the Julia Scientific Programming course on Coursera;Jupyter notebooks for the Julia Scientific Programming course on Coursera;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'CSS: 0.1%'];;https://github.com/juanklopper/JuliaCourseNotebooks;0.8;['pattern'];['ML'];[];;2019-05-31 17:33:54;2020-12-20 10:42:33;187.0;0.544;JuliaCourseNotebooks;
JuliaOpt;11;2015-01-24 06:24:32;A collection of IJulia notebooks related to optimization;A collection of IJulia notebooks related to optimization;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/JuliaOpt/juliaopt-notebooks;0.8;['pattern'];['AI', 'ML', 'NLP', 'Recommender'];[];;2020-04-11 02:22:27;2020-12-20 09:19:58;81.0;0.484;juliaopt-notebooks;
julienr;6;2015-03-30 16:30:59;Various ipython notebooks;;;Jupyter Notebook;['Jupyter Notebook: 82.9%', 'HTML: 17.1%'];;https://github.com/julienr/ipynb_playground;1.0;['keras', 'sklearn', 'tensorflow', 'theano'];['CNN', 'CV', 'Classification', 'GRU', 'LSTM', 'NN', 'RL', 'RNN', 'Random Forest', 'ReLu'];['CNN', 'NN', 'autoencoder', 'deep learning', 'machine learning', 'train'];;2018-01-27 18:42:04;2020-12-20 09:23:43;1530.0;0.667;ipynb_playground;
jupyter;160;2015-07-15 15:30:00;Ready-to-run Docker images containing Jupyter applications;Ready-to-run Docker images containing Jupyter applications;;Python;['Python: 34.1%', 'Jupyter Notebook: 23.3%', 'Shell: 19.6%', 'Dockerfile: 17.3%', 'Makefile: 5.7%'];;https://github.com/jupyter/docker-stacks;1.0;['pattern', 'skimage', 'sklearn', 'tensorflow'];['AI', 'ML', 'NN'];['AI', 'DL', 'ML', 'NER', 'NN', 'RL', 'deep learning', 'filter', 'fit', 'label', 'layer', 'loss', 'machine learning', 'model', 'recommend', 'train'];;2021-01-02 19:35:00;2020-12-20 11:01:16;5595.0;0.726;docker-stacks;
jupyter;211;2015-04-09 06:58:23;Jupyter Notebook Conversion;;;Python;['Python: 29.1%', 'Jupyter Notebook: 25.8%', 'HTML: 25.7%', 'CSS: 19.4%'];;https://github.com/jupyter/nbconvert;1.0;['pattern'];['Classification', 'DL', 'ML', 'RL', 'Recommender'];['ML', 'fit', 'label', 'recommend', 'regression'];;2020-12-30 05:02:15;2020-12-20 11:01:24;1055.0;0.648;nbconvert;
jupyter;23;2015-11-16 09:25:53;Tools for diffing and merging of Jupyter notebooks.;Tools for diffing and merging of Jupyter notebooks.;;Python;['Python: 42.1%', 'TypeScript: 38.0%', 'Jupyter Notebook: 16.3%', 'CSS: 2.4%', 'Other: 1.2%'];;https://github.com/jupyter/nbdime;1.0;['pattern'];['AI', 'Classification', 'ML', 'NN', 'RL'];['AI', 'ML', 'NER', 'RL', 'filter', 'fit', 'loss', 'model', 'regression'];;2020-12-18 13:35:56;2020-12-20 10:21:22;1885.0;0.677;nbdime;
jupyter;73;2015-04-09 01:07:29;Reference implementation of the Jupyter Notebook format;Reference implementation of the Jupyter Notebook format;;Python;['Python: 58.6%', 'Jupyter Notebook: 41.4%'];;https://github.com/jupyter/nbformat;1.0;['nltk', 'pattern'];['Classification', 'ML', 'RL'];['AI', 'NER', 'fit', 'loss', 'model'];;2020-12-30 07:09:20;2020-12-20 10:59:28;129.0;0.518;nbformat;
jupyter;68;2014-09-13 03:27:36;A system for assigning and grading notebooks;A system for assigning and grading notebooks;;Python;['Python: 34.3%', 'HTML: 30.8%', 'Jupyter Notebook: 25.5%', 'JavaScript: 7.7%', 'Smarty: 1.0%', 'CSS: 0.2%', 'Other: 0.5%'];BSD-3-Clause;https://github.com/jupyter/nbgrader;1.0;['pattern'];['AI', 'Classification', 'ML', 'RL', 'Recommender'];['ML', 'fit', 'gru', 'model', 'recommend'];;2020-12-15 22:30:52;2020-12-20 09:12:07;971.0;0.644;nbgrader;
jupyter;75;2012-08-05 11:42:33;nbconvert as a web service: Render Jupyter Notebooks as static web pages;nbconvert as a web service: Render Jupyter Notebooks as static web pages;;Python;['Python: 88.1%', 'HTML: 7.6%', 'Less: 1.8%', 'CSS: 1.3%', 'Smarty: 0.7%', 'Dockerfile: 0.4%', 'Other: 0.1%'];;https://github.com/jupyter/nbviewer;1.0;['pattern'];['Classification', 'DL', 'ML', 'NN', 'RL'];['ML', 'RL', 'detect', 'filter', 'label', 'recommend', 'regression'];;2020-12-02 09:13:41;2020-12-20 11:02:36;1773.0;0.674;nbviewer;
jupyter;498;2015-04-09 06:58:03;Jupyter Interactive Notebook;Jupyter Interactive Notebook;;JavaScript;['JavaScript: 35.1%', 'Python: 30.2%', 'Jupyter Notebook: 30.0%', 'Less: 2.5%', 'HTML: 2.2%', 'CSS: 0.0%'];;https://github.com/jupyter/notebook;1.0;['pattern', 'stanza'];['AI', 'Classification', 'DL', 'ML', 'NER', 'NN', 'RL', 'Recommender'];['ML', 'label', 'recommend', 'regression'];;2021-01-01 15:39:47;2020-12-20 10:09:18;7907.0;0.74;notebook;
jupyter;27;2014-09-16 20:49:42;Creates temporary Jupyter Notebook servers using Docker containers. [DEPRECATED - See BinderHub project];Creates temporary Jupyter Notebook servers using Docker containers. [DEPRECATED - See BinderHub project];;JavaScript;['JavaScript: 74.6%', 'Python: 19.3%', 'HTML: 2.6%', 'CSS: 2.1%', 'Makefile: 0.7%', 'Shell: 0.5%', 'Roff: 0.2%'];BSD-3-Clause;https://github.com/jupyter/tmpnb;1.0;['pattern'];['NN'];['fit', 'layer', 'recommend', 'train'];;2018-01-24 14:48:14;2020-12-20 10:31:43;529.0;0.61;tmpnb;
jupyter-widgets;153;2015-04-17 20:29:25;Interactive Widgets for the Jupyter Notebook;Interactive Widgets for the Jupyter Notebook;;TypeScript;['TypeScript: 50.6%', 'Python: 35.7%', 'CSS: 7.3%', 'JavaScript: 6.0%', 'Other: 0.4%'];BSD-3-Clause;https://github.com/jupyter-widgets/ipywidgets;1.0;['pattern', 'skimage', 'sklearn'];['Classification', 'DL', 'ML', 'RL'];['ML', 'RL', 'fit', 'label', 'model', 'recommend'];;2020-12-27 00:42:42;2020-12-19 23:41:51;2068.0;0.682;ipywidgets;
jupytercalpoly;4;2020-06-17 20:39:00;A drag-and-drop dashboard editor for JupyterLab;A drag-and-drop dashboard editor for JupyterLab;;Jupyter Notebook;['Jupyter Notebook: 99.0%', 'Other: 1.0%'];BSD-3-Clause;https://github.com/jupytercalpoly/jupyterlab-interactive-dashboard-editor;1.0;['pattern'];['ML'];['fit', 'label'];;2020-11-24 19:50:34;2020-12-19 23:43:15;153.0;0.53;jupyterlab-interactive-dashboard-editor;
jupyterhub;43;2016-10-18 22:02:06;Jupyter notebook server extension to proxy web services.;Jupyter notebook server extension to proxy web services.;;Python;['Python: 90.8%', 'TypeScript: 6.0%', 'JavaScript: 3.2%'];BSD-3-Clause;https://github.com/jupyterhub/jupyter-server-proxy;0.8;['pattern'];['Classification', 'ML', 'RL'];[];;2020-12-30 11:32:38;2020-12-20 09:52:41;138.0;0.523;jupyter-server-proxy;
jupyterhub;211;2014-06-12 23:22:10;Multi-user server for Jupyter notebooks;;;Python;['Python: 93.0%', 'HTML: 3.3%', 'JavaScript: 2.3%', 'Shell: 0.5%', 'Less: 0.4%', 'Dockerfile: 0.4%', 'Mako: 0.1%'];;https://github.com/jupyterhub/jupyterhub;1.0;['pattern'];['AI', 'ANN', 'Classification', 'DL', 'ML', 'NER', 'NN', 'RL', 'Recommender'];['AI', 'CV', 'ML', 'NER', 'NN', 'RL', 'detect', 'filter', 'fit', 'label', 'loss', 'model', 'natural language processing', 'recogn', 'recommend', 'regression'];;2020-12-28 07:55:17;2020-12-20 11:01:01;6015.0;0.729;jupyterhub;
justmarkham;;2016-03-31 17:39:41;Jupyter notebook and datasets from the pandas Q&A video series;Jupyter notebook and datasets from the pandas Q&A video series;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/justmarkham/pandas-videos;1.0;['pattern', 'sklearn'];['Classification', 'ML', 'RL', 'Recommender', 'Regression'];['filter', 'train'];;2020-10-23 14:37:47;2020-12-20 09:37:31;1473.0;0.665;pandas-videos;
justmarkham;2;2015-04-06 02:08:42;Jupyter notebooks from the scikit-learn video series;Jupyter notebooks from the scikit-learn video series;;Jupyter Notebook;['Jupyter Notebook: 99.6%', 'CSS: 0.4%'];;https://github.com/justmarkham/scikit-learn-videos;1.0;['pattern', 'sklearn'];['CV', 'Classification', 'Clustering', 'DL', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Recommender', 'Regression', 'Supervised Learning', 'Unsupervised learning'];['classif', 'fit', 'k-nearest neighbor', 'linear regression', 'machine learning', 'model', 'natural language processing', 'predict', 'recommend', 'regression', 'supervised learning', 'train'];;2019-11-12 15:38:05;2020-12-20 11:02:23;3038.0;0.7;scikit-learn-videos;
kaixindelele;0;2018-12-18 13:03:41;Tensorflow;Ã£ÂÂÃ¥ÂÂÃ¤ÂºÂ¬Ã¥Â¤Â§Ã¥Â­Â¦Ã£ÂÂÃ¤ÂºÂºÃ¥Â·Â¥Ã¦ÂÂºÃ¨ÂÂ½Ã¥Â®ÂÃ¨Â·ÂµÃ¯Â¼ÂTensorflowÃ§Â¬ÂÃ¨Â®Â° Ã¦ÂÂÃ¦ÂÂ²Ã¤Â»Â£Ã§Â ÂÃ¥ÂÂ±Ã¤ÂºÂ«;;Jupyter Notebook;['Jupyter Notebook: 72.9%', 'Python: 27.1%'];;https://github.com/kaixindelele/tensorflow_notebook;0.8;['tensorflow'];['ANN', 'NN', 'ReLu'];[];;2018-12-18 13:30:15;2020-12-19 23:30:29;19.0;0.362;tensorflow_notebook;
kaleko;0;2015-12-08 00:03:22;I took Andrew Ng's Machine Learning course on Coursera and did the homework assigments... but, on my own in python because I love jupyter notebooks!;I took Andrew Ng's Machine Learning course on Coursera and did the homework assigments... but, on my own in python because I love jupyter notebooks!;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/kaleko/CourseraML;0.8;['nltk', 'sklearn'];['Anomaly Detection', 'CV', 'Classification', 'Clustering', 'K-Means', 'Linear Regression', 'Logistic Regression', 'NN', 'Recommender', 'Regression', 'Support Vector Machines'];[];;2018-10-30 23:50:00;2020-12-20 01:00:30;1838.0;0.676;CourseraML;
karpathy;0;2015-08-04 18:05:15;Notebooks and various random fun;Notebooks and various random fun;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/karpathy/randomfun;0.8;['vocabulary'];['NN', 'RNN', 'Regression'];[];;2020-04-14 22:25:48;2020-12-19 23:31:10;302.0;0.576;randomfun;
kevindewalt;0;2017-05-15 00:13:58;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/kevindewalt/ai-notebooks;0.8;['keras', 'sklearn', 'xgboost'];['AI', 'CV', 'Classification', 'K-Means', 'ML', 'NN', 'Random Forest', 'ReLu', 'VGG'];[];;2018-05-02 14:48:33;2020-12-19 23:11:20;62.0;0.463;ai-notebooks;
khiner;0;2017-12-18 00:56:22;My Jupyter notebooks!;My Jupyter notebooks!;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/khiner/notebooks;1.0;['pattern', 'sklearn', 'statsmodels'];['AI', 'CV', 'Classification', 'DL', 'GRU', 'Linear Regression', 'ML', 'NER', 'NN', 'RL', 'Recommender', 'Regression'];['recommend'];;2020-12-27 19:49:23;2020-12-19 22:35:29;28.0;0.397;notebooks;
kirbs-;3;2015-09-19 20:56:21;Code, prompt and output hiding for Jupyter/IPython notebooks.;Code, prompt and output hiding for Jupyter/IPython notebooks.;;HTML;['HTML: 90.7%', 'Python: 4.5%', 'JavaScript: 2.0%', 'Smarty: 1.8%', 'Jupyter Notebook: 1.0%'];MIT;https://github.com/kirbs-/hide_code;1.0;['pattern'];['Classification', 'ML', 'RL'];['ML'];;2020-12-07 02:25:25;2020-12-19 23:04:45;336.0;0.582;hide_code;
klemag;0;2018-10-19 04:33:26;Notebook and slides for my talk at Pydata NYC 2018;Notebook and slides for my talk at Pydata NYC 2018;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/klemag/pydata_nyc2018-intro-to-model-interpretability;1.0;['keras', 'skimage', 'sklearn', 'xgboost'];['CV', 'Classification', 'DL', 'Decision Tree', 'Logistic Regression', 'Random Forest', 'Regression'];['model'];;2019-06-23 15:00:12;2020-12-20 10:16:15;72.0;0.475;pydata_nyc2018-intro-to-model-interpretability;
KnowledgeLab;0;2016-10-20 11:40:47;Jupyter notebooks for Computational Content Analysis;Jupyter notebooks for Computational Content Analysis;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/KnowledgeLab/content_analysis;1.0;['Pillow', 'caffe', 'gensim', 'nltk', 'pattern', 'skimage', 'sklearn', 'vocabulary'];['Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GAN', 'GRU', 'K-Means', 'KNN', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'Naive Bayes', 'Object Detection', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Speech Recognition', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];['classif', 'clustering', 'model'];;2017-07-20 21:00:16;2020-12-20 11:00:52;36.0;0.418;content_analysis;
krasserm;3;2018-03-19 14:17:43;Notebooks about Bayesian methods for machine learning;Notebooks about Bayesian methods for machine learning;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];Apache-2.0;https://github.com/krasserm/bayesian-machine-learning;1.0;['keras', 'pattern', 'sklearn', 'tensorflow', 'theano', 'xgboost'];['AI', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Gradient Boosting', 'KNN', 'Linear Regression', 'ML', 'NN', 'RNN', 'ReLu', 'Recommender', 'Rectifier', 'Regression', 'Supervised Learning', 'VGG'];['autoencoder', 'bayesian', 'classif', 'linear regression', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'regression'];;2020-12-27 05:53:09;2020-12-20 10:59:13;1133.0;0.652;bayesian-machine-learning;
krasserm;0;2017-07-24 10:21:05;Stanford Machine Learning course exercises implemented with scikit-learn;Stanford Machine Learning course exercises implemented with scikit-learn;;Jupyter Notebook;['Jupyter Notebook: 99.4%', 'MATLAB: 0.6%'];;https://github.com/krasserm/machine-learning-notebooks;1.0;['sklearn', 'vocabulary'];['Anomaly Detection', 'CV', 'Classification', 'Clustering', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Recommender', 'Regression', 'Support Vector Machines'];['anomaly', 'anomaly detection', 'classif', 'clustering', 'detect', 'k-means', 'linear regression', 'logistic regression', 'machine learning', 'neural network', 'recommend', 'recommender', 'regression', 'support vector machines'];;2020-11-18 21:19:49;2020-12-20 09:36:41;276.0;0.57;machine-learning-notebooks;
krischer;9;2015-10-26 08:00:42;Live Jupyter Notebooks for Seismology;Live Jupyter Notebooks for Seismology;;Python;['Python: 91.4%', 'HTML: 4.8%', 'JavaScript: 1.7%', 'Fortran: 1.1%', 'CSS: 0.9%', 'Makefile: 0.1%'];;https://github.com/krischer/seismo_live;1.0;['pattern'];['AI', 'ANN', 'Bayesian', 'Classification', 'ML', 'NER', 'NN', 'RL', 'Recommender'];['AI', 'ML', 'NER', 'RL', 'filter', 'label', 'layer', 'model', 'recommend'];;2020-05-22 11:00:53;2020-12-20 09:22:51;52.0;0.449;seismo_live;
krishnamrith12;3;2016-08-11 08:36:44;Interactive scribe for NLP Course, IIT Kharagpur;Interactive scribe for NLP Course, IIT Kharagpur;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];;https://github.com/krishnamrith12/NotebooksNLP;1.0;['gensim', 'nltk', 'pattern', 'sklearn', 'vocabulary'];['CV', 'Classification', 'Decision Tree', 'GBM', 'Logistic Regression', 'ML', 'Machine Translation', 'NLP', 'NN', 'Naive Bayes', 'Random Forest', 'Recommender', 'Regression', 'Sentiment Analysis', 'Supervised Learning', 'Support Vector Machines', 'Text Classification'];['NLP', 'model', 'recommend'];;2019-03-27 14:49:34;2020-12-19 22:57:34;22.0;0.375;NotebooksNLP;
krishnan-r;2;2017-05-31 09:13:01;Monitor Apache Spark from Jupyter Notebook;Monitor Apache Spark from Jupyter Notebook;;JavaScript;['JavaScript: 40.6%', 'Jupyter Notebook: 27.8%', 'Scala: 14.0%', 'CSS: 7.2%', 'Python: 6.8%', 'HTML: 3.3%', 'Dockerfile: 0.3%'];Apache-2.0;https://github.com/krishnan-r/sparkmonitor;1.0;['pattern'];['NN'];['RL', 'detect', 'train'];;2020-12-11 03:33:17;2020-12-20 09:27:52;151.0;0.529;sparkmonitor;
krittikaiitb;8;2020-04-07 17:19:59;Set of Jupyter Notebooks, along with datafiles, to get started with Scientific Computing in Astronomy;Set of Jupyter Notebooks, along with datafiles, to get started with Scientific Computing in Astronomy;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/krittikaiitb/tutorials;1.0;['pattern'];['ANN', 'CV', 'ML', 'NN', 'Recommender'];['RL', 'filter', 'fit', 'label', 'recommend'];;2020-06-21 21:07:09;2020-12-19 22:40:20;93.0;0.494;tutorials;
kubeflow;213;2017-11-30 18:44:19;Machine Learning Toolkit for Kubernetes;Machine Learning Toolkit for Kubernetes;;Jsonnet;['Jsonnet: 93.4%', 'TypeScript: 2.4%', 'Go: 1.2%', 'Python: 1.2%', 'JavaScript: 0.9%', 'HTML: 0.3%', 'Other: 0.6%'];Apache-2.0;https://github.com/kubeflow/kubeflow;1.0;['pattern', 'pytorch', 'tensorflow'];['AI', 'ANN', 'Classification', 'ML', 'NN', 'RL'];['AI', 'CNN', 'CV', 'ML', 'NER', 'NN', 'RL', 'bayesian', 'classif', 'decision tree', 'deep learning', 'detect', 'filter', 'fit', 'label', 'layer', 'loss', 'machine learning', 'model', 'predict', 'recommend', 'regression', 'train'];;2020-12-28 10:20:36;2020-12-19 23:46:04;9782.0;0.748;kubeflow;
kwinkunks;3;2013-12-26 16:10:25;IPython Notebooks;IPython Notebooks;;Jupyter Notebook;['Jupyter Notebook: 82.8%', 'Lasso: 17.2%'];;https://github.com/kwinkunks/notebooks;1.0;['pattern', 'skimage', 'sklearn', 'tensorflow', 'textblob'];['AI', 'Classification', 'Clustering', 'Image Segmentation', 'ML', 'NLP', 'NN', 'RL', 'Recommender', 'Regression', 'Sentiment Analysis'];['model'];;2020-09-07 17:44:22;2020-12-19 23:25:18;27.0;0.393;notebooks;
kylemcdonald;2;2016-02-16 23:52:35;Collection of notebooks and scripts related to audio processing and machine learning.;Collection of notebooks and scripts related to audio processing and machine learning.;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/kylemcdonald/AudioNotebooks;1.0;['keras', 'skimage', 'sklearn', 'vocabulary'];['AI', 'CV', 'Classification', 'Clustering', 'K-Means', 'LSTM', 'ML', 'NN', 'ReLu'];['AI', 'NN', 'classif', 'fit', 'label', 'model', 'predict', 'train'];;2019-03-25 07:38:05;2020-12-20 11:03:20;356.0;0.586;AudioNotebooks;
Lasagne;16;2015-05-21 11:56:18;Lasagne recipes: examples, IPython notebooks, ...;Lasagne recipes: examples, IPython notebooks, ...;;Python;['Python: 100.0%'];MIT;https://github.com/Lasagne/Recipes;1.0;['caffe', 'keras', 'pattern', 'skimage', 'sklearn', 'tensorflow', 'theano'];['AlexNet', 'CNN', 'CV', 'Classification', 'DL', 'LSTM', 'ML', 'NN', 'RL', 'RNN', 'ReLu', 'Rectifier', 'ResNet', 'VGG'];['classif', 'epoch', 'filter', 'hidden layer', 'layer', 'loss', 'model', 'output layer', 'resnet', 'train'];;2019-03-12 18:20:57;2020-12-20 10:42:55;865.0;0.637;Recipes;
lebinh;0;2016-08-06 07:11:46;A simple deep learning model to add accent to Vietnamese text.;A simple deep learning model to add accent to Vietnamese text.;;Jupyter Notebook;['Jupyter Notebook: 95.3%', 'Python: 2.9%', 'HTML: 1.8%'];MIT;https://github.com/lebinh/vietnamese-accent-model;1.0;['keras', 'tensorflow'];['DL', 'LSTM', 'NN', 'RNN'];['deep learning', 'model', 'train'];;2016-08-12 19:38:57;2020-12-20 09:28:45;37.0;0.421;vietnamese-accent-model;
ledmaster;0;2019-10-20 23:56:10;Aqui voc encontrar notebooks para alguns vdeos do meu canal no Youtube;Aqui vocÃÂª encontrar notebooks para alguns vÃÂ­deos do meu canal no Youtube;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/ledmaster/notebooks_tutoriais;0.8;['catboost', 'keras', 'lightgbm', 'nltk', 'pytorch', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'GAN', 'GBM', 'ML', 'ReLu', 'Regression'];[];;2020-04-02 00:41:34;2020-12-19 23:23:11;34.0;0.413;notebooks_tutoriais;
leondgarse;2;2017-07-31 02:50:10;Atom notebook;Atom notebook;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Other: 0.2%'];;https://github.com/leondgarse/Atom_notebook;1.0;['keras', 'tensorflow'];['ReLu'];['AI', 'ANN', 'CNN', 'CV', 'DL', 'GAN', 'GBM', 'KNN', 'ML', 'NER', 'NLP', 'NN', 'RL', 'RNN', 'activation function', 'alexnet', 'artificial intelligence', 'autoencoder', 'bayesian', 'chatbot', 'classif', 'clustering', 'computer vision', 'convolutional neural network', 'decision tree', 'deep learning', 'detect', 'epoch', 'filter', 'fit', 'gradient descent', 'ground truth', 'gru', 'hidden layer', 'image segmentation', 'input layer', 'k-means', 'k-nearest neighbor', 'label', 'layer', 'linear regression', 'logistic regression', 'loss', 'lstm', 'machine learning', 'machine translation', 'model', 'naive bayes', 'named entity recognition', 'natural language processing', 'neural network', 'neuron', 'object detection', 'output layer', 'pix2pix', 'predict', 'propagation', 'random forest', 'rank', 'recogn', 'recommend', 'recurrent neural network', 'regression', 'relu', 'resnet', 'sentiment analysis', 'supervised learning', 'support vector machines', 'test data', 'train', 'training data', 'u-net', 'unlabeled', 'unsupervised learning', 'validation data', 'vgg'];;2020-12-31 10:23:34;2020-12-20 10:23:08;82.0;0.485;Atom_notebook;
leonvanbokhorst;0;2014-12-24 13:07:49;Jupyter Notebooks from the old UnsupervisedLearning.com (RIP) machine learning and statistics blog;Jupyter Notebooks from the old UnsupervisedLearning.com (RIP) machine learning and statistics blog;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/leonvanbokhorst/NoteBooks-Statistics-and-MachineLearning;0.7;['statsmodels'];[];['machine learning'];;2018-07-23 09:46:54;2020-12-19 22:27:51;268.0;0.568;NoteBooks-Statistics-and-MachineLearning;
leriomaggio;0;2015-12-21 06:05:17;Collection of Jupyter Notebooks about Python programming;Collection of Jupyter Notebooks about Python programming;;Jupyter Notebook;['Jupyter Notebook: 99.4%', 'Other: 0.6%'];MIT;https://github.com/leriomaggio/python-in-a-notebook;0.8;['pattern'];['DL', 'ML', 'RL', 'Recommender'];[];;2016-06-22 18:04:43;2020-12-19 22:54:51;119.0;0.512;python-in-a-notebook;
lernapparat;0;2019-02-24 23:01:33;Various Notebooks for Lernapparat.de;Various Notebooks for Lernapparat.de;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/lernapparat/lernapparat;0.8;['pytorch'];['GAN', 'ReLu'];[];;2020-06-21 06:16:19;2020-12-19 22:43:39;183.0;0.543;lernapparat;
lia-statsletters;0;2016-10-06 11:58:03;Some jupyter notebooks on various topics;Some jupyter notebooks on various topics;;Jupyter Notebook;['Jupyter Notebook: 88.0%', 'HTML: 11.2%', 'Python: 0.8%'];GPL-3.0;https://github.com/lia-statsletters/notebooks;0.8;['pattern', 'sklearn', 'statsmodels'];['AI', 'CV', 'Clustering', 'ML', 'RL', 'Recommender'];[];;2019-10-13 13:48:29;2020-12-20 11:02:59;11.0;0.311;notebooks;
lightning-viz;2;2015-01-13 18:10:55;Example Jupyter notebooks of lightning visualizations;Example Jupyter notebooks of lightning visualizations;;CSS;['CSS: 100.0%'];MIT;https://github.com/lightning-viz/lightning-example-notebooks;0.8;['sklearn'];['Clustering', 'ML', 'NER', 'RL'];[];;2015-09-19 07:35:58;2020-12-20 09:45:18;56.0;0.455;lightning-example-notebooks;
lihd1003;3;2019-01-09 23:38:40;The collection of all course materials, pull requests are always welcome!;The collection of all course materials, pull requests are always welcome!;;Jupyter Notebook;['Jupyter Notebook: 81.6%', 'HTML: 18.3%', 'Other: 0.1%'];;https://github.com/lihd1003/notebook;1.0;['opencv-python', 'pattern', 'sklearn'];['AI', 'ANN', 'Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'K-Means', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines'];['ML'];;2020-12-14 01:13:29;2020-12-19 23:58:24;22.0;0.375;notebook;
likejazz;0;2017-04-07 06:50:26;Jupyter Notebooks and miscellaneous;Jupyter Notebooks and miscellaneous;;Jupyter Notebook;['Jupyter Notebook: 98.6%', 'Python: 1.4%'];;https://github.com/likejazz/jupyter-notebooks;1.0;['gensim', 'keras', 'nltk', 'pattern', 'pytorch', 'sklearn', 'tensorflow', 'vocabulary', 'xgboost'];['AI', 'CNN', 'CV', 'Classification', 'Decision Tree', 'GRU', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'Machine Translation', 'NN', 'Naive Bayes', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Regression', 'Sentiment Analysis'];['CNN', 'CV', 'NLP', 'NN', 'RNN', 'classif', 'decision tree', 'deep learning', 'epoch', 'layer', 'loss', 'lstm', 'machine learning', 'machine translation', 'model', 'naive bayes', 'neural network', 'predict', 'propagation', 'random forest', 'recommend', 'regression', 'text classification', 'train', 'training data', 'validation data'];;2020-11-15 03:57:16;2020-12-20 11:03:34;44.0;0.435;jupyter-notebooks;
litaotao;2;2015-09-25 08:37:27;A stand alone, light-weight web server for building, sharing graphs created in ipython. Build for data science, data analysis guys. Aiming at building an interactive visualization, collaborated dashboard, and real-time streaming graph.;A stand alone, light-weight web server for building, sharing graphs created in ipython. Build for data science, data analysis guys. Aiming at building  an interactive visualization, collaborated dashboard, and real-time streaming graph.;;Python;['Python: 63.7%', 'HTML: 35.4%', 'Shell: 0.9%'];GPL-2.0;https://github.com/litaotao/IPython-Dashboard;1.0;['pattern'];['Classification', 'ML', 'RL', 'Recommender'];['recommend', 'test data'];;2019-11-04 03:27:53;2020-12-20 09:40:04;657.0;0.622;IPython-Dashboard;
liviu-;0;2016-03-26 19:57:42;Directory of Jupyter notebooks exploring various topics;Directory of Jupyter notebooks exploring various topics;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/liviu-/notebooks;1.0;['pattern', 'skimage', 'sklearn', 'statsmodels', 'tensorflow'];['Bayesian', 'CV', 'Linear Regression', 'ML', 'NN', 'Rectifier', 'Regression', 'Sentiment Analysis'];['bayesian', 'linear regression', 'machine learning', 'neural network', 'predict', 'regression'];;2017-02-25 21:02:38;2020-12-19 22:32:06;316.0;0.578;notebooks;
lmarti;0;2014-09-29 14:18:56;Jupyter/IPython notebooks about evolutionary computation.;Jupyter/IPython notebooks about evolutionary computation.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/lmarti/evolutionary-computation-course;0.8;['pattern', 'vocabulary'];['AI', 'Classification', 'ML', 'Recommender'];[];;2017-05-10 12:43:06;2020-12-19 23:25:57;170.0;0.538;evolutionary-computation-course;
lmcinnes;0;2017-12-06 15:27:41;Notebooks in support of the UMAP paper;Notebooks in support of the UMAP paper;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];MIT;https://github.com/lmcinnes/umap_paper_notebooks;0.8;['gensim', 'sklearn'];['Clustering'];[];;2019-07-22 18:13:05;2020-12-20 09:36:08;33.0;0.411;umap_paper_notebooks;
lmoroney;12;2019-02-19 14:43:18;Notebooks for learning deep learning;Notebooks for learning deep learning;;Jupyter Notebook;['Jupyter Notebook: 93.7%', 'Kotlin: 2.6%', 'Swift: 1.9%', 'JavaScript: 0.7%', 'Python: 0.5%', 'HTML: 0.3%', 'Other: 0.3%'];;https://github.com/lmoroney/dlaicourse;1.0;['keras', 'pattern', 'tensorflow'];['AI', 'CNN', 'CV', 'Classification', 'DL', 'ML', 'NN', 'RL', 'ReLu', 'Regression'];['ML', 'model', 'recommend'];;2020-12-31 04:38:05;2020-12-19 23:10:11;4489.0;0.717;dlaicourse;
LongOnly;0;2018-10-01 01:59:06;Educational notebooks on quantitative finance, algorithmic trading, financial modelling and investment strategy;Educational notebooks on quantitative finance, algorithmic trading, financial modelling and investment strategy;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/LongOnly/Quantitative-Notebooks;1.0;['pattern', 'sklearn'];['Decision Tree'];['ML', 'decision tree', 'fit', 'machine learning'];;2020-07-02 00:17:39;2020-12-19 22:35:45;321.0;0.579;Quantitative-Notebooks;
lspvic;4;2017-08-22 08:05:13;Start Tensorboard in Jupyter Notebook;Start Tensorboard in Jupyter Notebook;;Python;['Python: 68.1%', 'JavaScript: 31.6%', 'Dockerfile: 0.3%'];MIT;https://github.com/lspvic/jupyter_tensorboard;1.0;['tensorflow'];['Classification'];['RL', 'recommend'];;2020-05-31 06:49:50;2020-12-19 23:25:59;433.0;0.598;jupyter_tensorboard;
LSSTC-DSFP;24;2016-08-01 20:40:02;Lecture slides, Jupyter notebooks, and other material from the LSSTC Data Science Fellowship Program;Lecture slides, Jupyter notebooks, and other material from the  LSSTC Data Science Fellowship Program;;Jupyter Notebook;['Jupyter Notebook: 100.0%', 'Python: 0.0%', 'Stan: 0.0%', 'R: 0.0%', 'TeX: 0.0%', 'Shell: 0.0%'];MIT;https://github.com/LSSTC-DSFP/LSSTC-DSFP-Sessions;1.0;['keras', 'pattern', 'skimage', 'sklearn', 'statsmodels', 'tensorflow', 'theano'];['AI', 'AlexNet', 'Anomaly Detection', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GRU', 'Image Segmentation', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'Object Detection', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Speech Recognition', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning', 'VGG'];['ML', 'NN', 'bayesian', 'classif', 'clustering', 'deep learning', 'detect', 'filter', 'fit', 'machine learning', 'model', 'neural network', 'regression', 'supervised learning', 'train', 'unsupervised learning'];;2020-12-07 17:38:35;2020-12-19 23:38:13;194.0;0.547;LSSTC-DSFP-Sessions;
lyhue1991;0;2019-06-16 11:28:08;500+ spark short code examples in jupyter notebook!;500+ spark short code examples in jupyter notebook!;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/lyhue1991/spark_tutorial;0.8;['vocabulary', 'xgboost'];['AI', 'Classification', 'Clustering', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'RL', 'Regression'];[];;2019-12-17 15:38:22;2020-12-20 09:41:04;80.0;0.483;spark_tutorial;
m2dsupsdlclass;7;2017-02-21 19:27:20;Slides and Jupyter notebooks for the Deep Learning lectures at M2 Data Science Universit Paris Saclay;Slides and Jupyter notebooks for the Deep Learning lectures at M2 Data Science UniversitÃÂ© Paris Saclay;;Jupyter Notebook;['Jupyter Notebook: 98.2%', 'Other: 1.8%'];MIT;https://github.com/m2dsupsdlclass/lectures-labs;1.0;['gensim', 'keras', 'nltk', 'opencv-python', 'pattern', 'pytorch', 'skimage', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'Anomaly Detection', 'CNN', 'CV', 'Classification', 'DL', 'Decision Tree', 'GAN', 'GRU', 'KNN', 'LSTM', 'Logistic Regression', 'ML', 'Machine Translation', 'NER', 'NLP', 'NLU', 'NN', 'Naive Bayes', 'Object Detection', 'RL', 'RNN', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Sentiment Analysis', 'Supervised Learning', 'Text Classification', 'VGG'];['CNN', 'ML', 'NLP', 'NN', 'autoencoder', 'classif', 'convolutional neural network', 'deep learning', 'detect', 'image classification', 'image segmentation', 'label', 'layer', 'loss', 'machine translation', 'model', 'neural network', 'object detection', 'predict', 'propagation', 'rank', 'recommend', 'recommender', 'recurrent neural network', 'regression', 'text classification', 'train'];;2020-12-23 15:30:21;2020-12-20 10:11:36;1159.0;0.653;lectures-labs;
maartenbreddels;38;2016-12-21 15:30:13;3d plotting for Python in the Jupyter notebook based on IPython widgets using WebGL;3d plotting for Python in the Jupyter notebook based on IPython widgets using WebGL;;Python;['Python: 99.9%', 'Shell: 0.1%'];MIT;https://github.com/maartenbreddels/ipyvolume;1.0;['Pillow', 'pattern', 'skimage'];['Classification', 'DL', 'ML', 'RL'];['label'];;2021-01-02 08:43:23;2020-12-19 23:03:56;1514.0;0.667;ipyvolume;
maartenbreddels;9;2017-08-10 18:07:51;WebRTC for Jupyter notebook/lab;WebRTC for Jupyter notebook/lab;;JavaScript;['JavaScript: 54.6%', 'Python: 33.9%', 'TypeScript: 11.1%', 'Shell: 0.4%'];MIT;https://github.com/maartenbreddels/ipywebrtc;0.8;['pattern', 'skimage'];['Classification', 'ML', 'RL'];[];;2020-09-06 01:03:38;2020-12-19 22:36:29;156.0;0.532;ipywebrtc;
MaayanLab;2;2016-09-20 20:08:36;The Clustergrammer interactive Jupyter notebook widget;The Clustergrammer interactive Jupyter notebook widget;;Jupyter Notebook;['Jupyter Notebook: 79.2%', 'HTML: 18.2%', 'Python: 1.9%', 'Other: 0.7%'];MIT;https://github.com/MaayanLab/clustergrammer-widget;1.0;['sklearn'];['Classification', 'Clustering', 'K-Means'];['label'];;2020-04-02 22:23:44;2020-12-19 23:41:39;36.0;0.418;clustergrammer-widget;
MaayanLab;3;2016-04-19 17:45:27;An open RNA-Seq data analysis pipeline tutorial with an example of reprocessing data from a recent Zika virus study;An open RNA-Seq data analysis pipeline tutorial with an example of reprocessing data from a recent Zika virus study;;Jupyter Notebook;['Jupyter Notebook: 98.8%', 'Other: 1.2%'];;https://github.com/MaayanLab/Zika-RNAseq-Pipeline;0.8;['sklearn', 'statsmodels'];['AI', 'Clustering', 'ML', 'RL'];[];;2019-10-21 15:01:57;2020-12-19 22:27:00;83.0;0.486;Zika-RNAseq-Pipeline;
man-group;6;2020-02-28 11:11:17;Productionise your Jupyter Notebooks as easily as you wrote them.;Productionise your Jupyter Notebooks as easily as you wrote them.;;Python;['Python: 87.2%', 'HTML: 5.6%', 'JavaScript: 4.2%', 'SCSS: 1.2%', 'Smarty: 0.9%', 'Dockerfile: 0.7%', 'CSS: 0.2%'];AGPL-3.0;https://github.com/man-group/notebooker;1.0;['pattern'];['AI', 'Classification', 'ML', 'NN', 'RL', 'Regression'];['ML'];;2020-12-21 11:12:04;2020-12-19 23:09:49;202.0;0.549;notebooker;
mandli;5;2016-01-18 20:45:04;Jupyter notebook class notes for Numerical Methods for PDEs;Jupyter notebook class notes for Numerical Methods for PDEs;;Jupyter Notebook;['Jupyter Notebook: 97.9%', 'Fortran: 1.2%', 'Other: 0.9%'];;https://github.com/mandli/numerical-methods-pdes;0.8;['pattern'];['CV', 'Classification', 'NN', 'RL', 'Recommender'];[];;2020-04-28 15:28:12;2020-12-20 11:01:11;73.0;0.476;numerical-methods-pdes;
mapbox;19;2017-08-08 15:10:51;Use Mapbox GL JS to visualize data in a Python Jupyter notebook;Use Mapbox GL JS to visualize data in a Python Jupyter notebook;;Python;['Python: 59.5%', 'HTML: 40.5%'];MIT;https://github.com/mapbox/mapboxgl-jupyter;1.0;['pattern'];['Classification', 'ML', 'RL'];['ML', 'RL', 'classif', 'clustering', 'epoch', 'filter', 'label', 'layer'];;2019-12-13 22:49:07;2020-12-20 10:23:47;550.0;0.612;mapboxgl-jupyter;
markjay4k;3;2017-12-22 05:58:27;A series of notebooks describing how to use YOLO (darkflow) in python;A series of notebooks describing how to use YOLO (darkflow) in python;;Jupyter Notebook;['Jupyter Notebook: 94.0%', 'Python: 6.0%'];;https://github.com/markjay4k/YOLO-series;0.8;['tensorflow'];['CV'];[];;2019-08-23 14:31:52;2020-12-20 11:02:39;244.0;0.562;YOLO-series;
marrrcin;0;2017-05-25 22:00:57;Jupyter Notebook + Python code of twitter sentiment analysis;Jupyter Notebook + Python code of twitter sentiment analysis;;Jupyter Notebook;['Jupyter Notebook: 99.1%', 'Python: 0.9%'];;https://github.com/marrrcin/ml-twitter-sentiment-analysis;1.0;['gensim', 'nltk', 'sklearn', 'xgboost'];['CV', 'Classification', 'Decision Tree', 'Gradient Boosting', 'ML', 'Naive Bayes', 'RL', 'Random Forest', 'Regression', 'Sentiment Analysis'];['sentiment analysis'];;2018-03-29 01:52:27;2020-12-19 23:53:31;89.0;0.491;ml-twitter-sentiment-analysis;
marsggbo;0;2017-08-30 08:38:40;DeepLearning.aiJupyter Notebook;;;Jupyter Notebook;['Jupyter Notebook: 97.9%', 'Python: 2.1%'];;https://github.com/marsggbo/deeplearning.ai_JupyterNotebooks;1.0;['caffe', 'keras', 'pattern', 'sklearn', 'tensorflow'];['AI', 'ANN', 'AlexNet', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Logistic Regression', 'ML', 'NN', 'Object Detection', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Supervised Learning', 'VGG'];['AutoML', 'ML', 'neural network'];;2020-11-08 07:38:20;2020-12-19 23:07:15;516.0;0.608;deeplearning.ai_JupyterNotebooks;
martin-saurer;2;2016-02-21 09:09:49;Jupyter Notebook / J Integration;Jupyter Notebook / J Integration;;Jupyter Notebook;['Jupyter Notebook: 99.2%', 'Other: 0.8%'];GPL-3.0;https://github.com/martin-saurer/jkernel;1.0;['pattern', 'vocabulary'];['AI', 'Linear Regression', 'ML', 'NER', 'Regression'];['recommend'];;2020-08-06 08:49:39;2020-12-20 09:31:46;30.0;0.403;jkernel;
MaxinAI;9;2019-10-01 21:11:52;Notebooks for the school of AI with the lecture notes;Notebooks for the school of AI with the lecture notes;;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Other: 0.3%'];;https://github.com/MaxinAI/school-of-ai;1.0;['detectron', 'gensim', 'nltk', 'opencv-python', 'pattern', 'pytorch', 'sklearn', 'spacy', 'statsmodels', 'vocabulary', 'xgboost'];['AI', 'AlexNet', 'CNN', 'CV', 'Chatbot', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GAN', 'GRU', 'Gradient Boosting', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'Machine Translation', 'NER', 'NLP', 'NN', 'Naive Bayes', 'Object Detection', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Sentiment Analysis', 'Speech Recognition', 'Supervised Learning', 'Support Vector Machines', 'Text Classification', 'Unsupervised learning', 'VGG'];['AI', 'GAN', 'NN', 'autoencoder', 'classif', 'detect', 'machine learning', 'naive bayes', 'neural network', 'object detection', 'predict', 'support vector machines'];;2020-10-28 13:30:01;2020-12-19 23:49:12;33.0;0.411;school-of-ai;
maykulkarni;0;2017-10-30 15:42:14;Machine Learning notebooks for refreshing concepts.;Machine Learning notebooks for refreshing concepts.;;Jupyter Notebook;['Jupyter Notebook: 99.3%', 'Python: 0.7%'];;https://github.com/maykulkarni/Machine-Learning-Notebooks;1.0;['keras', 'nltk', 'pattern', 'sklearn', 'statsmodels', 'tensorflow', 'vocabulary', 'xgboost'];['AI', 'ANN', 'Boltzmann Machine', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GRU', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Support Vector Machines', 'Text Classification'];['ANN', 'KNN', 'NN', 'activation function', 'classif', 'clustering', 'convolutional neural network', 'decision tree', 'deep learning', 'detect', 'gradient descent', 'linear regression', 'logistic regression', 'lstm', 'machine learning', 'model', 'naive bayes', 'natural language processing', 'neural network', 'propagation', 'random forest', 'regression', 'reinforcement learning', 'sentiment analysis', 'support vector machines'];;2018-10-31 16:42:57;2020-12-19 22:35:50;207.0;0.551;Machine-Learning-Notebooks;
mGalarnyk;3;2015-12-23 10:00:50;Python tutorials in both Jupyter Notebook and youtube format.;Python tutorials in both Jupyter Notebook and youtube format.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/mGalarnyk/Python_Tutorials;1.0;['pattern', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'CNN', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning'];['CV', 'ML', 'RL', 'classif', 'decision tree', 'deep learning', 'detect', 'filter', 'fit', 'k-nearest neighbor', 'label', 'linear regression', 'logistic regression', 'lstm', 'machine learning', 'random forest', 'recogn', 'recommend', 'regression'];;2020-10-21 04:31:01;2020-12-20 11:09:07;778.0;0.632;Python_Tutorials;
mgeier;2;2013-10-05 14:27:23;Some Jupyter notebooks about audio signal processing with Python;Some Jupyter notebooks about audio signal processing with Python;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/mgeier/python-audio;0.8;['pattern', 'statsmodels'];['AI', 'Bayesian', 'CV', 'Classification', 'DL', 'ML', 'Recommender'];[];;2020-12-28 18:27:45;2020-12-20 09:18:56;122.0;0.514;python-audio;
mgroncki;0;2018-05-18 15:01:57;Tutorials about Machine Learning and Deep Learning;Tutorials about Machine Learning and Deep Learning;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/mgroncki/DataScienceNotebooks;1.0;['keras', 'pattern', 'sklearn', 'tensorflow'];['ANN', 'CV', 'Classification', 'DL', 'Decision Tree', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RNN', 'Random Forest', 'ReLu', 'Regression', 'Support Vector Machines'];['deep learning', 'detect', 'layer', 'logistic regression', 'lstm', 'model', 'neural network', 'recurrent neural network', 'regression'];;2018-11-09 02:26:59;2020-12-20 09:27:49;18.0;0.357;DataScienceNotebooks;
michhar;0;2016-02-15 19:30:03;Some sample python notebooks;Some sample python notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];;https://github.com/michhar/python-jupyter-notebooks;0.8;['Pillow', 'keras', 'pytorch', 'skimage', 'sklearn', 'tensorflow'];['AI', 'Anomaly Detection', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'K-Means', 'Linear Regression', 'ML', 'NLP', 'NN', 'RL', 'ReLu', 'Regression'];[];;2020-02-27 07:05:27;2020-12-19 23:18:12;13.0;0.327;python-jupyter-notebooks;
microsoft;18;2016-10-20 07:32:26;Repo for tracking issues and hosting samples for Azure Notebooks;Repo for tracking issues and hosting samples for Azure Notebooks;;Shell;['Shell: 100.0%'];;https://github.com/microsoft/AzureNotebooks;1.0;['nltk', 'pattern', 'sklearn'];['Decision Tree', 'Linear Regression', 'ML', 'RL', 'Regression', 'Sentiment Analysis'];['fit', 'machine learning'];;2020-10-24 03:55:41;2020-12-20 11:23:31;319.0;0.579;AzureNotebooks;
microsoft;8;2018-10-08 23:32:10;Spit shine for Jupyter notebooks;Spit shine for Jupyter notebooks Ã°ÂÂ§Â½Ã¢ÂÂ¨;;Jupyter Notebook;['Jupyter Notebook: 48.3%', 'TypeScript: 48.2%', 'CSS: 2.9%', 'Other: 0.6%'];MIT;https://github.com/microsoft/gather;0.7;['sklearn'];[];['label'];;2020-12-11 16:43:26;2020-12-20 09:53:45;341.0;0.583;gather;
MicrosoftDocs;5;2020-06-13 02:44:07;Exercise notebooks for Machine Learning modules on Microsoft Learn;Exercise notebooks for Machine Learning modules on Microsoft Learn;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Dockerfile: 0.2%'];MIT;https://github.com/MicrosoftDocs/ml-basics;1.0;['keras', 'pattern', 'pytorch', 'sklearn', 'tensorflow'];['ANN', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'Gradient Boosting', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Supervised Learning', 'Unsupervised learning'];['RL', 'machine learning', 'model', 'recommend'];;2021-01-02 05:17:46;2020-12-20 11:02:02;672.0;0.623;ml-basics;
MicrosoftDocs;6;2020-01-07 19:14:23;Azure Machine Learning Lab Notebooks;Azure Machine Learning Lab Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/MicrosoftDocs/mslearn-aml-labs;1.0;['pattern', 'sklearn'];['AutoML', 'CNN', 'Classification', 'Decision Tree', 'Logistic Regression', 'ML', 'NN', 'RL', 'Regression'];['ML', 'RL', 'automated machine learning', 'machine learning', 'model', 'predict', 'recommend', 'train', 'training data'];;2020-12-07 22:58:47;2020-12-20 10:40:14;176.0;0.54;mslearn-aml-labs;
mikemull;0;2015-05-25 21:51:29;Ipython notebooks on various topics;Ipython notebooks on various topics;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/mikemull/Notebooks;1.0;['nltk', 'pattern', 'sklearn', 'statsmodels'];['AI', 'CV', 'Classification', 'Clustering', 'DL', 'ML', 'NLP', 'RL', 'Random Forest', 'Regression', 'Supervised Learning'];['filter', 'model'];;2018-10-04 23:54:52;2020-12-19 22:59:06;51.0;0.447;Notebooks;
mimoralea;3;2017-03-03 16:47:50;Reinforcement Learning and Decision Making tutorials explained at an intuitive level and with Jupyter Notebooks;Reinforcement Learning and Decision Making tutorials explained at an intuitive level and with Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 98.2%', 'TeX: 1.8%'];MIT;https://github.com/mimoralea/applied-reinforcement-learning;1.0;['keras', 'pattern'];['AI', 'ML', 'NN', 'RL', 'ReLu', 'Supervised Learning'];['AI', 'KNN', 'ML', 'NN', 'RL', 'artificial intelligence', 'bayesian', 'filter', 'fit', 'gradient descent', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'rank', 'recogn', 'recommend', 'reinforcement learning', 'reward', 'train'];;2020-11-18 18:36:25;2020-12-20 09:20:38;224.0;0.556;applied-reinforcement-learning;
minerandodados;0;2017-03-13 13:25:32;Repositrio para armazenamento de cdigo e notebooks de postagens do blog e cursos.;RepositÃÂ³rio para armazenamento de cÃÂ³digo e notebooks de postagens do blog e cursos.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/minerandodados/mdrepo;0.8;['nltk', 'sklearn', 'statsmodels', 'textblob'];['AI', 'Bayesian', 'CV', 'Classification', 'GRU', 'K-Means', 'KNN', 'ML', 'NN', 'Naive Bayes', 'Regression'];[];;2020-09-13 17:53:06;2020-12-20 09:40:50;194.0;0.547;mdrepo;
Mjrovai;0;2018-04-17 16:09:00;Jupyter Notebooks used on my DataScience projects;Jupyter Notebooks used on my DataScience projects;;Jupyter Notebook;['Jupyter Notebook: 95.0%', 'HTML: 4.9%', 'Other: 0.1%'];;https://github.com/Mjrovai/Python4DS;1.0;['caffe', 'imutils', 'keras', 'nltk', 'pattern', 'sklearn', 'spacy', 'statsmodels', 'tensorflow'];['AI', 'ANN', 'CV', 'Classification', 'DL', 'Decision Tree', 'GRU', 'ML', 'NN', 'RL', 'ReLu', 'Sentiment Analysis'];['AI', 'CV', 'layer', 'model', 'predict'];;2020-12-01 20:20:03;2020-12-20 09:44:05;143.0;0.525;Python4DS;
ML-course;7;2017-02-04 22:44:35;A machine learning course using Python, Jupyter Notebooks, and OpenML;A machine learning course using Python, Jupyter Notebooks, and OpenML;;Jupyter Notebook;['Jupyter Notebook: 83.7%', 'HTML: 16.0%', 'JavaScript: 0.1%', 'Python: 0.1%', 'CSS: 0.1%', 'SCSS: 0.0%'];;https://github.com/ML-course/master;1.0;['autokeras', 'autosklearn', 'gensim', 'keras', 'mxnet', 'nltk', 'opencv-python', 'pattern', 'pytorch', 'skimage', 'sklearn', 'spacy', 'tensorflow', 'tpot', 'vocabulary', 'xgboost'];['AutoML', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GAN', 'GBM', 'Gradient Boosting', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Sentiment Analysis', 'Supervised Learning', 'Support Vector Machines', 'Text Classification', 'Unsupervised learning', 'VGG'];['ML', 'RL', 'bayesian', 'deep learning', 'fit', 'gru', 'label', 'layer', 'machine learning', 'model', 'predict', 'recommend', 'resnet', 'supervised learning', 'train', 'unsupervised learning'];;2020-12-08 07:51:21;2020-12-20 09:27:29;281.0;0.571;master;
mli;3;2019-08-28 20:57:04;Notebooks for a single-day DL crash course in Chinese;Notebooks for a single-day DL crash course in Chinese;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/mli/d2l-1day-notebooks-zh;1.0;['mxnet'];['AlexNet', 'ReLu', 'ResNet', 'VGG'];['deep learning'];;2019-09-05 02:37:05;2020-12-20 09:52:49;49.0;0.444;d2l-1day-notebooks-zh;
Morisset;0;2015-10-10 23:31:40;Files for the Python lecture I give at IA-UNAM;Files for the Python lecture I give at IA-UNAM;;Jupyter Notebook;['Jupyter Notebook: 94.5%', 'HTML: 5.2%', 'Other: 0.3%'];;https://github.com/Morisset/Python-lectures-Notebooks;0.8;['pattern'];['AI', 'DL', 'ML'];[];;2021-01-02 18:38:05;2020-12-20 09:19:13;17.0;0.352;Python-lectures-Notebooks;
mrm8488;0;2019-12-17 17:58:49;A Repo to store the Google Colaboratory Notebooks that I have created and shared;A Repo to store the Google Colaboratory Notebooks that I have created and shared;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/mrm8488/shared_colab_notebooks;0.8;['keras', 'nltk', 'opencv-python', 'pattern', 'pytorch', 'sklearn', 'spacy', 'tensorflow', 'vocabulary'];['AI', 'CV', 'Classification', 'Clustering', 'DL', 'GAN', 'GRU', 'LSTM', 'ML', 'NER', 'NLP', 'NN', 'Naive Bayes', 'RL', 'RNN', 'ReLu', 'ResNet', 'Sentiment Analysis', 'Text Classification'];[];;2020-10-19 09:46:54;2020-12-20 10:42:00;65.0;0.467;shared_colab_notebooks;
msurtsukov;0;2019-01-23 22:52:57;Jupyter notebook with Pytorch implementation of Neural Ordinary Differential Equations;Jupyter notebook with Pytorch implementation of Neural Ordinary Differential Equations;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/msurtsukov/neural-ode;0.8;['h2o'];['Bayesian', 'Classification', 'GRU', 'ML', 'NLP', 'NN', 'RNN', 'ReLu', 'ResNet'];[];;2019-04-25 17:47:03;2020-12-19 22:25:23;318.0;0.579;neural-ode;
mtl-brainhack-school-2018;27;2018-05-13 03:10:02;slides and notebooks for tutorials and pitches;slides and notebooks for tutorials and pitches;;Jupyter Notebook;['Jupyter Notebook: 91.8%', 'HTML: 8.2%'];;https://github.com/mtl-brainhack-school-2018/teaching_material;1.0;['keras', 'sklearn', 'tensorflow'];['AI', 'Classification', 'Clustering', 'K-Means', 'ML', 'ReLu', 'Regression'];['AI', 'clustering', 'deep learning', 'machine learning', 'model', 'rank', 'recogn', 'regression', 'train'];;2018-05-31 13:07:38;2020-12-19 23:19:15;21.0;0.371;teaching_material;
muellerzr;12;2019-10-25 02:35:27;"Notebooks for the ""A walk with fastai2"" Study Group and Lecture Series";"Notebooks for the ""A walk with fastai2"" Study Group and Lecture Series";;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];MIT;https://github.com/muellerzr/Practical-Deep-Learning-for-Coders-2.0;1.0;['pytorch', 'sklearn', 'vocabulary', 'xgboost'];['AI', 'Bayesian', 'CNN', 'CV', 'Classification', 'DL', 'GAN', 'GBM', 'Gradient Boosting', 'Image Segmentation', 'LSTM', 'Linear Regression', 'ML', 'NLP', 'NN', 'Object Detection', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Speech Recognition', 'U-Net', 'VGG'];['AI', 'GBM', 'NLP', 'bayesian', 'classif', 'computer vision', 'detect', 'gradient descent', 'image classification', 'image segmentation', 'label', 'lstm', 'model', 'natural language processing', 'neural network', 'object detection', 'regression'];;2020-11-05 00:16:59;2020-12-20 09:30:56;617.0;0.619;Practical-Deep-Learning-for-Coders-2.0;
mwermelinger;0;2017-12-20 18:51:17;Jupyter notebooks and datasets for this course;Jupyter notebooks and datasets for this course;;Jupyter Notebook;['Jupyter Notebook: 94.5%', 'HTML: 5.5%'];;https://github.com/mwermelinger/Learn-to-code-for-data-analysis;1.0;['pattern'];['ML', 'NER', 'RL'];['filter', 'fit'];;2020-08-05 15:57:12;2020-12-20 10:21:04;60.0;0.46;Learn-to-code-for-data-analysis;
mwitiderrick;0;2018-11-08 12:31:40;Data and Notebook for the Stock Price Prediction Tutorial;Data and Notebook for the Stock Price Prediction Tutorial;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/mwitiderrick/stockprice;1.0;['keras', 'sklearn'];['LSTM', 'NN', 'RNN'];['predict'];;2020-11-02 06:46:05;2020-12-20 09:19:00;75.0;0.478;stockprice;
mwouts;51;2018-06-15 05:25:36;Jupyter Notebooks as Markdown Documents, Julia, Python or R scripts;Jupyter Notebooks as Markdown Documents, Julia, Python or R scripts;;Python;['Python: 47.4%', 'Jupyter Notebook: 38.4%', 'Scheme: 3.7%', 'C++: 1.8%', 'Julia: 1.7%', 'JavaScript: 1.4%', 'Other: 5.6%'];MIT;https://github.com/mwouts/jupytext;1.0;['pattern'];['Classification', 'DL', 'ML', 'RL', 'Recommender'];['DL', 'ML', 'classif', 'detect', 'filter', 'fit', 'label', 'layer', 'model', 'rank', 'recogn', 'recommend'];;2020-12-30 18:06:02;2020-12-20 11:22:52;4061.0;0.712;jupytext;
Naereen;3;2016-06-25 09:28:41;A growing collection of Jupyter Notebooks written in Python, OCaml and Julia for science examples, algorithms, visualizations etc;:notebook: A growing collection of Jupyter Notebooks written in Python, OCaml and Julia for science examples, algorithms, visualizations etc;;Jupyter Notebook;['Jupyter Notebook: 94.2%', 'Python: 3.7%', 'OCaml: 2.1%', 'Julia: 0.0%', 'Shell: 0.0%', 'MATLAB: 0.0%'];MIT;https://github.com/Naereen/notebooks;1.0;['pattern', 'skimage'];['AI', 'CV', 'Clustering', 'GRU', 'ML', 'NN', 'RL', 'Recommender'];['ML', 'fit', 'propagation', 'rank', 'recommend', 'train'];;2020-10-20 13:42:26;2020-12-20 09:21:51;77.0;0.48;notebooks;
nakaizura;0;2020-04-13 12:35:28;;Ã¥ÂÂ³Ã¤ÂºÂÃ¤Â¸ÂÃ¤ÂºÂÃ§Â»ÂÃ¥ÂÂ¸Ã¨Â®ÂºÃ¦ÂÂÃ¦ÂºÂÃ§Â ÂÃ§ÂÂÃ©ÂÂÃ¨Â¡ÂÃ¤Â¸Â­Ã¦ÂÂÃ§Â¬ÂÃ¨Â®Â°;;Python;['Python: 100.0%'];;https://github.com/nakaizura/Source-Code-Notebook;1.0;['gensim', 'keras', 'pytorch', 'skimage', 'sklearn', 'tensorflow', 'theano', 'vocabulary'];['AI', 'CNN', 'Classification', 'DL', 'GAN', 'GRU', 'LSTM', 'ML', 'Machine Translation', 'NER', 'NLP', 'NN', 'RNN', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'VGG'];['AI', 'CNN', 'CV', 'DL', 'GAN', 'ML', 'NLP', 'NN', 'RL', 'bayesian', 'classif', 'computer vision', 'detect', 'filter', 'generative adversarial network', 'gru', 'layer', 'lstm', 'machine translation', 'model', 'neural network', 'predict', 'rank', 'recogn', 'recommend', 'recommender', 'reinforcement learning', 'train', 'vgg'];;2020-11-19 09:09:55;2020-12-20 09:20:27;161.0;0.534;Source-Code-Notebook;
napsternxg;0;2015-07-21 19:51:40;Some iPython Notebooks I have created for personal learning;Some iPython Notebooks I have created for personal learning;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/napsternxg/ipython-notebooks;0.8;['keras', 'nltk', 'sklearn', 'statsmodels', 'tensorflow', 'theano', 'vocabulary'];['Bayesian', 'Classification', 'LSTM', 'Logistic Regression', 'ML', 'NN', 'RL', 'ReLu', 'Regression'];[];;2020-12-18 16:51:19;2020-12-19 23:08:13;56.0;0.455;ipython-notebooks;
nate-parrott;0;2016-12-26 07:48:16;neural network explorations  i know it's misspelled;neural network explorations Ã¢ÂÂ¡Ã¯Â¸Â i know it's misspelled;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/nate-parrott/juypter-notebooks;1.0;['keras', 'skimage', 'tensorflow', 'vocabulary'];['AI', 'ANN', 'CNN', 'CV', 'Classification', 'DL', 'GAN', 'GRU', 'LSTM', 'ML', 'NER', 'NN', 'Pix2Pix', 'RL', 'RNN', 'ReLu', 'Recommender', 'VGG'];['layer', 'model', 'train', 'vgg'];;2017-04-26 19:02:09;2020-12-19 23:21:17;46.0;0.439;juypter-notebooks;
NCAR;9;2017-08-25 19:48:17;Jupyter notebooks for WRF-Hydro trainings;Jupyter notebooks for WRF-Hydro trainings;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/NCAR/wrf_hydro_training;1.0;['pattern'];['AI', 'ANN', 'Classification', 'ML', 'NN', 'RL', 'Recommender'];['model', 'recommend', 'train'];;2020-11-10 22:22:53;2020-12-20 11:23:23;18.0;0.357;wrf_hydro_training;
NCATS-Tangerine;23;2017-03-10 19:27:39;Notebooks for answering competency questions;Notebooks for answering competency questions;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Other: 0.2%'];;https://github.com/NCATS-Tangerine/cq-notebooks;1.0;['caffe', 'nltk', 'pattern', 'vocabulary'];['CV', 'Clustering', 'GBM', 'ML', 'NER', 'RL'];['AI', 'ANN', 'CV', 'ML', 'NN', 'RL', 'classif', 'clustering', 'decision tree', 'filter', 'fit', 'label', 'loss', 'machine learning', 'model', 'predict', 'rank', 'recommend', 'train'];;2018-12-28 17:32:40;2020-12-19 23:58:38;6.0;0.253;cq-notebooks;
neilpanchal;0;2015-06-07 03:49:45;A minimal Jupyter Notebook theme;A minimal Jupyter Notebook theme;;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Other: 0.3%'];;https://github.com/neilpanchal/spinzero-jupyter-theme;0.8;['skimage', 'sklearn'];['Linear Regression', 'ML', 'RL', 'Recommender', 'Regression'];[];;2019-04-06 23:29:04;2020-12-20 10:40:24;244.0;0.562;spinzero-jupyter-theme;
NeuroTechX;11;2020-08-11 00:25:01;A collection of classic EEG experiments implemented with Python and Jupyter notebooks;A collection of classic EEG experiments implemented with Python and Jupyter notebooks;;Python;['Python: 100.0%'];BSD-3-Clause;https://github.com/NeuroTechX/eeg-notebooks;1.0;['pattern', 'sklearn'];['AI', 'ANN', 'Classification', 'DL', 'GAN', 'Logistic Regression', 'ML', 'NN', 'RL', 'Recommender', 'Regression'];['AI', 'classif', 'detect', 'epoch', 'filter', 'fit', 'predict', 'recommend', 'reward'];;2021-01-01 18:15:54;2020-12-20 10:59:26;53.0;0.45;eeg-notebooks;
NeuroTechX;9;2018-04-15 14:50:16;Previous version of eeg-notebooks;Previous version of eeg-notebooks;;Jupyter Notebook;['Jupyter Notebook: 98.6%', 'Python: 1.4%'];BSD-3-Clause;https://github.com/NeuroTechX/eeg-notebooks_v0.1;1.0;['pattern', 'sklearn'];['Classification', 'DL', 'Logistic Regression', 'ML', 'NN', 'Recommender', 'Regression'];['AI', 'classif', 'detect', 'epoch', 'filter', 'fit', 'predict', 'recommend', 'reward'];;2020-08-11 03:15:42;2020-12-20 10:14:46;181.0;0.542;eeg-notebooks_v0.1;
neuwangmeng;0;2018-01-13 21:08:18;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/neuwangmeng/Keras_Jupyter_Notebooks;1.0;['keras', 'sklearn'];['CNN', 'ML', 'NN', 'ReLu', 'Recommender', 'VGG'];['deep learning', 'machine learning'];;2017-12-07 18:11:04;2020-12-20 10:41:55;2.0;0.152;Keras_Jupyter_Notebooks;
ngoldbaum;6;2013-11-04 21:24:43;IPython notebook sphinx extensions;IPython notebook sphinx extensions;;Jupyter Notebook;['Jupyter Notebook: 45.5%', 'Python: 31.1%', 'Batchfile: 10.4%', 'Makefile: 10.1%', 'CSS: 2.7%', 'HTML: 0.2%'];BSD-2-Clause;https://github.com/ngoldbaum/RunNotebook;1.0;['pattern'];['ML', 'RL'];['ML'];;2020-07-27 20:36:45;2020-12-19 23:30:38;23.0;0.379;RunNotebook;
nipy;12;2017-09-11 22:20:27;Neuroimaging widgets for jupyter notebooks;Neuroimaging widgets for jupyter notebooks;;Jupyter Notebook;['Jupyter Notebook: 51.1%', 'Python: 47.8%', 'Makefile: 1.1%'];;https://github.com/nipy/niwidgets;0.8;['pattern'];['ML'];[];;2020-11-18 21:51:04;2020-12-20 10:42:27;61.0;0.462;niwidgets;
NirantK;3;2018-03-11 05:05:37;NLP in Python with Deep Learning;NLP in Python with Deep Learning;;Jupyter Notebook;['Jupyter Notebook: 98.7%', 'Python: 1.2%', 'HTML: 0.1%'];MIT;https://github.com/NirantK/nlp-python-deep-learning;1.0;['gensim', 'pattern', 'pytorch', 'sklearn', 'spacy', 'vocabulary'];['AI', 'CV', 'Chatbot', 'Classification', 'DL', 'Decision Tree', 'LSTM', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'Naive Bayes', 'Random Forest', 'Regression', 'Text Classification'];['AI', 'CV', 'ML', 'NER', 'NLP', 'NN', 'chatbot', 'classif', 'decision tree', 'deep learning', 'detect', 'epoch', 'filter', 'fit', 'label', 'logistic regression', 'model', 'naive bayes', 'named entity recognition', 'natural language processing', 'predict', 'random forest', 'rank', 'recogn', 'regression', 'supervised learning', 'text classification', 'train', 'training data', 'unsupervised learning'];;2020-11-04 01:28:47;2020-12-20 10:24:22;350.0;0.585;nlp-python-deep-learning;
nlptown;0;2018-04-30 11:25:21;A collection of notebooks for Natural Language Processing from NLP Town;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/nlptown/nlp-notebooks;1.0;['gensim', 'keras', 'nltk', 'pattern', 'pytorch', 'sklearn', 'spacy', 'tensorflow', 'vocabulary'];['AI', 'CNN', 'CV', 'Chatbot', 'Classification', 'Clustering', 'DL', 'LSTM', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'Naive Bayes', 'RNN', 'ReLu', 'Regression', 'Sentiment Analysis', 'Support Vector Machines', 'Text Classification'];['NLP', 'classif', 'label', 'lstm', 'model', 'named entity recognition', 'natural language processing', 'recogn', 'sentiment analysis', 'text classification', 'train'];;2019-11-01 11:10:07;2020-12-19 23:08:39;482.0;0.604;nlp-notebooks;
noaodatalab;17;2018-06-22 23:05:31;Default set of Data Lab notebooks, by DL team and contributed by users;Default set of Data Lab notebooks, by DL team and contributed by users;;Jupyter Notebook;['Jupyter Notebook: 51.8%', 'HTML: 47.9%', 'Other: 0.3%'];BSD-3-Clause;https://github.com/noaodatalab/notebooks-latest;1.0;['Pillow', 'pattern', 'sklearn'];['AI', 'ANN', 'Classification', 'Clustering', 'DL', 'ML', 'NER', 'NN', 'RL', 'Random Forest', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];['AI', 'recommend'];;2020-12-24 17:03:10;2020-12-20 09:49:45;7.0;0.268;notebooks-latest;
nteract;30;2017-01-03 22:23:32;Notebook sharing hub;Ã°ÂÂÂ Notebook sharing hub;;JavaScript;['JavaScript: 89.7%', 'CSS: 8.7%', 'Dockerfile: 1.6%'];BSD-3-Clause;https://github.com/nteract/commuter;1.0;['tensorflow'];['ML'];['RL', 'model', 'train'];;2020-12-11 17:46:35;2020-12-19 23:35:28;336.0;0.582;commuter;
nteract;75;2017-07-06 17:17:53;Parameterize, execute, and analyze notebooks;;;Python;['Python: 83.6%', 'Jupyter Notebook: 16.4%'];BSD-3-Clause;https://github.com/nteract/papermill;1.0;['pattern'];['AI', 'Classification', 'DL', 'ML', 'NN', 'RL'];['DL', 'ML', 'RL', 'filter', 'layer', 'recommend'];;2020-12-25 19:27:28;2020-12-19 23:03:59;3835.0;0.71;papermill;
nteract;9;2018-10-22 04:17:04;A library for recording and reading data in notebooks.;A library for recording and reading data in notebooks.;;Python;['Python: 78.1%', 'Jupyter Notebook: 21.9%'];BSD-3-Clause;https://github.com/nteract/scrapbook;1.0;['pattern'];['AI', 'Classification', 'ML'];['ML', 'filter', 'model'];;2020-10-09 16:22:09;2020-12-19 22:56:18;199.0;0.548;scrapbook;
NumEconCopenhagen;2;2019-01-22 16:49:50;Jupyter Notebook examples of the ConSav package;Jupyter Notebook examples of the ConSav package;;Jupyter Notebook;['Jupyter Notebook: 92.6%', 'Python: 3.4%', 'C++: 2.0%', 'TeX: 2.0%'];MIT;https://github.com/NumEconCopenhagen/ConsumptionSavingNotebooks;1.0;['statsmodels'];['AI', 'Recommender', 'Regression'];['model', 'recommend', 'train'];;2020-12-18 13:12:25;2020-12-19 23:25:25;13.0;0.327;ConsumptionSavingNotebooks;
nyusterndatabootcamp;0;2018-07-23 19:04:39;jupyter notebooks for course and book;jupyter notebooks for course and book;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/nyusterndatabootcamp/notebooks;0.8;['pattern'];['GRU', 'ML', 'Recommender', 'Regression'];[];;2018-09-11 04:41:12;2020-12-20 09:52:29;19.0;0.362;notebooks;
ocampor;0;2018-08-22 23:16:01;Repository that contains my research;Repository that contains my research;;Jupyter Notebook;['Jupyter Notebook: 99.2%', 'Other: 0.8%'];GPL-3.0;https://github.com/ocampor/notebooks;0.8;['opencv-python', 'pattern', 'skimage'];['CV', 'Classification', 'GBM', 'ML', 'ReLu'];[];;2020-03-22 10:58:15;2020-12-19 22:40:57;40.0;0.427;notebooks;
ocontreras309;2;2019-06-03 04:07:23;A repository for public Machine Learning notebooks I have created;A repository for public Machine Learning notebooks I have created;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/ocontreras309/ML_Notebooks;1.0;['keras', 'sklearn', 'tensorflow'];['CV', 'Classification', 'NER', 'NN', 'RL', 'Recommender'];['ML', 'machine learning'];;2020-05-06 04:08:51;2020-12-20 11:22:38;40.0;0.427;ML_Notebooks;
ogrisel;0;2011-10-12 20:04:58;Some sample IPython notebooks for scikit-learn;;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/ogrisel/notebooks;1.0;['keras', 'sklearn', 'tensorflow', 'theano', 'xgboost'];['AI', 'CV', 'Classification', 'Clustering', 'Decision Tree', 'GBM', 'GRU', 'Gradient Boosting', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'ReLu', 'Regression', 'Supervised Learning', 'Support Vector Machines', 'Text Classification'];['ML'];;2020-02-20 10:41:35;2020-12-20 10:28:44;537.0;0.611;notebooks;
okfn-brasil;58;2018-10-03 18:40:22;Notebooks from Operao Serenata de Amor;Notebooks from OperaÃÂ§ÃÂ£o Serenata de Amor;;HTML;['HTML: 50.0%', 'Jupyter Notebook: 49.5%', 'Other: 0.5%'];MIT;https://github.com/okfn-brasil/notebooks;1.0;['nltk', 'pattern', 'sklearn', 'statsmodels'];['AI', 'Anomaly Detection', 'Classification', 'Clustering', 'GRU', 'K-Means', 'KNN', 'Linear Regression', 'ML', 'NER', 'RL', 'Recommender', 'Regression'];['AI', 'RL', 'classif', 'label', 'recommend'];;2020-07-15 17:47:43;2020-12-19 23:15:14;48.0;0.442;notebooks;
omarsar;0;2018-10-17 06:22:21;Deep Learning for NLP Python Notebooks in PyTorch and TensorFlow;Deep Learning for NLP Python Notebooks in PyTorch and TensorFlow;;Jupyter Notebook;['Jupyter Notebook: 91.9%', 'Python: 8.1%'];;https://github.com/omarsar/nlp_pytorch_tensorflow_notebooks;1.0;['keras', 'pytorch', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'CNN', 'CV', 'Classification', 'DL', 'GRU', 'LSTM', 'NLP', 'NN', 'RNN', 'ReLu', 'Recommender', 'Text Classification'];['NLP', 'deep learning', 'gru', 'machine translation', 'recogn'];;2018-10-17 06:36:16;2020-12-20 11:01:21;19.0;0.362;nlp_pytorch_tensorflow_notebooks;
omarsar;0;2019-08-25 11:50:26;A collection of PyTorch notebooks for learning and practicing deep learning;A collection of PyTorch notebooks for learning and practicing deep learning;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/omarsar/pytorch_notebooks;1.0;['pattern', 'pytorch', 'tensorflow'];['AI', 'CNN', 'CV', 'Classification', 'DL', 'Logistic Regression', 'ML', 'NN', 'RNN', 'ReLu', 'Recommender', 'Rectifier', 'Regression'];['CNN', 'NN', 'classif', 'deep learning', 'image classification', 'logistic regression', 'machine learning', 'model', 'neural network', 'regression', 'train'];;2019-12-30 13:45:04;2020-12-20 10:23:41;74.0;0.477;pytorch_notebooks;
opencubelabs;0;2017-12-09 21:14:56;;;;Jupyter Notebook;['Jupyter Notebook: 96.5%', 'TeX: 3.1%', 'Python: 0.4%'];;https://github.com/opencubelabs/notebooks;0.8;['nltk', 'pattern', 'sklearn'];['AI', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'K-Means', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'Regression', 'Sentiment Analysis', 'Support Vector Machines'];[];;2019-06-04 17:37:50;2020-12-20 09:19:23;2.0;0.152;notebooks;
opendatacube;3;2018-05-23 03:11:13;Extra documentation about using ODC with Jupyter Notebooks;Extra documentation about using ODC with Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 98.7%', 'Python: 1.3%'];Apache-2.0;https://github.com/opendatacube/datacube-notebooks;1.0;['sklearn'];['AI', 'Classification', 'Linear Regression', 'ML', 'Regression'];['classif', 'detect', 'linear regression', 'loss', 'regression'];;2020-07-15 07:30:18;2020-12-20 10:21:45;38.0;0.423;datacube-notebooks;
openearth;5;2014-07-02 16:43:54;A collection of python notebooks;A collection of python notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];GPL-3.0;https://github.com/openearth/notebooks;1.0;['keras', 'pattern', 'skimage', 'sklearn', 'statsmodels', 'tensorflow'];['AI', 'Bayesian', 'Classification', 'Clustering', 'DL', 'LSTM', 'ML', 'NER', 'NN', 'RL', 'Regression'];['NN', 'model', 'neural network', 'test data', 'train', 'training data', 'validation data'];;2020-09-16 16:00:23;2020-12-20 09:19:38;15.0;0.34;notebooks;
OpenGeoscience;7;2016-07-26 19:48:45;A Jupyter notebook extension for geospatial visualization and analysis;A Jupyter notebook extension for geospatial visualization and analysis;;Python;['Python: 68.1%', 'Jupyter Notebook: 21.8%', 'JavaScript: 9.0%', 'Ruby: 0.5%', 'Dockerfile: 0.3%', 'CSS: 0.2%', 'Other: 0.1%'];Apache-2.0;https://github.com/OpenGeoscience/geonotebook;1.0;['pattern', 'skimage'];['ANN', 'Image Segmentation', 'ML', 'NN', 'RL'];['AI', 'NER', 'RL', 'layer'];;2019-01-21 15:53:04;2020-12-20 09:44:10;993.0;0.645;geonotebook;
OpenHumans;7;2018-03-09 22:35:02;Explore your personal data with https://notebooks.openhumans.org;Explore your personal data with https://notebooks.openhumans.org;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/OpenHumans/ohjh-example-notebooks;0.8;['pattern', 'sklearn', 'textblob'];['AI', 'Classification', 'RL'];[];;2019-01-24 07:10:36;2020-12-19 22:36:39;20.0;0.367;ohjh-example-notebooks;
oschuett;8;2017-03-17 13:33:53;A Jupyter extensions that turns notebooks into web applications.;A Jupyter extensions that turns notebooks into web applications.;;Python;['Python: 38.2%', 'JavaScript: 34.6%', 'Jupyter Notebook: 9.1%', 'Dockerfile: 8.4%', 'CSS: 4.8%', 'HTML: 4.2%', 'Shell: 0.7%'];MIT;https://github.com/oschuett/appmode;1.0;['pattern'];['Classification', 'RL'];['RL'];;2020-06-09 08:15:54;2020-12-19 22:22:40;348.0;0.584;appmode;
OSGeo;6;2014-07-30 20:27:17;Repository for OSGeo-Live Jupyter Notebooks;Repository for OSGeo-Live Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/OSGeo/OSGeoLive-Notebooks;0.8;['pattern'];['RL'];[];;2019-08-06 09:23:29;2020-12-20 09:46:54;21.0;0.371;OSGeoLive-Notebooks;
OTRF;0;2019-05-11 13:01:03;A collection of notebooks built for defensive and offensive operations.;A collection of notebooks built for defensive and offensive operations.;;Jupyter Notebook;['Jupyter Notebook: 99.3%', 'Other: 0.7%'];GPL-3.0;https://github.com/OTRF/notebooks-forge;0.8;['pattern'];['AI', 'ML'];[];;2020-10-13 16:08:54;2020-12-20 11:24:10;58.0;0.458;notebooks-forge;
PacktPublishing;3;2018-03-13 06:03:07;Jupyter Notebook for Data Science, published by Packt;Jupyter Notebook for Data Science, published by Packt;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/PacktPublishing/Jupyter-Notebook-for-Data-Science;1.0;['pattern', 'statsmodels'];['Linear Regression', 'ML', 'Recommender', 'Regression'];['ML', 'fit', 'linear regression', 'model', 'recommend', 'regression'];;2020-12-15 04:55:06;2020-12-20 10:07:33;16.0;0.346;Jupyter-Notebook-for-Data-Science;
PacktPublishing;5;2019-10-31 12:29:21;Practical Data Analysis using Jupyter Notebook, published by Packt Publishing;Practical Data Analysis using Jupyter Notebook, published by Packt Publishing;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/PacktPublishing/Practical-Data-Analysis-using-Jupyter-Notebook;1.0;['nltk', 'pattern', 'sklearn'];['Classification', 'NLP', 'Sentiment Analysis'];['AI', 'NLP', 'computer vision', 'model', 'sentiment analysis'];;2020-12-15 00:43:46;2020-12-20 10:32:07;15.0;0.34;Practical-Data-Analysis-using-Jupyter-Notebook;
pangeo-data;7;2018-06-18 14:58:14;Pangeo Example Notebooks;Pangeo Example Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/pangeo-data/pangeo-example-notebooks;0.8;['skimage', 'sklearn'];['CV', 'Classification', 'DL', 'K-Means', 'ML', 'RL'];[];;2020-05-25 19:51:43;2020-12-20 10:59:03;77.0;0.48;pangeo-example-notebooks;
parasharshah;0;2019-02-13 03:39:44;Notebook for workshop;Notebook for workshop;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/parasharshah/automl-handson;1.0;['sklearn'];['AutoML', 'Classification', 'ML', 'Regression'];['ML', 'RL', 'train'];;2019-08-06 06:03:08;2020-12-19 23:12:10;20.0;0.367;automl-handson;
park-python;2;2016-07-18 21:03:32;Slides and Jupyter notebooks;Slides and Jupyter notebooks;;Jupyter Notebook;['Jupyter Notebook: 97.0%', 'Python: 2.6%', 'CSS: 0.1%', 'JavaScript: 0.1%', 'HTML: 0.1%', 'Go: 0.1%'];BSD-3-Clause;https://github.com/park-python/course;0.8;['keras', 'pattern', 'sklearn', 'tensorflow', 'xgboost'];['DL', 'ML', 'RL', 'ReLu', 'Regression'];[];;2017-11-24 06:39:43;2020-12-19 23:26:48;29.0;0.4;course;
patrickvonplaten;0;2020-05-22 14:54:09;Some notebooks for NLP;Some notebooks for NLP;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/patrickvonplaten/notebooks;0.8;['pattern', 'pytorch', 'tensorflow', 'vocabulary'];['AI', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'ML', 'Machine Translation', 'NER', 'NLG', 'NLP', 'NLU', 'NN', 'RNN', 'ReLu', 'Recommender', 'ResNet', 'Sentiment Analysis', 'Speech Recognition'];[];;2020-12-21 08:19:46;2020-12-19 23:03:15;34.0;0.413;notebooks;
pbugnion;14;2014-12-01 09:12:06;Google maps for Jupyter notebooks;Google maps for Jupyter notebooks;;Python;['Python: 71.9%', 'JavaScript: 26.5%', 'CSS: 1.3%', 'Shell: 0.3%'];;https://github.com/pbugnion/gmaps;0.8;['pattern'];['AI', 'Classification', 'ML', 'RL'];[];;2020-10-13 07:09:18;2020-12-20 10:22:22;694.0;0.625;gmaps;
PegasusWang;0;2017-05-25 02:39:44;My jupyter notebooks Jupyter python markdown  ppt;My jupyter notebooksÃ£ÂÂÃ¤Â½Â¿Ã§ÂÂ¨ Jupyter python markdown Ã¥ÂÂ¶Ã¤Â½ÂÃ¥ÂÂÃ¤ÂºÂ« ppt;;Jupyter Notebook;['Jupyter Notebook: 79.0%', 'Python: 21.0%'];MIT;https://github.com/PegasusWang/notebooks;0.8;['pattern'];['RL'];[];;2019-01-27 10:30:29;2020-12-20 09:20:31;33.0;0.411;notebooks;
peterroelants;0;2018-02-03 18:51:12;Collection of notebooks;Collection of notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];;https://github.com/peterroelants/notebooks;1.0;['gensim', 'keras', 'pattern', 'pytorch', 'sklearn', 'spacy', 'tensorflow', 'theano', 'vocabulary', 'xgboost'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'GAN', 'K-Means', 'Linear Regression', 'ML', 'NLP', 'NN', 'Object Detection', 'RL', 'ReLu', 'Recommender', 'Rectifier', 'Regression', 'Speech Recognition'];['NLP', 'bayesian', 'linear regression', 'model', 'predict', 'regression'];;2020-04-04 11:39:14;2020-12-20 11:26:13;11.0;0.311;notebooks;
pgmpy;14;2014-11-18 16:44:03;Short Tutorial to Probabilistic Graphical Models(PGM) and pgmpy;Short Tutorial to Probabilistic Graphical Models(PGM) and pgmpy;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/pgmpy/pgmpy_notebook;0.8;['pattern', 'sklearn'];['AI', 'ANN', 'Bayesian', 'CV', 'Classification', 'DL', 'Decision Tree', 'GRU', 'KNN', 'Linear Regression', 'ML', 'NER', 'NLG', 'NLU', 'NN', 'RL', 'Regression', 'VGG'];[];;2020-11-02 14:43:49;2020-12-19 22:44:36;260.0;0.566;pgmpy_notebook;
piegu;0;2018-04-17 09:31:18;Jupyter notebooks that use the Fastai library;Jupyter notebooks that use the Fastai library;;Jupyter Notebook;['Jupyter Notebook: 99.5%', 'Other: 0.5%'];;https://github.com/piegu/fastai-projects;1.0;['keras', 'pattern', 'pytorch', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'AlexNet', 'CNN', 'CV', 'Classification', 'DL', 'LSTM', 'ML', 'Machine Translation', 'NLG', 'NLP', 'NLU', 'NN', 'RL', 'RNN', 'ReLu', 'ResNet', 'Sentiment Analysis', 'Text Classification', 'VGG'];['NLP', 'classif', 'deep learning', 'detect', 'filter', 'image classification', 'layer', 'model', 'predict', 'resnet', 'train', 'training data', 'validation data', 'vgg'];;2020-10-24 20:43:54;2020-12-20 10:15:53;47.0;0.44;fastai-projects;
pierpaolo28;0;2019-06-11 17:46:11;Collection of interactive Jupiter Notebook widgets and graphs.;Collection of interactive Jupiter Notebook widgets and graphs.;;Jupyter Notebook;['Jupyter Notebook: 96.0%', 'HTML: 3.5%', 'TeX: 0.5%', 'Python: 0.0%', 'JavaScript: 0.0%', 'CSS: 0.0%'];;https://github.com/pierpaolo28/Data-Visualization;1.0;['keras', 'pytorch', 'sklearn', 'statsmodels', 'tensorflow', 'tpot'];['AI', 'ANN', 'AlexNet', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GAN', 'GBM', 'GRU', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'Naive Bayes', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Regression', 'ResNet', 'VGG'];['ANN', 'CNN', 'NN', 'alexnet', 'artificial neural network', 'autoencoder', 'classif', 'convolutional neural network', 'deep learning', 'logistic regression', 'loss', 'machine learning', 'model', 'neural network', 'regression', 'train', 'vgg'];;2020-12-10 18:52:56;2020-12-20 10:31:08;82.0;0.485;Data-Visualization;
pierrelux;2;2014-02-21 03:37:35;An attempt to formalize my thoughts. A pythonic approach to mental housekeeping;An attempt to formalize my thoughts. A pythonic approach to mental housekeeping;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/pierrelux/notebooks;0.8;['nltk', 'sklearn', 'statsmodels', 'vocabulary'];['CV', 'Classification', 'Clustering', 'Logistic Regression', 'ML', 'NLP', 'ReLu', 'Recommender', 'Regression'];[];;2016-04-21 14:02:18;2020-12-19 22:49:36;14.0;0.334;notebooks;
PipelineAI;2;2020-03-16 20:22:05;O'Reilly Katacoda;O'Reilly Katacoda;;Python;['Python: 52.2%', 'Jupyter Notebook: 47.3%', 'Other: 0.5%'];;https://github.com/PipelineAI/katacoda-notebooks;1.0;['keras', 'pytorch', 'sklearn', 'tensorflow'];['AI', 'AutoML', 'Bayesian', 'Classification', 'DL', 'ML', 'NN', 'RL', 'ReLu', 'Recommender', 'Regression'];['AI', 'AutoML', 'ML', 'fit', 'machine learning', 'model', 'train'];;2020-11-13 18:58:57;2020-12-20 11:03:07;37.0;0.421;katacoda-notebooks;
PipelineAI;0;2017-11-15 21:22:05;Sample Notebooks for PipelineAI;Sample Notebooks for PipelineAI;;Jupyter Notebook;['Jupyter Notebook: 50.5%', 'Python: 48.7%', 'Other: 0.8%'];;https://github.com/PipelineAI/notebooks;1.0;['keras', 'pattern', 'pytorch', 'skimage', 'statsmodels', 'tensorflow', 'vocabulary'];['AI', 'CNN', 'CV', 'Classification', 'ML', 'NN', 'RL', 'ReLu', 'Recommender', 'Regression', 'ResNet'];['AI', 'GAN', 'classif', 'deep learning', 'epoch', 'fit', 'generative adversarial network', 'label', 'layer', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'recommend', 'test data', 'train', 'training data', 'unlabeled', 'validation data'];;2019-06-02 21:41:39;2020-12-20 09:40:00;42.0;0.431;notebooks;
pixiedust;23;2016-07-01 17:34:14;Python Helper library for Jupyter Notebooks;Python Helper library for Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 82.5%', 'Python: 10.4%', 'HTML: 4.9%', 'JavaScript: 1.6%', 'Scala: 0.2%', 'Makefile: 0.1%', 'Other: 0.3%'];Apache-2.0;https://github.com/pixiedust/pixiedust;1.0;['pattern'];['AI', 'Clustering', 'ML', 'NER', 'NLP', 'NN', 'Naive Bayes', 'RL', 'Recommender', 'Sentiment Analysis'];['ML', 'RL', 'predict', 'sentiment analysis'];;2020-12-09 19:12:17;2020-12-20 11:01:35;987.0;0.645;pixiedust;
planet-os;6;2016-04-25 23:42:56;A collection of Planet OS Jupyter notebooks.;A collection of Planet OS Jupyter notebooks.;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];MIT;https://github.com/planet-os/notebooks;1.0;['h2o', 'pattern'];['AI', 'CNN', 'CV', 'DL', 'GAN', 'GBM', 'GRU', 'KNN', 'ML', 'NER', 'NLG', 'NLP', 'NLU', 'NN', 'RL', 'RNN', 'Recommender', 'VGG'];['RL', 'model', 'recommend'];;2020-11-18 21:15:58;2020-12-20 09:53:22;76.0;0.479;notebooks;
planetlabs;20;2017-05-05 18:23:20;interactive notebooks from Planet Engineering;;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Other: 0.2%'];Apache-2.0;https://github.com/planetlabs/notebooks;1.0;['pattern', 'skimage', 'sklearn'];['AI', 'Anomaly Detection', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'K-Means', 'KNN', 'ML', 'NN', 'Object Detection', 'RL', 'Random Forest', 'Recommender', 'Supervised Learning'];['KNN', 'NN', 'RL', 'classif', 'detect', 'filter', 'ground truth', 'label', 'loss', 'random forest', 'recommend', 'train', 'training data'];;2020-12-14 08:37:15;2020-12-20 09:38:42;315.0;0.578;notebooks;
PlatformStories;2;2016-12-09 01:27:00;GBDX Stories notebooks.;GBDX Stories notebooks.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/PlatformStories/notebooks;0.8;['keras', 'sklearn'];['AI', 'CNN', 'Classification', 'DL', 'NN', 'RL', 'ReLu', 'Recommender', 'VGG'];[];;2017-11-10 00:11:34;2020-12-20 11:02:07;30.0;0.403;notebooks;
plotly;18;2013-11-24 16:29:35;A collection of data science IPython notebooks with Plotly graphs;A collection of data science IPython notebooks with Plotly graphs;;HTML;['HTML: 94.4%', 'Python: 5.6%'];;https://github.com/plotly/IPython-plotly;0.8;['pattern', 'sklearn'];['AI', 'ANN', 'Bayesian', 'Classification', 'Clustering', 'DL', 'K-Means', 'Linear Regression', 'ML', 'NN', 'RL', 'Recommender', 'Regression'];[];;2016-06-02 04:38:35;2020-12-20 01:59:29;251.0;0.564;IPython-plotly;
pmservice;8;2018-10-22 12:41:35;Watson OpenScale tutorials including sample models, notebooks and applications;Watson OpenScale tutorials including sample models, notebooks and applications;;Jupyter Notebook;['Jupyter Notebook: 97.5%', 'Python: 1.4%', 'Other: 1.1%'];;https://github.com/pmservice/ai-openscale-tutorials;1.0;['Pillow', 'keras', 'nltk', 'opencv-python', 'sklearn', 'tensorflow'];['AI', 'Classification', 'Logistic Regression', 'ML', 'Naive Bayes', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'ResNet'];['AI', 'ML', 'RL', 'classif', 'deep learning', 'detect', 'label', 'machine learning', 'model', 'natural language understanding', 'predict', 'recogn', 'regression', 'resnet'];;2020-11-10 15:19:57;2020-12-20 09:32:09;16.0;0.346;ai-openscale-tutorials;
pnavaro;0;2017-11-26 14:34:53;Scientific Computing with Python for beginners.;Scientific Computing with Python for beginners.;;Jupyter Notebook;['Jupyter Notebook: 95.6%', 'Python: 4.4%'];;https://github.com/pnavaro/python-notebooks;0.8;['pattern', 'sklearn'];['AI', 'ML', 'RL', 'Recommender'];[];;2020-09-19 08:39:08;2020-12-19 23:00:39;26.0;0.39;python-notebooks;
pranjalchaubey;0;2019-10-08 13:13:18;My personal notes, presentations, and notebooks on everything Deep Learning.;My personal notes, presentations, and notebooks on everything Deep Learning.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/pranjalchaubey/Deep-Learning-Notes;1.0;['pattern', 'pytorch', 'sklearn'];['AI', 'CNN', 'CV', 'Classification', 'DL', 'KNN', 'ML', 'NN', 'RNN', 'ReLu', 'Recommender', 'Regression', 'VGG'];['ML', 'classif', 'deep learning', 'image classification', 'neural network'];;2020-08-08 19:01:13;2020-12-19 23:35:15;184.0;0.543;Deep-Learning-Notes;
pratapvardhan;;2014-12-14 12:33:19;A collection of Jupyter/IPython notebooks;A collection of Jupyter/IPython notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];MIT;https://github.com/pratapvardhan/notebooks;1.0;['nltk', 'sklearn'];['AI', 'ML', 'RL', 'Sentiment Analysis'];['model'];;2020-12-20 04:06:26;2020-12-20 09:35:43;75.0;0.478;notebooks;
prathameshtari;0;2018-11-07 05:39:03;Football Match prediction using machine learning algorithms in jupyter notebook;Football Match prediction using machine learning algorithms in jupyter notebook;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/prathameshtari/Predicting-Football-Match-Outcome-using-Machine-Learning;1.0;['sklearn', 'xgboost'];['Classification', 'Linear Regression', 'Logistic Regression', 'ML', 'Naive Bayes', 'Regression', 'Supervised Learning', 'Support Vector Machines'];['layer', 'logistic regression', 'machine learning', 'naive bayes', 'predict', 'regression'];;2018-11-07 05:44:19;2020-12-19 22:22:36;48.0;0.442;Predicting-Football-Match-Outcome-using-Machine-Learning;
probcomp;2;2017-09-07 08:51:02;jupyter/datascience-notebook with probcomp libraries;jupyter/datascience-notebook with probcomp libraries;;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Julia: 0.2%', 'Python: 0.1%', 'Dockerfile: 0.0%', 'Shell: 0.0%', 'Makefile: 0.0%'];;https://github.com/probcomp/notebook;1.0;['pattern'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'Linear Regression', 'ML', 'NER', 'NN', 'Random Forest', 'Recommender', 'Regression'];['ML', 'recommend'];;2020-09-17 00:17:31;2020-12-20 10:11:43;17.0;0.352;notebook;
psinger;0;2015-04-21 15:21:37;Notebooks;Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/psinger/notebooks;0.8;['pattern', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'K-Means', 'Linear Regression', 'ML', 'NLP', 'Naive Bayes', 'Regression', 'Supervised Learning', 'Text Classification', 'Unsupervised learning'];[];;2019-02-13 17:04:24;2020-12-20 09:50:52;20.0;0.367;notebooks;
pybokeh;0;2015-02-14 22:48:42;Collection of jupyter notebooks;Collection of jupyter notebooks;;Jupyter Notebook;['Jupyter Notebook: 87.6%', 'HTML: 12.1%', 'JavaScript: 0.2%', 'Python: 0.1%', 'Smarty: 0.0%', 'CSS: 0.0%'];;https://github.com/pybokeh/jupyter_notebooks;1.0;['Pillow', 'gensim', 'keras', 'nltk', 'pattern', 'sklearn', 'spacy', 'statsmodels', 'tensorflow', 'textblob', 'theano', 'tpot', 'vocabulary', 'xgboost'];['AI', 'ANN', 'Anomaly Detection', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GBM', 'GRU', 'Gradient Boosting', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'Naive Bayes', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Sentiment Analysis', 'Supervised Learning', 'Support Vector Machines', 'Text Classification', 'Unsupervised learning'];['AI', 'ANN', 'CV', 'KNN', 'ML', 'NLP', 'NN', 'bayesian', 'classif', 'clustering', 'decision tree', 'detect', 'filter', 'fit', 'gru', 'image classification', 'k-means', 'k-nearest neighbor', 'label', 'linear regression', 'logistic regression', 'loss', 'machine learning', 'model', 'naive bayes', 'natural language processing', 'predict', 'random forest', 'rank', 'recogn', 'recommend', 'recommender', 'regression', 'reinforcement learning', 'supervised learning', 'support vector machines', 'train', 'unsupervised learning'];;2021-01-01 19:27:41;2020-12-19 22:54:43;122.0;0.514;jupyter_notebooks;
PYFTS;0;2018-11-01 14:09:56;Code examples for pyFTS;Code examples for pyFTS;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/PYFTS/notebooks;0.8;['pattern', 'statsmodels'];['AI', 'Recommender'];[];;2019-10-01 02:12:26;2020-12-20 10:24:20;20.0;0.367;notebooks;
pyHPC;5;2012-11-10 16:11:55;Python for HPC Tutorial Notebooks;Python for HPC Tutorial Notebooks;;TeX;['TeX: 85.5%', 'Python: 10.3%', 'C: 3.5%', 'Other: 0.7%'];;https://github.com/pyHPC/pyhpc-tutorial;1.0;['pattern'];['RL'];['DL', 'filter', 'fit', 'label', 'model', 'propagation', 'regression'];;2014-11-20 17:07:23;2020-12-19 23:11:56;47.0;0.44;pyhpc-tutorial;
pysal;10;2013-03-08 17:49:45;jupyter/ipython notebooks demonstrating PySAL functionality;jupyter/ipython notebooks demonstrating PySAL functionality;;Python;['Python: 88.5%', 'Jupyter Notebook: 8.9%', 'Dockerfile: 2.6%'];;https://github.com/pysal/notebooks;1.0;['pattern', 'sklearn', 'statsmodels'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'KNN', 'ML', 'NER', 'NN', 'Recommender'];['RL', 'classif', 'clustering', 'filter', 'fit', 'label', 'logistic regression', 'model', 'neural network', 'predict', 'rank', 'recommend', 'regression', 'train'];;2020-03-28 18:37:27;2020-12-19 23:36:08;52.0;0.449;notebooks;
PythonFreeCourse;6;2017-04-16 22:32:30;Learn Python for free using open-source notebooks in Hebrew.;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/PythonFreeCourse/Notebooks;1.0;['pattern'];['AI', 'GRU', 'ML', 'NN', 'RL'];['fit', 'label', 'loss'];;2020-11-29 23:59:32;2020-12-20 10:20:01;837.0;0.636;Notebooks;
Qiskit;131;2017-08-03 14:55:29;A collection of Jupyter notebooks showing how to use the Qiskit SDK;A collection of Jupyter notebooks showing how to use the Qiskit SDK;;Jupyter Notebook;['Jupyter Notebook: 99.5%', 'Other: 0.5%'];Apache-2.0;https://github.com/Qiskit/qiskit-tutorials;1.0;['pattern'];['CV', 'Classification', 'Clustering', 'DL', 'GAN', 'Linear Regression', 'ML', 'NER', 'NN', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines'];['ML', 'label', 'recommend'];;2020-12-29 22:31:46;2020-12-20 09:37:29;1440.0;0.664;qiskit-tutorials;
qiskit-community;48;2019-07-10 22:27:25;A collection of Jupyter notebooks developed by the community showing how to use Qiskit;A collection of Jupyter notebooks developed by the community showing how to use Qiskit;;Jupyter Notebook;['Jupyter Notebook: 97.5%', 'TeX: 1.8%', 'Other: 0.7%'];Apache-2.0;https://github.com/qiskit-community/qiskit-community-tutorials;1.0;['h2o', 'pattern', 'sklearn', 'vocabulary'];['AI', 'ANN', 'Bayesian', 'Boltzmann Machine', 'CV', 'Classification', 'Clustering', 'DL', 'GRU', 'K-Means', 'ML', 'NER', 'NN', 'RL', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];['artificial intelligence', 'detect', 'fit', 'k-means', 'machine learning', 'model', 'supervised learning', 'train', 'unsupervised learning'];;2020-12-18 17:47:51;2020-12-20 10:29:25;253.0;0.564;qiskit-community-tutorials;
qtangs;0;2019-08-18 16:19:24;Docker images that replicate the Amazon SageMaker Notebook instance.;Docker images that replicate the Amazon SageMaker Notebook instance.;;Python;['Python: 41.0%', 'JavaScript: 24.4%', 'Shell: 16.7%', 'Dockerfile: 14.6%', 'CSS: 3.3%'];MIT;https://github.com/qtangs/sagemaker-notebook-container;1.0;['mxnet', 'pytorch', 'tensorflow'];['AI', 'DL', 'GRU', 'ML', 'RL'];['AI', 'ML', 'NER', 'recommend', 'train'];;2020-12-28 00:08:42;2020-12-20 09:22:30;39.0;0.425;sagemaker-notebook-container;
QuantConnect;10;2017-10-16 18:23:52;Open sourced research notebooks by the QuantConnect team.;Open sourced research notebooks by the QuantConnect team.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/QuantConnect/Research;1.0;['keras', 'sklearn', 'statsmodels', 'tensorflow'];['AI', 'CV', 'Classification', 'DL', 'LSTM', 'Linear Regression', 'ML', 'NN', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Regression', 'Supervised Learning'];['CV', 'filter', 'model', 'random forest', 'regression'];;2020-09-23 18:41:51;2020-12-19 23:09:24;162.0;0.534;Research;
QuantConnect;37;2017-07-28 15:48:29;Jupyter notebook tutorials from QuantConnect website for Python, Finance and LEAN.;Jupyter notebook tutorials from QuantConnect website for Python, Finance and LEAN.;;Jupyter Notebook;['Jupyter Notebook: 78.1%', 'HTML: 21.1%', 'PHP: 0.8%'];Apache-2.0;https://github.com/QuantConnect/Tutorials;1.0;['statsmodels'];['CV', 'ML', 'Regression'];['ML', 'RL', 'filter'];;2020-12-08 21:49:01;2020-12-19 22:46:50;298.0;0.575;Tutorials;
QuantEcon;0;2020-03-10 02:52:11;Notebooks for https://python-programming.quantecon.org;Notebooks for https://python-programming.quantecon.org;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Learn more about GitHub Sponsors;https://github.com/QuantEcon/lecture-python-programming.notebooks;0.8;['statsmodels'];['AI', 'Bayesian', 'CV', 'Linear Regression', 'ML', 'RL', 'Recommender', 'Regression'];[];;2020-12-23 04:08:41;2020-12-20 10:59:42;46.0;0.439;lecture-python-programming.notebooks;
QuantEcon;0;2020-03-11 03:16:24;Notebooks for https://python.quantecon.org;Notebooks for https://python.quantecon.org;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Learn more about GitHub Sponsors;https://github.com/QuantEcon/lecture-python.notebooks;0.8;['pattern', 'sklearn', 'statsmodels'];['AI', 'Bayesian', 'Classification', 'Clustering', 'DL', 'Linear Regression', 'ML', 'RL', 'Recommender', 'Regression'];[];;2021-01-02 04:45:01;2020-12-20 11:02:05;121.0;0.514;lecture-python.notebooks;
QuantEcon;3;2019-08-17 05:23:42;Jupyter Notebooks for https://datascience.quantecon.org;Jupyter Notebooks for https://datascience.quantecon.org;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Learn more about GitHub Sponsors;https://github.com/QuantEcon/quantecon-notebooks-datascience;0.8;['gensim', 'mxnet', 'nltk', 'pattern', 'pytorch', 'sklearn', 'statsmodels', 'tensorflow', 'xgboost'];['AI', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GRU', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'Recommender', 'Regression', 'Speech Recognition', 'Supervised Learning', 'Unsupervised learning'];[];;2020-07-23 00:11:35;2020-12-20 11:02:46;38.0;0.423;quantecon-notebooks-datascience;
QuantEcon;3;2019-08-22 22:11:11;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/QuantEcon/quantecon-notebooks-julia;0.8;['pattern'];['AI', 'Bayesian', 'Classification', 'Clustering', 'DL', 'Linear Regression', 'ML', 'NN', 'RL', 'Recommender', 'Regression'];[];;2020-07-24 03:11:37;2020-12-20 10:59:01;73.0;0.476;quantecon-notebooks-julia;
QuantEcon;2;2018-12-19 22:37:38;A Repository of Notebooks for the Python Lecture Site;A Repository of Notebooks for the Python Lecture Site;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Learn more about GitHub Sponsors;https://github.com/QuantEcon/quantecon-notebooks-python;0.8;['pattern', 'sklearn', 'statsmodels', 'theano'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'Linear Regression', 'ML', 'RL', 'Recommender', 'Regression'];[];;2020-11-29 11:15:55;2020-12-20 11:27:34;180.0;0.541;quantecon-notebooks-python;
QuantEcon;16;2015-11-17 20:48:50;Jupyter notebooks contributed by QuantEcon developers, users and the community;Jupyter notebooks contributed by QuantEcon developers, users and the community;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];BSD-3-Clause;https://github.com/QuantEcon/QuantEcon.notebooks;0.8;['pattern', 'sklearn'];['AI', 'Bayesian', 'Classification', 'DL', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'RL', 'Recommender', 'Regression'];[];;2020-04-20 04:08:36;2020-12-20 11:27:56;111.0;0.507;QuantEcon.notebooks;
QuantEcon;11;2017-10-12 04:04:05;A Sphinx Extension for Generating Jupyter Notebooks;A Sphinx Extension for Generating Jupyter Notebooks;;Python;['Python: 35.2%', 'Jupyter Notebook: 23.8%', 'Smarty: 12.5%', 'HTML: 10.5%', 'JavaScript: 9.7%', 'CSS: 7.7%', 'Other: 0.6%'];BSD-3-Clause;https://github.com/QuantEcon/sphinxcontrib-jupyter;0.8;['pattern'];['AI', 'Classification', 'ML', 'NER', 'Regression'];[];;2020-06-19 16:52:56;2020-12-20 11:02:27;67.0;0.469;sphinxcontrib-jupyter;
quantopian;22;2014-09-30 04:33:20;An interactive grid for sorting, filtering, and editing DataFrames in Jupyter notebooks;An interactive grid for sorting, filtering, and editing DataFrames in Jupyter notebooks;;Python;['Python: 64.4%', 'JavaScript: 28.8%', 'CSS: 6.8%'];Apache-2.0;https://github.com/quantopian/qgrid;0.8;['pattern'];['Classification', 'ML', 'RL', 'Recommender'];[];;2020-10-30 18:13:29;2020-12-20 09:41:16;2485.0;0.69;qgrid;
quantsense;0;2019-11-03 05:58:17;Jupyter Notebooks Collection for Learning Time Series Models;Jupyter Notebooks Collection for Learning Time Series Models;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/quantsense/TimeSeries_Notebooks_Collections;1.0;['pattern', 'sklearn', 'statsmodels'];['AI', 'ML', 'NN', 'Regression'];['model'];;2019-11-03 17:09:18;2020-12-19 23:14:08;24.0;0.383;TimeSeries_Notebooks_Collections;
QuantStack;3;2019-11-18 13:14:01;3-D Scientific Visualization in the Jupyter Notebook;3-D Scientific Visualization in the Jupyter Notebook;;Python;['Python: 69.7%', 'TypeScript: 27.9%', 'JavaScript: 2.4%'];BSD-3-Clause;https://github.com/QuantStack/ipygany;0.8;['pattern'];['Classification', 'Clustering', 'GBM', 'ML'];[];;2020-12-14 07:33:02;2020-12-19 22:39:54;230.0;0.558;ipygany;
qutip;22;2013-09-21 07:59:47;A collection of IPython notebooks using QuTiP: examples, tutorials, development test, etc.;A collection of IPython notebooks using QuTiP: examples, tutorials, development test, etc.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];LGPL-3.0;https://github.com/qutip/qutip-notebooks;1.0;['pattern'];['DL', 'GRU', 'ML', 'NN', 'RL', 'Recommender', 'Regression'];['ML'];;2020-12-07 16:29:56;2020-12-19 23:43:37;133.0;0.52;qutip-notebooks;
R-ArcGIS;3;2018-07-03 20:36:19;Jupyter notebooks demonstrating setup and use of the R-ArcGIS bridge. The repo includes datasets required to run the Jupyter notebooks.;Jupyter notebooks demonstrating setup and use of the R-ArcGIS bridge. The repo includes datasets required to run the Jupyter notebooks.;;Jupyter Notebook;['Jupyter Notebook: 98.1%', 'R: 1.8%', 'Batchfile: 0.1%'];;https://github.com/R-ArcGIS/R-Bridge-Tutorial-Notebooks;0.8;['pattern', 'xgboost'];['Logistic Regression', 'ML', 'Regression'];[];;2019-10-12 00:21:31;2020-12-19 23:11:50;35.0;0.416;R-Bridge-Tutorial-Notebooks;
r9y9;3;2018-04-08 12:11:32;Colaboratory notebooks;Colaboratory notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/r9y9/Colaboratory;0.8;['keras', 'nltk', 'pytorch', 'tensorflow'];['GAN', 'NN'];[];;2020-09-10 04:27:43;2020-12-19 22:49:47;10.0;0.302;Colaboratory;
rambasnet;2;2017-09-12 06:00:16;Jupyter Notebooks for How to Think Like a Computer Scientist - Learning with Python 3 (RLE) Textbook;Jupyter Notebooks for How to Think Like a Computer Scientist - Learning with Python 3 (RLE) Textbook;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Other: 0.2%'];;https://github.com/rambasnet/Python-Notebooks;1.0;['nltk', 'pattern'];['ML', 'Recommender', 'Regression'];['RL', 'filter', 'recommend'];;2020-11-19 18:07:06;2020-12-19 23:45:20;16.0;0.346;Python-Notebooks;
rapidsai-community;43;2019-02-22 18:21:16;RAPIDS Community Notebooks;;;Jupyter Notebook;['Jupyter Notebook: 95.9%', 'HTML: 3.3%', 'Other: 0.8%'];Apache-2.0;https://github.com/rapidsai-community/notebooks-contrib;1.0;['keras', 'nltk', 'pattern', 'pytorch', 'skimage', 'sklearn', 'tensorflow', 'vocabulary', 'xgboost'];['AI', 'Anomaly Detection', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GRU', 'Gradient Boosting', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'Naive Bayes', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning', 'Unsupervised learning'];['AI', 'DL', 'ML', 'NLP', 'NN', 'RL', 'RNN', 'anomaly', 'anomaly detection', 'classif', 'clustering', 'convolutional neural network', 'deep learning', 'detect', 'filter', 'fit', 'ground truth', 'label', 'linear regression', 'machine learning', 'model', 'neural network', 'predict', 'random forest', 'rank', 'recogn', 'recommend', 'recommender', 'regression', 'supervised learning', 'test data', 'train'];;2020-12-18 19:38:30;2020-12-19 23:47:51;298.0;0.575;notebooks-contrib;
ravichaubey;0;2020-07-21 06:00:06;Tutorial on Diverse topics using Python and R from wide range of Data Science Methodology. Learn different tpyes of Supervised, Unsupervised and other Machine Learning Algorithms.;Tutorial on Diverse topics using Python and R from wide range of Data Science Methodology. Learn different tpyes of Supervised, Unsupervised and other Machine Learning Algorithms.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/ravichaubey/Kaggle-Notebooks;1.0;['keras', 'nltk', 'pattern', 'sklearn', 'statsmodels', 'tensorflow', 'vocabulary', 'xgboost'];['AI', 'ANN', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'Object Detection', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Sentiment Analysis', 'Speech Recognition', 'Supervised Learning', 'Unsupervised learning'];['ANN', 'KNN', 'NLP', 'NN', 'RNN', 'classif', 'clustering', 'computer vision', 'convolutional neural network', 'deep learning', 'detect', 'fit', 'k-means', 'layer', 'linear regression', 'logistic regression', 'machine learning', 'model', 'natural language processing', 'neural network', 'neuron', 'object detection', 'predict', 'rank', 'recogn', 'recommend', 'regression', 'sentiment analysis', 'speech recognition', 'train'];;2020-10-04 14:06:48;2020-12-19 23:29:29;32.0;0.408;Kaggle-Notebooks;
rayheberer;0;2018-04-02 16:08:29;Completed assignments and coding challenges from the Lambda School Data Science program.;Completed assignments and coding challenges from the Lambda School Data Science program.;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.1%', 'C: 0.1%', 'HTML: 0.0%', 'TeX: 0.0%', 'Dockerfile: 0.0%'];MIT;https://github.com/rayheberer/LambdaSchoolDataScience;1.0;['gensim', 'keras', 'nltk', 'opencv-python', 'pattern', 'skimage', 'sklearn', 'statsmodels', 'tensorflow', 'textblob', 'vocabulary'];['AI', 'ANN', 'AlexNet', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GRU', 'Gradient Boosting', 'K-Means', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Rectifier', 'Regression', 'ResNet', 'Sentiment Analysis', 'Supervised Learning'];['AI', 'CNN', 'CV', 'ML', 'NER', 'NN', 'RL', 'classif', 'clustering', 'computer vision', 'convolutional neural network', 'detect', 'epoch', 'filter', 'fit', 'gradient descent', 'hidden layer', 'k-means', 'label', 'layer', 'linear regression', 'logistic regression', 'loss', 'machine learning', 'model', 'naive bayes', 'natural language processing', 'neural network', 'object detection', 'predict', 'propagation', 'random forest', 'rank', 'recogn', 'recommend', 'recommender', 'regression', 'reinforcement learning', 'resnet', 'reward', 'sentiment analysis', 'supervised learning', 'train', 'training data', 'unsupervised learning', 'vgg'];;2020-01-10 18:08:43;2020-12-19 22:52:51;22.0;0.375;LambdaSchoolDataScience;
rdcolema;0;2017-02-05 14:34:34;Scripts/notebooks for The Nature Conservancy's fish classification competition;Scripts/notebooks for The Nature Conservancy's fish classification competition;;Jupyter Notebook;['Jupyter Notebook: 98.9%', 'Python: 1.1%'];;https://github.com/rdcolema/nc-fish-classification;1.0;['keras', 'skimage', 'sklearn', 'tensorflow', 'xgboost'];['AI', 'AlexNet', 'CNN', 'CV', 'Classification', 'NN', 'ReLu', 'ResNet', 'VGG'];['CNN', 'NN', 'classif', 'detect', 'filter', 'fit', 'gradient boosting', 'image segmentation', 'label', 'loss', 'model', 'predict', 'resnet', 'test data', 'train', 'vgg'];;2017-03-23 15:11:29;2020-12-20 09:29:05;69.0;0.471;nc-fish-classification;
rdipietro;0;2016-03-31 18:15:12;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/rdipietro/jupyter-notebooks;0.8;['pytorch', 'tensorflow'];['AI', 'CV', 'Classification', 'DL', 'GRU', 'LSTM', 'ML', 'NN', 'RNN', 'ReLu', 'Recommender', 'Supervised Learning', 'Unsupervised learning'];[];;2018-04-21 18:53:43;2020-12-20 10:17:17;81.0;0.484;jupyter-notebooks;
renelikestacos;0;2016-05-25 23:52:24;Various examples for Google Earth Engine in Python using Jupyter Notebook;Various examples for Google Earth Engine in Python using Jupyter Notebook;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/renelikestacos/Google-Earth-Engine-Python-Examples;1.0;['pattern', 'sklearn', 'statsmodels'];['AI', 'CV', 'Classification', 'Linear Regression', 'NN', 'Recommender', 'Regression'];['classif', 'linear regression', 'machine learning', 'model', 'predict', 'regression', 'train', 'training data'];;2020-12-29 12:03:14;2020-12-20 10:21:18;196.0;0.547;Google-Earth-Engine-Python-Examples;
renero;0;2019-01-20 09:56:03;Notebooks used in ML2 sessions;Notebooks used in ML2 sessions;;Jupyter Notebook;['Jupyter Notebook: 96.6%', 'Python: 2.4%', 'TeX: 1.0%'];;https://github.com/renero/class_notebooks;1.0;['sklearn', 'statsmodels'];['Bayesian', 'CV', 'Classification', 'Decision Tree', 'Gradient Boosting', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines'];['RL', 'model', 'recommend'];;2020-09-15 13:50:48;2020-12-20 09:40:08;9.0;0.292;class_notebooks;
ResearchComputing;3;2015-07-09 22:01:50;Tutorial on the IPython notebook;Tutorial on the IPython notebook;;Shell;['Shell: 100.0%'];MIT;https://github.com/ResearchComputing/xsede_2015;0.8;['sklearn'];['ML', 'Recommender'];[];;2015-07-30 02:51:30;2020-12-20 09:45:16;31.0;0.405;xsede_2015;
rguthrie3;0;2017-03-04 18:50:58;An IPython Notebook tutorial on deep learning for natural language processing, including structure prediction.;An IPython Notebook tutorial on deep learning for natural language processing, including structure prediction.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/rguthrie3/DeepLearningForNLPInPytorch;1.0;['pattern', 'pytorch', 'vocabulary'];['AI', 'Classification', 'DL', 'LSTM', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'RNN', 'ReLu', 'Regression'];['NLP', 'NN', 'RNN', 'classif', 'computer vision', 'deep learning', 'logistic regression', 'loss', 'lstm', 'model', 'natural language processing', 'predict', 'recogn', 'regression', 'train'];;2019-11-12 01:55:30;2020-12-20 11:09:29;1662.0;0.671;DeepLearningForNLPInPytorch;
rickecon;0;2018-07-02 05:00:50;Jupyter notebooks authored by Richard Evans;Jupyter notebooks authored by Richard Evans;;Jupyter Notebook;['Jupyter Notebook: 99.3%', 'TeX: 0.7%'];;https://github.com/rickecon/Notebooks;0.8;['pattern', 'sklearn', 'statsmodels'];['Bayesian', 'CV', 'Classification', 'Clustering', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'Random Forest', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];[];;2020-10-06 17:57:53;2020-12-20 10:42:48;21.0;0.371;Notebooks;
rickiepark;0;2016-04-13 09:00:06;Notebooks of TensorFlow Korea (https://tensorflowkorea.wordpress.com);Notebooks of TensorFlow Korea (https://tensorflowkorea.wordpress.com);;Jupyter Notebook;['Jupyter Notebook: 86.0%', 'C++: 7.5%', 'Shell: 3.7%', 'Python: 2.4%', 'Other: 0.4%'];MIT;https://github.com/rickiepark/tfk-notebooks;0.8;['h2o', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'ANN', 'CNN', 'CV', 'Classification', 'DL', 'GAN', 'GBM', 'GRU', 'KNN', 'LSTM', 'ML', 'NER', 'NN', 'RL', 'RNN', 'ReLu', 'Regression', 'VGG'];[];;2017-06-29 09:52:36;2020-12-20 09:28:35;42.0;0.431;tfk-notebooks;
rickyzhang82;0;2020-01-18 22:41:55;Notebook demo V2Ray traffic classification by deep packet inspection;Notebook demo V2Ray traffic classification by deep packet inspection;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/rickyzhang82/V2Ray-Deep-Packet-Inspection;1.0;['keras', 'pattern', 'sklearn', 'tensorflow'];['AI', 'Classification', 'ReLu'];['classif', 'model', 'train'];;2020-03-12 03:16:08;2020-12-20 10:08:57;113.0;0.509;V2Ray-Deep-Packet-Inspection;
riddhishb;5;2016-05-14 03:39:35;ipython-notebooks on popular algorithms meant to be used at technical sessions for IITB students;ipython-notebooks on popular algorithms meant to be used at technical sessions for IITB students;;Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Other: 0.4%'];GPL-3.0;https://github.com/riddhishb/ipython-notebooks;1.0;['pattern', 'skimage', 'sklearn'];['ANN', 'CV', 'Classification', 'Clustering', 'Linear Regression', 'ML', 'NN', 'Recommender', 'Regression'];['CV', 'recogn'];;2017-04-09 14:39:12;2020-12-19 23:32:31;27.0;0.393;ipython-notebooks;
risenW;0;2018-11-15 12:43:18;This is a repository of python notebooks used in my blog posts on medium.;This is a repository of python notebooks used in my blog posts on medium.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/risenW/medium_tutorial_notebooks;0.8;['catboost', 'keras', 'lightgbm', 'sklearn', 'xgboost'];['AI', 'Classification', 'DL', 'Decision Tree', 'GBM', 'Gradient Boosting', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'ResNet'];[];;2020-08-07 12:43:30;2020-12-20 11:22:36;41.0;0.429;medium_tutorial_notebooks;
rmanthey99;0;2018-03-29 23:37:00;Jupyter Notebooks from Perian Data Udemy Course;Jupyter Notebooks from Perian Data Udemy Course;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];;https://github.com/rmanthey99/UdemyPython;1.0;['pattern'];['DL', 'ML', 'Recommender'];['ML', 'layer'];;2018-06-04 20:22:16;2020-12-20 11:28:01;17.0;0.352;UdemyPython;
roemmele;0;2017-04-28 23:51:18;Python notebooks that demonstrate simple RNN models for NLP tasks using Keras;Python notebooks that demonstrate simple RNN models for NLP tasks using Keras;;Jupyter Notebook;['Jupyter Notebook: 55.5%', 'Python: 44.5%'];;https://github.com/roemmele/keras-rnn-notebooks;1.0;['keras', 'nltk', 'sklearn', 'spacy', 'tensorflow', 'theano', 'vocabulary'];['AI', 'Classification', 'DL', 'GRU', 'LSTM', 'ML', 'Machine Translation', 'NER', 'NLP', 'NN', 'RNN', 'Regression', 'Sentiment Analysis', 'Speech Recognition'];['NLP', 'machine learning', 'model', 'natural language processing', 'neural network', 'predict', 'recurrent neural network', 'train'];;2018-11-27 18:16:00;2020-12-19 22:52:10;37.0;0.421;keras-rnn-notebooks;
rookiepeng;2;2018-10-16 17:36:07;;;;Jupyter Notebook;['Jupyter Notebook: 52.3%', 'HTML: 47.7%'];;https://github.com/rookiepeng/radar-simulation-notebooks;0.7;['pattern'];[];['model'];;2020-12-21 21:31:55;2020-12-19 23:41:28;25.0;0.387;radar-simulation-notebooks;
root-project;2;2017-03-14 08:18:36;The interactive ROOT Primer based on Jupyter notebooks;The interactive ROOT Primer based on Jupyter notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Other: 0.2%'];;https://github.com/root-project/NotebookPrimer;0.8;['pattern'];['ANN', 'Classification', 'NN', 'Recommender'];[];;2017-11-30 15:09:25;2020-12-20 09:50:49;26.0;0.39;NotebookPrimer;
RosettaCommons;13;2019-05-24 20:53:28;Jupyter Notebooks for learning the PyRosetta platform for biomolecular structure prediction and design;Jupyter Notebooks for learning the PyRosetta platform for biomolecular structure prediction and design;;Jupyter Notebook;['Jupyter Notebook: 96.6%', 'Scala: 3.3%', 'Other: 0.1%'];MIT;https://github.com/RosettaCommons/PyRosetta.notebooks;1.0;['pattern'];['Classification', 'Clustering', 'DL', 'GAN', 'ML', 'NER', 'RL', 'ReLu', 'Recommender'];['ML', 'RL', 'classif', 'clustering', 'fit', 'label', 'layer', 'model', 'predict', 'train'];;2020-09-29 23:24:20;2020-12-20 11:22:33;96.0;0.497;PyRosetta.notebooks;
rossant;7;2014-12-13 13:38:07;Use the IPython notebook as an interactive Markdown editor;Use the IPython notebook as an interactive Markdown editor;;Python;['Python: 99.6%', 'Makefile: 0.4%'];BSD-3-Clause;https://github.com/rossant/ipymd;1.0;['pattern'];['AI', 'Classification', 'ML', 'NN', 'RL'];['ML'];;2018-02-16 11:23:34;2020-12-19 23:34:58;472.0;0.603;ipymd;
rougier;36;2014-05-27 04:09:47;100 numpy exercises (with solutions);100 numpy exercises (with solutions);;Python;['Python: 100.0%'];MIT;https://github.com/rougier/numpy-100;1.0;['pattern'];['Recommender'];['rank', 'recommend'];;2020-12-29 16:38:05;2020-12-20 10:21:24;6103.0;0.73;numpy-100;
rsignell-usgs;0;2016-12-21 22:45:07;A collection of Jupyter notebooks;A collection of Jupyter notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.3%', 'Other: 0.7%'];MIT;https://github.com/rsignell-usgs/notebook;1.0;['pattern', 'vocabulary'];['AI', 'Classification', 'DL', 'ML', 'NER', 'RL', 'Recommender'];['test data'];;2018-02-08 21:33:15;2020-12-19 23:02:02;16.0;0.346;notebook;
rtidatascience;2;2016-08-15 13:44:38;Repository for code and notebooks for the a NetworkX Tutorial;Repository for code and notebooks for the a NetworkX Tutorial;;HTML;['HTML: 75.1%', 'Jupyter Notebook: 24.9%'];MIT;https://github.com/rtidatascience/connected-nx-tutorial;0.8;['pattern'];['Classification', 'ML'];[];;2016-09-14 11:16:36;2020-12-19 23:33:50;60.0;0.46;connected-nx-tutorial;
sachinruk;10;2016-12-04 11:10:09;Deep Learning tutorials in jupyter notebooks.;Deep Learning tutorials in jupyter notebooks.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/sachinruk/deepschool.io;1.0;['Pillow', 'keras', 'nltk', 'pattern', 'sklearn', 'spacy', 'tensorflow', 'theano', 'vocabulary', 'xgboost'];['AI', 'Bayesian', 'CNN', 'CV', 'Chatbot', 'Classification', 'DL', 'GAN', 'GRU', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'Pix2Pix', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Sentiment Analysis', 'Support Vector Machines', 'VGG'];['CNN', 'DL', 'NN', 'activation function', 'bayesian', 'classif', 'deep learning', 'epoch', 'fit', 'generative adversarial network', 'gradient descent', 'hidden layer', 'layer', 'loss', 'lstm', 'model', 'predict', 'recommend', 'regression', 'relu', 'sentiment analysis', 'train'];;2020-11-13 17:47:14;2020-12-19 23:18:45;1750.0;0.674;deepschool.io;
sagemath;58;2011-12-20 19:56:02;Sage Notebook (flask), docs in $SAGE_LOCAL/share/doc/sagenb/index.html;Sage Notebook (flask), docs in $SAGE_LOCAL/share/doc/sagenb/index.html;;Python;['Python: 46.4%', 'JavaScript: 33.4%', 'HTML: 12.9%', 'CSS: 6.8%', 'Java: 0.3%', 'Roff: 0.1%', 'Other: 0.1%'];;https://github.com/sagemath/sagenb;1.0;['pattern'];['AI', 'ANN', 'ML', 'NER', 'NN', 'RL', 'Recommender'];['RL'];;2020-06-17 21:52:49;2020-12-20 10:25:13;113.0;0.509;sagenb;
samuelleach;0;2017-02-20 18:10:04;Python notebooks for demonstrating various ideas, APIs, libraries.;Python notebooks for demonstrating various ideas, APIs, libraries.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/samuelleach/python-notebooks;1.0;['pattern'];['Bayesian', 'Classification', 'RL'];['fit'];;2017-07-29 10:41:37;2020-12-19 22:58:20;25.0;0.387;python-notebooks;
sanand0;0;2013-08-18 03:38:26;;;;Jupyter Notebook;['Jupyter Notebook: 93.0%', 'Python: 7.0%'];;https://github.com/sanand0/ipython-notebooks;0.8;['nltk', 'pattern', 'sklearn', 'spacy', 'vocabulary'];['CNN', 'DL', 'ML', 'NN', 'RL'];[];;2018-11-05 03:24:44;2020-12-20 09:33:22;62.0;0.463;ipython-notebooks;
sanzgiri;0;2017-09-05 01:40:24;Jupyter notebooks from deeplearning.ai coursera specialization;Jupyter notebooks from deeplearning.ai coursera specialization;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/sanzgiri/deeplearning.ai;0.8;['caffe', 'keras', 'pattern', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'AlexNet', 'CNN', 'CV', 'Chatbot', 'Classification', 'DL', 'GRU', 'LSTM', 'Logistic Regression', 'ML', 'Machine Translation', 'NER', 'NLP', 'NN', 'Object Detection', 'RNN', 'ReLu', 'Recommender', 'Regression', 'ResNet', 'Speech Recognition', 'Supervised Learning', 'VGG'];[];;2018-07-19 04:36:24;2020-12-19 22:49:23;26.0;0.39;deeplearning.ai;
sat28;4;2018-01-11 17:35:26;A jupyter notebook extension enabling users push ipython notebooks to a git repo;A jupyter notebook extension enabling users push ipython notebooks to a git repo;;Python;['Python: 50.3%', 'JavaScript: 38.1%', 'Shell: 11.6%'];MIT;https://github.com/sat28/githubcommit;1.0;['pattern'];['RL'];['AI'];;2020-09-23 14:53:18;2020-12-19 22:31:31;106.0;0.504;githubcommit;
scipy;26;2016-04-30 17:14:08;Scipy Cookbook;Scipy Cookbook;;Jupyter Notebook;['Jupyter Notebook: 91.2%', 'Python: 8.0%', 'C: 0.5%', 'Lasso: 0.1%', 'SWIG: 0.1%', 'MATLAB: 0.1%'];;https://github.com/scipy/scipy-cookbook;1.0;['pattern'];['AI', 'Linear Regression', 'ML', 'NER', 'NN', 'RL', 'Recommender', 'Regression'];['ML'];;2020-08-30 19:33:02;2020-12-20 11:28:15;318.0;0.579;scipy-cookbook;
scoutbee;3;2019-03-11 12:05:06;Learn how to use PyTorch to solve some common NLP problems with deep learning.;Learn how to use PyTorch to solve some common NLP problems with deep learning.;;Jupyter Notebook;['Jupyter Notebook: 99.1%', 'Python: 0.9%'];;https://github.com/scoutbee/pytorch-nlp-notebooks;1.0;['nltk', 'pytorch', 'sklearn', 'vocabulary'];['AI', 'Classification', 'DL', 'GRU', 'ML', 'Machine Translation', 'NLP', 'NN', 'RNN', 'ReLu', 'Recommender', 'Supervised Learning', 'Text Classification', 'Unsupervised learning'];['NLP', 'NN', 'RNN', 'classif', 'deep learning', 'loss', 'model', 'predict', 'train'];;2019-11-18 07:44:02;2020-12-19 23:33:04;282.0;0.571;pytorch-nlp-notebooks;
sean-parent;1;2018-01-05 23:22:14;;;;HTML;['HTML: 24.7%', 'C++: 20.7%', 'Shell: 19.1%', 'CSS: 11.6%', 'Dockerfile: 11.5%', 'JavaScript: 11.3%', 'Python: 1.1%'];;https://github.com/sean-parent/notebook;1.0;['pattern'];['DL', 'ML', 'Recommender'];['ML', 'model'];;2020-12-29 17:50:24;2020-12-19 23:59:46;19.0;0.362;notebook;
seranus;4;2019-02-19 01:35:32;Repository contains Google colab notebooks used for faceswaping;Repository contains Google colab notebooks used for faceswaping;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/seranus/faceswap-notebooks;0.8;['keras', 'tensorflow'];['AI', 'ML'];[];;2019-12-10 19:13:56;2020-12-19 23:18:26;20.0;0.367;faceswap-notebooks;
sergiogama;0;2018-11-12 14:40:05;Notebook jupyter in Watson Studio;Notebook jupyter in Watson Studio;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/sergiogama/notebook;0.8;['nltk', 'sklearn', 'tensorflow'];['AI', 'Chatbot', 'Classification', 'ML', 'RL', 'Recommender', 'Regression'];[];;2020-09-05 16:27:43;2020-12-19 23:33:43;10.0;0.302;notebook;
sgugger;0;2018-03-19 21:45:05;A few notebooks about deep learning in pytorch;A few notebooks about deep learning in pytorch;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];;https://github.com/sgugger/Deep-Learning;1.0;['pytorch', 'sklearn', 'vocabulary'];['CNN', 'Classification', 'LSTM', 'NN', 'RNN', 'ReLu', 'ResNet', 'VGG'];['deep learning', 'train'];;2019-03-18 15:25:52;2020-12-19 22:26:55;484.0;0.605;Deep-Learning;
shakedzy;2;2018-03-01 19:42:52;Some notebooks;Some notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/shakedzy/notebooks;1.0;['keras', 'sklearn', 'tensorflow'];['AI', 'Classification', 'NN', 'RL', 'Random Forest', 'ReLu'];['hidden layer', 'layer', 'model', 'predict', 'reinforcement learning'];;2020-04-26 06:31:54;2020-12-20 11:07:44;51.0;0.447;notebooks;
shaoanlu;0;2017-11-02 15:57:57;Completed assignment jupyter notebook of Foundations of Convolutional Neural Networks, deeplearning.ai coursera course;Completed assignment jupyter notebook of Foundations of Convolutional Neural Networks, deeplearning.ai coursera course;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/shaoanlu/deeplearning.ai-Convolutional-Neural-Networks;1.0;['keras', 'tensorflow'];['AI', 'AlexNet', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'NN', 'Object Detection', 'ReLu', 'Recommender', 'ResNet', 'VGG'];['NN', 'convolutional neural network', 'detect', 'fit', 'layer', 'model', 'neural network', 'object detection', 'recogn', 'relu', 'resnet'];;2020-06-26 14:11:12;2020-12-19 23:19:40;107.0;0.505;deeplearning.ai-Convolutional-Neural-Networks;
SheffieldML;10;2014-05-16 08:38:08;Collection of jupyter notebooks for demonstrating software.;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];BSD-3-Clause;https://github.com/SheffieldML/notebook;1.0;['pattern', 'sklearn', 'theano'];['AI', 'Bayesian', 'Classification', 'Clustering', 'DL', 'K-Means', 'Linear Regression', 'ML', 'RL', 'Recommender', 'Regression'];['ML', 'machine learning'];;2017-12-08 15:11:19;2020-12-19 23:56:58;142.0;0.525;notebook;
shreyans29;2;2017-02-13 08:03:04;This repository contains Ipython notebooks and datasets for the data analytics youtube tutorials on The Semicolon.;This repository contains Ipython notebooks and datasets for the data analytics youtube tutorials on The Semicolon.;;Jupyter Notebook;['Jupyter Notebook: 98.1%', 'Python: 1.9%'];;https://github.com/shreyans29/thesemicolon;1.0;['gensim', 'keras', 'nltk', 'sklearn', 'textblob', 'theano'];['CNN', 'Chatbot', 'Classification', 'DL', 'LSTM', 'ML', 'NN', 'RNN', 'Random Forest', 'ReLu', 'Regression'];['CV', 'NN', 'RNN', 'chatbot', 'classif', 'convolutional neural network', 'deep learning', 'gradient descent', 'linear regression', 'loss', 'lstm', 'machine learning', 'model', 'neural network', 'random forest', 'recogn', 'regression', 'sentiment analysis', 'train'];;2020-09-16 08:00:46;2020-12-20 10:31:52;343.0;0.584;thesemicolon;
shudima;0;2017-06-23 21:55:47;Jupyter Notebooks with Deep Learning Tutorials;Jupyter Notebooks with Deep Learning Tutorials;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/shudima/notebooks;1.0;['gensim', 'keras', 'nltk', 'pytorch', 'sklearn', 'tensorflow', 'vocabulary'];['CNN', 'Classification', 'GAN', 'GRU', 'LSTM', 'NN', 'ReLu', 'Regression', 'ResNet'];['CNN', 'NER', 'NLP', 'NN', 'activation function', 'classif', 'deep learning', 'logistic regression', 'lstm', 'model', 'named entity recognition', 'neural network', 'recogn', 'regression', 'resnet'];;2019-08-05 11:31:51;2020-12-19 22:23:55;185.0;0.543;notebooks;
siemanko;3;2015-09-11 20:55:52;;;;Jupyter Notebook;['Jupyter Notebook: 98.6%', 'Other: 1.4%'];;https://github.com/siemanko/6.006-2015-notebooks;0.8;['pattern'];['AI', 'GRU', 'ReLu'];[];;2016-03-14 06:51:30;2020-12-20 10:31:50;242.0;0.561;6.006-2015-notebooks;
silentred;0;2015-10-07 11:02:05;notebook;notebook;;Python;['Python: 47.3%', 'PHP: 18.5%', 'Go: 10.7%', 'C: 10.6%', 'JavaScript: 2.8%', 'SWIG: 2.7%', 'Other: 7.4%'];;https://github.com/silentred/learning-path;1.0;['pattern'];['ML', 'NN', 'RL'];['AI', 'ANN', 'CV', 'DL', 'NER', 'NLP', 'NN', 'RL', 'detect', 'filter', 'fit', 'label', 'layer', 'model', 'rank', 'recogn', 'reward', 'train'];;2020-12-08 13:20:01;2020-12-19 23:00:46;8.0;0.281;learning-path;
simulacre7;0;2016-02-04 18:35:31;tensorflow with IPythonNotebook;tensorflow with IPythonNotebook;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/simulacre7/tensorflow-IPythonNotebook;1.0;['tensorflow'];['ReLu', 'VGG'];['AI', 'model', 'reinforcement learning', 'train', 'vgg'];;2016-05-29 11:20:36;2020-12-19 23:32:03;53.0;0.45;tensorflow-IPythonNotebook;
Slicer;3;2018-10-17 19:12:07;Examples that illustrate how to use 3D Slicer via Jupyter notebooks in Python;Examples that illustrate how to use 3D Slicer via Jupyter notebooks in Python;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];BSD-3-Clause;https://github.com/Slicer/SlicerNotebooks;0.8;['SimpleITK'];['ML', 'RL'];[];;2020-06-10 23:03:00;2020-12-20 10:17:32;31.0;0.405;SlicerNotebooks;
SmirkCao;0;2018-06-19 14:46:07;Statistical learning methods, (2)[] [, , notebook, , Errata, lihang];Statistical learning methods, Ã§Â»ÂÃ¨Â®Â¡Ã¥Â­Â¦Ã¤Â¹Â Ã¦ÂÂ¹Ã¦Â³Â(Ã§Â¬Â¬2Ã§ÂÂ)[Ã¦ÂÂÃ¨ÂÂª]  [Ã§Â¬ÂÃ¨Â®Â°, Ã¤Â»Â£Ã§Â Â, notebook, Ã¥ÂÂÃ¨ÂÂÃ¦ÂÂÃ§ÂÂ®, Errata, lihang];;Python;['Python: 52.6%', 'Jupyter Notebook: 45.1%', 'Shell: 2.3%'];;https://github.com/SmirkCao/Lihang;1.0;['sklearn'];['Classification', 'Clustering', 'Decision Tree', 'KNN', 'Logistic Regression', 'NN', 'Regression'];['AI', 'CNN', 'CV', 'DL', 'KNN', 'ML', 'NLP', 'NN', 'RNN', 'classif', 'clustering', 'decision tree', 'filter', 'fit', 'label', 'logistic regression', 'loss', 'machine learning', 'model', 'naive bayes', 'predict', 'rank', 'recogn', 'regression', 'speech recognition', 'support vector machines', 'text classification', 'train'];;2020-12-27 03:34:00;2020-12-19 23:44:29;3996.0;0.712;Lihang;
soniclavier;0;2015-11-02 00:21:54;;;;Scala;['Scala: 52.1%', 'Java: 36.2%', 'Python: 11.0%', 'Shell: 0.7%'];;https://github.com/soniclavier/bigdata-notebook;1.0;['keras', 'pattern', 'sklearn', 'tensorflow'];['CNN', 'Classification', 'LSTM', 'NN', 'ReLu'];['ML', 'filter', 'machine learning'];;2019-11-26 11:58:46;2020-12-19 23:03:37;98.0;0.498;bigdata-notebook;
spacetelescope;20;2018-06-22 19:53:50;Curated Notebooks from STScI;Curated Notebooks from STScI;;Jupyter Notebook;['Jupyter Notebook: 99.1%', 'Other: 0.9%'];BSD-3-Clause;https://github.com/spacetelescope/notebooks;1.0;['pattern'];['AI', 'Classification', 'Linear Regression', 'ML', 'RL', 'Recommender', 'Regression'];['AI', 'ML', 'detect', 'model', 'recogn', 'train'];;2020-11-30 20:09:37;2020-12-20 11:07:37;109.0;0.506;notebooks;
spark-notebook;71;2014-09-05 19:35:25;Interactive and Reactive Data Science using Scala and Spark.;Interactive and Reactive Data Science using Scala and Spark.;;JavaScript;['JavaScript: 54.2%', 'Jupyter Notebook: 29.3%', 'Scala: 10.7%', 'HTML: 2.7%', 'CSS: 2.2%', 'CoffeeScript: 0.8%', 'Other: 0.1%'];Apache-2.0;https://github.com/spark-notebook/spark-notebook;1.0;['pattern'];['Anomaly Detection', 'CV', 'Classification', 'Clustering', 'K-Means', 'Linear Regression', 'ML', 'RL', 'Random Forest', 'Regression'];['ML', 'RL', 'classif', 'deep learning', 'filter', 'fit', 'gru', 'label', 'loss', 'machine learning', 'model', 'predict', 'recommend', 'train'];;2020-06-02 09:53:46;2020-12-19 23:52:45;2994.0;0.699;spark-notebook;
spatialaudio;26;2015-11-17 22:32:56;Sphinx source parser for Jupyter notebooks;:ledger: Sphinx source parser for Jupyter notebooks;;Python;['Python: 98.8%', 'Other: 1.2%'];MIT;https://github.com/spatialaudio/nbsphinx;1.0;['pattern', 'pytorch'];['AI', 'Classification', 'ML', 'NN', 'RL', 'Recommender'];['ML'];;2020-12-28 17:07:33;2020-12-19 23:27:41;277.0;0.57;nbsphinx;
Speedml;0;2017-05-03 21:23:27;Speedml Python Notebooks;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Speedml/notebooks;0.8;['pattern', 'sklearn', 'xgboost'];['ANN', 'Classification', 'Decision Tree', 'KNN', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'Random Forest', 'Regression', 'Supervised Learning', 'Support Vector Machines'];[];;2017-05-16 06:53:47;2020-12-19 22:38:57;134.0;0.521;notebooks;
stared;15;2018-03-10 17:51:43;Live training loss plot in Jupyter Notebook for Keras, PyTorch and others;Live training loss plot in Jupyter Notebook for Keras, PyTorch and others;;Python;['Python: 99.8%', 'Shell: 0.2%'];MIT;https://github.com/stared/livelossplot;1.0;['keras', 'pattern', 'pytorch', 'sklearn', 'tensorflow'];['AI', 'CNN', 'Classification', 'GRU', 'LSTM', 'ML', 'NER', 'NN', 'ReLu'];['AI', 'NN', 'artificial intelligence', 'deep learning', 'epoch', 'fit', 'label', 'loss', 'model', 'neural network', 'predict', 'train'];;2020-11-30 21:45:57;2020-12-20 10:23:14;1011.0;0.646;livelossplot;
Startupsci;0;2016-11-19 04:12:24;Jupyter notebooks for learning Python and Data Science, companion to Data Science Solutions book.;Jupyter notebooks for learning Python and Data Science, companion to Data Science Solutions book.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/Startupsci/data-science-notebooks;0.8;['pattern', 'sklearn'];['ANN', 'Classification', 'Decision Tree', 'KNN', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'Random Forest', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines'];[];;2020-03-23 08:27:49;2020-12-20 10:07:38;30.0;0.403;data-science-notebooks;
stephenslab;4;2017-07-05 22:00:35;Simple data science website using Jupyter notebooks.;Simple data science website using Jupyter notebooks.;;Jupyter Notebook;['Jupyter Notebook: 99.2%', 'Other: 0.8%'];MIT;https://github.com/stephenslab/ipynb-website;1.0;['pattern'];['ML', 'Recommender'];['RL', 'recommend'];;2020-10-25 19:01:52;2020-12-20 11:22:41;54.0;0.452;ipynb-website;
Steven-Hewitt;3;2017-02-27 18:33:23;Accompanying notebook for the Entailment with Tensorflow article.;Accompanying notebook for the Entailment with Tensorflow article.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Steven-Hewitt/Entailment-with-Tensorflow;1.0;['tensorflow'];['Classification', 'LSTM', 'NN', 'RNN'];['RL', 'lstm', 'machine learning', 'model', 'natural language processing', 'neural network', 'recommend', 'train'];;2019-05-08 22:15:38;2020-12-20 09:28:39;81.0;0.484;Entailment-with-Tensorflow;
stevetjoa;9;2014-05-09 17:56:18;Instructional notebooks on music information retrieval.;Instructional notebooks on music information retrieval.;;Jupyter Notebook;['Jupyter Notebook: 51.8%', 'HTML: 48.2%'];MIT;https://github.com/stevetjoa/musicinformationretrieval.com;1.0;['keras', 'pattern', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'ANN', 'Classification', 'Clustering', 'DL', 'K-Means', 'KNN', 'ML', 'NER', 'NN', 'Naive Bayes', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Supervised Learning', 'Unsupervised learning'];['ML'];;2020-08-21 22:48:22;2020-12-19 23:44:19;814.0;0.634;musicinformationretrieval.com;
StingraySoftware;9;2016-04-06 15:48:14;Tutorial notebooks for Stingray;Tutorial notebooks for Stingray;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/StingraySoftware/notebooks;0.8;['pattern'];['AI', 'Bayesian', 'DL'];[];;2019-12-13 11:13:55;2020-12-19 22:43:45;10.0;0.302;notebooks;
stitchfix;7;2015-05-05 00:24:18;Algorithm's team Jupyter Notebooks;Algorithm's team Jupyter Notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.5%', 'Python: 0.5%'];Apache-2.0;https://github.com/stitchfix/Algorithms-Notebooks;0.8;['statsmodels'];['Classification', 'DL', 'GAN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'ReLu', 'Recommender', 'Rectifier', 'Regression'];[];;2016-08-16 17:37:52;2020-12-19 23:27:29;112.0;0.508;Algorithms-Notebooks;
StuartGordonReid;0;2015-04-12 12:53:46;IPython Notebooks from old blog posts;IPython Notebooks from old blog posts;;Jupyter Notebook;['Jupyter Notebook: 70.3%', 'HTML: 29.7%'];;https://github.com/StuartGordonReid/Python-Notebooks;0.8;['pattern', 'sklearn'];['Classification', 'Clustering', 'Decision Tree', 'GBM', 'K-Means', 'Linear Regression', 'ML', 'NN', 'RL', 'RNN', 'Random Forest', 'Regression', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];[];;2017-07-05 16:20:18;2020-12-19 23:29:59;25.0;0.387;Python-Notebooks;
sunpy;5;2016-05-25 14:17:18;A list of tutorial notebooks for Python and SunPy;A list of tutorial notebooks for Python and SunPy;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];MIT;https://github.com/sunpy/tutorial-notebooks;1.0;['skimage'];['AI', 'GBM', 'RL', 'ReLu', 'Recommender'];['AI', 'CV', 'recogn', 'recommend'];;2019-06-12 22:53:49;2020-12-19 22:44:21;13.0;0.327;tutorial-notebooks;
sunwu51;0;2018-01-27 14:05:48;my note;my note;;Jupyter Notebook;['Jupyter Notebook: 36.3%', 'CSS: 32.6%', 'HTML: 13.0%', 'Java: 11.7%', 'JavaScript: 5.7%', 'Shell: 0.2%', 'Other: 0.5%'];;https://github.com/sunwu51/notebook;1.0;['skimage', 'sklearn'];['RL'];['AI', 'CV', 'ML', 'NER', 'NN', 'RL', 'chatbot', 'filter', 'label', 'model', 'rank'];;2020-12-17 19:17:32;2020-12-19 23:26:20;186.0;0.544;notebook;
taboola;3;2018-10-25 12:09:09;;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/taboola/mdn-tensorflow-notebook-example;1.0;['keras', 'sklearn', 'tensorflow'];['NN'];['predict'];;2020-03-04 09:52:27;2020-12-19 23:49:31;27.0;0.393;mdn-tensorflow-notebook-example;
takluyver;5;2014-10-20 20:49:43;Citations in the Jupyter Notebook;Citations in the Jupyter Notebook;;JavaScript;['JavaScript: 98.1%', 'Other: 1.9%'];MIT;https://github.com/takluyver/cite2c;0.8;['pattern'];['ML'];[];;2019-04-18 10:45:42;2020-12-20 11:02:24;272.0;0.569;cite2c;
takluyver;0;2018-01-11 15:14:09;Introduction to Jupyter Notebook;Introduction to Jupyter Notebook;;Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Other: 0.4%'];;https://github.com/takluyver/jupyter-intro-xfel-jan17;1.0;['pattern'];['AI', 'DL', 'ML', 'RL', 'Recommender'];['ML'];;2018-01-19 17:37:46;2020-12-20 09:48:56;14.0;0.334;jupyter-intro-xfel-jan17;
tarmstrong;8;2013-09-06 04:56:31;A diffing and merging tool for the IPython Notebook.;A diffing and merging tool for the IPython Notebook.;;Python;['Python: 42.4%', 'JavaScript: 35.8%', 'HTML: 17.2%', 'CSS: 4.1%', 'Other: 0.5%'];MIT;https://github.com/tarmstrong/nbdiff;0.8;['pattern'];['Classification', 'RL', 'Regression'];[];;2015-06-11 19:38:51;2020-12-19 23:31:28;207.0;0.551;nbdiff;
Tessellate-Imaging;2;2019-12-26 18:15:11;A set of jupyter notebooks on pytorch functions with examples;A set of jupyter notebooks on pytorch functions with examples;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/Tessellate-Imaging/Pytorch_Tutorial;1.0;['Pillow', 'caffe', 'imutils', 'keras', 'pytorch', 'skimage', 'tensorflow'];['AI', 'AlexNet', 'CNN', 'CV', 'Classification', 'DL', 'NN', 'Object Detection', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Rectifier', 'Regression', 'ResNet', 'Supervised Learning', 'VGG'];['AI', 'CNN', 'NN', 'classif', 'deep learning', 'fit', 'layer', 'loss', 'model', 'recommend', 'train'];;2020-03-13 04:59:41;2020-12-20 10:09:27;140.0;0.524;Pytorch_Tutorial;
thibo73800;2;2019-02-19 17:03:33;Jupyter notebooks to help you started with tensorflow 2.0;Jupyter notebooks to help you started with tensorflow 2.0;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/thibo73800/tensorflow2.0-examples;1.0;['keras', 'sklearn', 'tensorflow'];['CNN', 'LSTM', 'NN', 'RNN', 'ReLu'];['CNN', 'NN', 'RNN', 'layer', 'model', 'neural network', 'recommend', 'train'];;2020-04-17 16:19:33;2020-12-19 23:52:57;242.0;0.561;tensorflow2.0-examples;
thomas-haslwanter;2;2015-08-12 12:04:04;"Python modules and IPython Notebooks, for the book ""Introduction to Statistics With Python""";"Python modules and IPython Notebooks, for the book ""Introduction to Statistics With Python""";;HTML;['HTML: 77.9%', 'Jupyter Notebook: 20.1%', 'Python: 2.0%'];;https://github.com/thomas-haslwanter/statsintro_python;1.0;['sklearn', 'statsmodels'];['AI', 'Bayesian', 'Linear Regression', 'Logistic Regression', 'ML', 'Recommender', 'Regression'];['AI', 'ML', 'bayesian', 'detect', 'fit', 'label', 'linear regression', 'logistic regression', 'loss', 'model', 'predict', 'rank', 'recommend', 'regression', 'train'];;2020-06-30 20:23:35;2020-12-19 23:11:01;647.0;0.621;statsintro_python;
tiagoantao;13;2014-05-02 13:19:08;Notebooks to introduce biopython;Notebooks to introduce biopython;;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Python: 0.3%'];MIT;https://github.com/tiagoantao/biopython-notebook;0.8;['pattern'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'GRU', 'K-Means', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines', 'VGG'];[];;2020-12-04 16:21:51;2020-12-19 22:35:57;75.0;0.478;biopython-notebook;
Tianxiaomo;0;2018-11-15 14:37:35;tensorflow notebook\;tensorflow notebook\Ã¤ÂºÂºÃ¥Â·Â¥Ã¦ÂÂºÃ¨ÂÂ½Ã¥Â®ÂÃ¨Â·Âµ;;Python;['Python: 100.0%'];;https://github.com/Tianxiaomo/tensorflow_notebook;1.0;['tensorflow'];['ReLu'];['label', 'layer', 'loss', 'train', 'vgg'];;2018-11-18 12:58:18;2020-12-19 22:25:52;30.0;0.403;tensorflow_notebook;
timkpaine;3;2018-10-12 15:37:49;A web frontend for scheduling Jupyter notebook reports;A web frontend for scheduling Jupyter notebook reports;;Python;['Python: 69.2%', 'TypeScript: 21.9%', 'CSS: 5.5%', 'HTML: 1.6%', 'Smarty: 1.4%', 'JavaScript: 0.2%', 'Shell: 0.2%'];Apache-2.0;https://github.com/timkpaine/paperboy;1.0;['pattern'];['AI', 'Classification', 'GRU', 'ML', 'NER', 'NN', 'RL', 'Recommender'];['ML', 'filter', 'model', 'recommend'];;2020-11-03 03:57:30;2020-12-19 22:42:19;213.0;0.553;paperboy;
timsainb;2;2016-10-06 01:44:57;Spectrograms, MFCCs, and Inversion Demo in a jupyter notebook;Spectrograms, MFCCs, and Inversion Demo in a jupyter notebook;;Jupyter Notebook;['Jupyter Notebook: 68.7%', 'HTML: 31.3%'];;https://github.com/timsainb/python_spectrograms_and_inversion;1.0;['tensorflow'];['GAN', 'LSTM', 'ML'];['AI', 'ANN', 'CNN', 'CV', 'DL', 'GAN', 'GBM', 'KNN', 'ML', 'NER', 'NLU', 'NN', 'RL', 'detect', 'filter', 'fit', 'gru', 'lstm', 'model', 'rank', 'vgg'];;2019-07-15 13:39:08;2020-12-19 23:49:35;142.0;0.525;python_spectrograms_and_inversion;
tirthajyoti;3;2017-07-17 03:06:13;Practice and tutorial-style notebooks covering wide variety of machine learning techniques;Practice and tutorial-style notebooks  covering wide variety of machine learning techniques;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Other: 0.2%'];BSD-2-Clause;https://github.com/tirthajyoti/Machine-Learning-with-Python;1.0;['keras', 'pattern', 'sklearn', 'statsmodels', 'tensorflow'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'K-Means', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];['AI', 'CV', 'DL', 'KNN', 'ML', 'NN', 'RL', 'RNN', 'classif', 'clustering', 'decision tree', 'deep learning', 'detect', 'fit', 'k-means', 'k-nearest neighbor', 'layer', 'linear regression', 'logistic regression', 'lstm', 'machine learning', 'model', 'naive bayes', 'neural network', 'neuron', 'predict', 'propagation', 'random forest', 'recurrent neural network', 'regression', 'reinforcement learning', 'test data', 'train'];;2020-12-09 02:19:41;2020-12-19 23:16:44;1713.0;0.673;Machine-Learning-with-Python;
tirthajyoti;0;2017-11-06 09:27:30;General statistics, mathematical programming, and numerical/scientific computing scripts and notebooks in Python;General statistics, mathematical programming, and numerical/scientific computing scripts and notebooks in Python;;Jupyter Notebook;['Jupyter Notebook: 99.8%', 'Python: 0.2%'];MIT;https://github.com/tirthajyoti/Stats-Maths-with-Python;1.0;['keras', 'pattern', 'sklearn', 'statsmodels'];['AI', 'Bayesian', 'Classification', 'Clustering', 'DL', 'GRU', 'Gradient Boosting', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'RL', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Support Vector Machines'];['AI', 'bayesian', 'classif', 'decision tree', 'deep learning', 'fit', 'layer', 'linear regression', 'logistic regression', 'machine learning', 'model', 'neural network', 'predict', 'recogn', 'regression'];;2020-12-15 07:57:16;2020-12-19 22:31:54;339.0;0.583;Stats-Maths-with-Python;
tkf;4;2012-05-07 12:32:26;IPython notebook client in Emacs;IPython notebook client in Emacs;;Emacs Lisp;['Emacs Lisp: 97.1%', 'Python: 1.9%', 'Shell: 1.0%'];GPL-3.0;https://github.com/tkf/emacs-ipython-notebook;0.8;['pattern'];['AI', 'ML', 'RL'];[];;2015-03-21 02:29:28;2020-12-19 22:56:22;539.0;0.611;emacs-ipython-notebook;
tlinnet;0;2018-11-12 20:11:11;C# kernel in Jupyter Notebook;C# kernel in Jupyter Notebook;;Jupyter Notebook;['Jupyter Notebook: 99.6%', 'Other: 0.4%'];;https://github.com/tlinnet/csharp-notebook;1.0;['pattern'];['AI', 'GRU', 'ML'];['AI', 'DL', 'ML', 'NLP', 'RL', 'artificial intelligence', 'classif', 'detect', 'filter', 'fit', 'label', 'layer', 'loss', 'model', 'predict', 'rank', 'recogn', 'recommend', 'regression', 'test data', 'train'];;2019-01-05 21:29:45;2020-12-19 23:40:31;31.0;0.405;csharp-notebook;
Tong-Chen;0;2016-11-25 22:01:43;;;;Jupyter Notebook;['Jupyter Notebook: 53.4%', 'HTML: 46.6%'];GPL-3.0;https://github.com/Tong-Chen/notebook;0.8;['pattern'];['Linear Regression', 'Regression'];[];;2017-05-17 10:31:12;2020-12-19 23:23:07;18.0;0.357;notebook;
tritemio;7;2015-06-13 21:21:48;A brief guide to install and run Jupyter/IPython notebooks;A brief guide to install and run Jupyter/IPython notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/tritemio/jupyter_notebook_beginner_guide;0.8;['pattern'];['ML', 'RL'];[];;2018-02-13 07:33:44;2020-12-20 09:40:26;28.0;0.397;jupyter_notebook_beginner_guide;
trnkatomas;0;2017-03-24 14:03:04;Some simple notebooks;Some simple notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/trnkatomas/Keras_2_examples;0.8;['keras', 'tensorflow'];['LSTM'];[];;2017-03-24 14:04:49;2020-12-19 22:40:51;30.0;0.403;Keras_2_examples;
tugstugi;2;2019-03-12 20:05:49;Try out deep learning models online on Google Colab;;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/tugstugi/dl-colab-notebooks;1.0;['albumentations', 'caffe', 'detectron', 'keras', 'opencv-python', 'pytorch', 'skimage', 'tensorflow'];['AI', 'CNN', 'GAN', 'ML', 'NN', 'Object Detection', 'RL', 'RNN', 'ReLu', 'ResNet', 'Speech Recognition', 'VGG'];['AI', 'CNN', 'GAN', 'ML', 'NN', 'RL', 'RNN', 'deep learning', 'detect', 'layer', 'model', 'object detection', 'predict', 'recogn', 'resnet', 'speech recognition', 'train'];;2020-10-20 12:51:06;2020-12-20 10:32:02;834.0;0.635;dl-colab-notebooks;
TwistedHardware;4;2014-07-21 21:32:15;Machine Learning Tutorial in IPython Notebooks;Machine Learning Tutorial in IPython Notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];GPL-2.0;https://github.com/TwistedHardware/mltutorial;1.0;['pattern', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'Anomaly Detection', 'CV', 'Classification', 'Clustering', 'DL', 'GAN', 'GRU', 'ML', 'NER', 'NN', 'RL', 'RNN', 'ReLu', 'Recommender', 'Rectifier', 'Regression', 'Supervised Learning', 'Unsupervised learning', 'VGG'];['ML', 'machine learning'];;2018-05-19 18:13:09;2020-12-19 23:14:35;128.0;0.518;mltutorial;
twosigma;40;2013-12-03 14:16:36;Beaker Extensions for Jupyter Notebook;;;Jupyter Notebook;['Jupyter Notebook: 98.2%', 'Other: 1.8%'];Apache-2.0;https://github.com/twosigma/beakerx;0.8;['pattern', 'tensorflow'];['AI', 'Classification', 'Clustering', 'DL', 'K-Means', 'Linear Regression', 'ML', 'RL', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning', 'Unsupervised learning'];[];;2020-09-07 19:41:36;2020-12-20 09:30:11;2494.0;0.691;beakerx;
ubdsgroup;0;2014-12-31 18:35:44;Collection of iPython notebooks for UB CSE Machine Learning course (CSE 474/574);Collection of iPython notebooks for UB CSE Machine Learning course (CSE 474/574);;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/ubdsgroup/mlcourse-ub-notebooks;1.0;['pattern', 'sklearn', 'statsmodels', 'tensorflow'];['AI', 'Bayesian', 'Classification', 'Clustering', 'Decision Tree', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'RL', 'ReLu', 'Recommender', 'Regression', 'Support Vector Machines'];['machine learning'];;2020-09-26 18:26:25;2020-12-20 09:48:04;47.0;0.44;mlcourse-ub-notebooks;
uber;3;2019-02-07 20:14:27;Jupyter notebooks for h3-py, a hierarchical hexagonal geospatial indexing system;Jupyter notebooks for h3-py, a hierarchical hexagonal geospatial indexing system;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Apache-2.0;https://github.com/uber/h3-py-notebooks;0.8;['keras', 'pattern', 'statsmodels', 'tensorflow'];['AI', 'CNN', 'Classification', 'Clustering', 'Linear Regression', 'ML', 'NN', 'ReLu', 'Recommender', 'Regression'];[];;2020-08-14 06:01:36;2020-12-20 09:36:33;66.0;0.468;h3-py-notebooks;
uberwach;0;2017-06-26 18:19:41;Leveling up your Jupyter notebook skills;Leveling up your Jupyter notebook skills;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/uberwach/leveling-up-jupyter;1.0;['sklearn'];['AI', 'CV', 'Classification', 'GRU', 'ML', 'Naive Bayes', 'Regression', 'Supervised Learning', 'Unsupervised learning'];['RL', 'recommend'];;2017-12-05 17:26:13;2020-12-20 11:28:21;80.0;0.483;leveling-up-jupyter;
UCIDataScienceInitiative;3;2015-04-10 18:17:25;Notebooks for the Course;Notebooks for the Course;;Jupyter Notebook;['Jupyter Notebook: 99.1%', 'Python: 0.9%'];;https://github.com/UCIDataScienceInitiative/PredictiveModeling_withPython;1.0;['sklearn', 'theano'];['AI', 'CV', 'Classification', 'Linear Regression', 'Logistic Regression', 'ML', 'Regression', 'Supervised Learning'];['model', 'predict'];;2017-11-07 02:26:39;2020-12-20 11:24:04;32.0;0.408;PredictiveModeling_withPython;
udacity;6;2018-04-26 05:07:30;Exercise notebooks for CVND.;;;Jupyter Notebook;['Jupyter Notebook: 98.5%', 'Python: 1.5%'];MIT;https://github.com/udacity/CVND_Exercises;1.0;['opencv-python', 'pattern', 'pytorch', 'vocabulary'];['AI', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'K-Means', 'LSTM', 'ML', 'NLP', 'NN', 'Object Detection', 'RNN', 'ReLu', 'Recommender'];['CV', 'computer vision'];;2020-06-18 19:27:50;2020-12-20 09:35:01;596.0;0.617;CVND_Exercises;
udacity;2;2018-05-31 21:25:40;Notebooks for learning about object motion and localization methods in the last section of CVND.;Notebooks for learning about object motion and localization methods in the last section of CVND.;;Jupyter Notebook;['Jupyter Notebook: 97.0%', 'Python: 3.0%'];MIT;https://github.com/udacity/CVND_Localization_Exercises;1.0;['pattern'];['CV', 'Recommender'];['CV', 'computer vision'];;2020-02-23 00:27:23;2020-12-20 09:48:06;92.0;0.493;CVND_Localization_Exercises;
Unidata;21;2013-04-05 22:32:34;A series of Jupyter Notebooks on exploring Unidata technology with Python. See website for more information.;A series of Jupyter Notebooks on exploring Unidata technology with Python. See website for more information.;;Jupyter Notebook;['Jupyter Notebook: 95.5%', 'Python: 4.5%'];MIT;https://github.com/Unidata/python-workshop;1.0;['keras', 'pattern', 'vocabulary'];['AI', 'Classification', 'DL', 'ML', 'NN', 'RL', 'Random Forest', 'Recommender', 'Regression'];['AI', 'RL', 'fit', 'recommend', 'regression', 'train'];;2020-01-09 07:12:02;2020-12-19 22:25:20;125.0;0.516;python-workshop;
unpingco;2;2016-02-24 16:30:40;"Jupyter Notebooks for Springer book ""Python for Probability, Statistics, and Machine Learning""";"Jupyter Notebooks for Springer book ""Python for Probability, Statistics, and Machine Learning""";;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];MIT;https://github.com/unpingco/Python-for-Probability-Statistics-and-Machine-Learning;1.0;['pattern', 'sklearn', 'statsmodels'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'Decision Tree', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'Random Forest', 'Regression', 'Support Vector Machines'];['clustering', 'decision tree', 'logistic regression', 'machine learning', 'regression', 'support vector machines'];;2019-11-06 14:38:38;2020-12-20 11:00:57;468.0;0.603;Python-for-Probability-Statistics-and-Machine-Learning;
urschrei;0;2014-07-30 14:44:43;Notebooks and libraries for spatial/geo Python explorations;Notebooks and libraries for spatial/geo Python explorations;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/urschrei/Geopython;1.0;['pattern', 'statsmodels'];['AI', 'Bayesian', 'CV', 'Classification', 'ML', 'NN', 'Regression'];['AI', 'label', 'regression'];;2018-12-13 11:51:37;2020-12-19 22:43:35;264.0;0.567;Geopython;
usstroot;0;2019-08-13 08:12:35;;Ã¥Â­Â¦Ã¤Â¹Â Ã§Â¬ÂÃ¨Â®Â°;;Jupyter Notebook;['Jupyter Notebook: 97.7%', 'HTML: 2.1%', 'Other: 0.2%'];;https://github.com/usstroot/notebook;1.0;['keras', 'nltk', 'pattern', 'skimage', 'sklearn', 'tensorflow', 'vocabulary', 'xgboost'];['AI', 'ANN', 'Anomaly Detection', 'Bayesian', 'CNN', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GRU', 'Gradient Boosting', 'Image Segmentation', 'K-Means', 'KNN', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'Machine Translation', 'NER', 'NN', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];['AI', 'RL', 'bayesian', 'fit', 'layer', 'machine learning', 'model', 'predict', 'random forest', 'recommend', 'regression', 'reinforcement learning', 'supervised learning', 'train'];;2020-11-13 18:20:21;2020-12-20 11:02:56;9.0;0.292;notebook;
uwdata;3;2019-03-28 20:52:15;A data visualization curriculum of interactive notebooks.;A data visualization curriculum of interactive notebooks.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];BSD-3-Clause;https://github.com/uwdata/visualization-curriculum;0.8;['pattern'];['Classification', 'ML', 'RL', 'Recommender'];[];;2020-10-06 20:41:31;2020-12-19 23:34:30;886.0;0.639;visualization-curriculum;
vaibhavsagar;0;2017-05-20 09:22:29;Jupyter notebooks;Jupyter notebooks;;Jupyter Notebook;['Jupyter Notebook: 94.9%', 'Haskell: 3.6%', 'Nix: 1.5%'];;https://github.com/vaibhavsagar/notebooks;0.8;['pattern'];['ML', 'RL', 'ReLu', 'Recommender'];[];;2020-11-17 12:06:11;2020-12-20 09:33:02;47.0;0.44;notebooks;
vatlab;6;2017-10-04 22:43:25;Multi-language Jupyter Notebook;Multi-language Jupyter Notebook;;Python;['Python: 64.7%', 'JavaScript: 22.1%', 'Smarty: 8.4%', 'HTML: 2.5%', 'Jupyter Notebook: 1.2%', 'Shell: 0.6%', 'Dockerfile: 0.5%'];BSD-3-Clause;https://github.com/vatlab/sos-notebook;1.0;['pattern'];['Classification', 'ML', 'RL'];['ML'];;2020-12-18 02:47:24;2020-12-19 23:49:15;114.0;0.509;sos-notebook;
velocyto-team;2;2017-10-12 15:57:55;;;;Jupyter Notebook;['Jupyter Notebook: 59.9%', 'HTML: 40.1%'];;https://github.com/velocyto-team/velocyto-notebooks;0.8;['sklearn', 'statsmodels'];['Clustering', 'ML', 'Regression'];[];;2018-05-22 22:54:37;2020-12-20 11:03:12;30.0;0.403;velocyto-notebooks;
vinayak-mehta;4;2019-10-31 07:01:19;Unix commands for Jupyter notebooks.;Unix commands for Jupyter notebooks.;;Python;['Python: 91.1%', 'Jupyter Notebook: 8.9%'];Apache-2.0;https://github.com/vinayak-mehta/nbcommands;1.0;['pattern'];['Classification', 'ML', 'RL'];['label', 'recommend'];;2020-10-26 22:49:52;2020-12-19 22:56:34;152.0;0.53;nbcommands;
vishwesh5;0;2019-02-12 15:49:29;Notebooks from University of Toronto's Quantum ML MOOC;Notebooks from University of Toronto's Quantum ML MOOC;;Jupyter Notebook;['Jupyter Notebook: 99.4%', 'Python: 0.6%'];;https://github.com/vishwesh5/Quantum-Machine-Learning;1.0;['pattern', 'sklearn'];['AI', 'Bayesian', 'Boltzmann Machine', 'CV', 'Classification', 'Clustering', 'DL', 'ML', 'NN', 'RL', 'Recommender', 'Supervised Learning', 'Support Vector Machines', 'Unsupervised learning'];['artificial intelligence', 'fit', 'machine learning', 'model', 'train'];;2020-08-26 10:20:36;2020-12-19 23:59:59;52.0;0.449;Quantum-Machine-Learning;
voila-dashboards;41;2018-08-21 14:21:42;Voil turns Jupyter notebooks into standalone web applications;VoilÃÂ  turns Jupyter notebooks into standalone web applications;;Python;['Python: 41.7%', 'Jupyter Notebook: 34.9%', 'JavaScript: 7.4%', 'CSS: 7.2%', 'HTML: 4.3%', 'TypeScript: 3.9%', 'Smarty: 0.6%'];;https://github.com/voila-dashboards/voila;1.0;['pattern'];['AI', 'ML', 'RL'];['ML', 'model'];;2020-12-28 03:58:14;2020-12-19 22:49:57;2915.0;0.698;voila;
vschaik;0;2017-07-08 06:18:19;Painless conjugate gradient notebooks;Painless conjugate gradient notebooks;;Jupyter Notebook;['Jupyter Notebook: 63.1%', 'Python: 36.9%'];;https://github.com/vschaik/Conjugate-Gradient;0.8;['pattern'];['Clustering', 'Linear Regression', 'ML', 'RL', 'Regression'];[];;2021-01-03 02:09:48;2020-12-19 22:40:11;26.0;0.39;Conjugate-Gradient;
watson-developer-cloud;7;2018-10-03 19:11:51;Assistant Improve notebooks for Watson Assistant;Assistant Improve notebooks for Watson Assistant;;Jupyter Notebook;['Jupyter Notebook: 58.1%', 'Python: 41.6%', 'CSS: 0.3%'];Apache-2.0;https://github.com/watson-developer-cloud/assistant-improve-recommendations-notebook;1.0;['pattern', 'sklearn'];['AI', 'Classification', 'Clustering', 'ML', 'NLP', 'RL', 'Recommender', 'Sentiment Analysis', 'Supervised Learning', 'Unsupervised learning'];['RL', 'filter', 'label', 'recommend', 'train'];;2020-10-12 22:53:11;2020-12-19 22:31:29;48.0;0.442;assistant-improve-recommendations-notebook;
wenmin-wu;3;2019-09-07 00:30:49;Autocompletion with Deep Learning on Jupyter Notebook;Autocompletion with Deep Learning on Jupyter Notebook;;JavaScript;['JavaScript: 54.9%', 'Python: 23.5%', 'Go: 17.6%', 'Shell: 1.8%', 'CSS: 1.5%', 'Dockerfile: 0.7%'];MIT;https://github.com/wenmin-wu/jupyter-tabnine;1.0;['pattern'];['Classification', 'DL', 'RL'];['ML', 'deep learning', 'recommend'];;2020-11-28 17:34:49;2020-12-20 10:16:32;483.0;0.604;jupyter-tabnine;
wesm;9;2012-06-30 18:39:12;"Materials and IPython notebooks for ""Python for Data Analysis"" by Wes McKinney, published by O'Reilly Media";"Materials and IPython notebooks for ""Python for Data Analysis"" by Wes McKinney, published by O'Reilly Media";;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];;https://github.com/wesm/pydata-book;1.0;['pattern', 'sklearn', 'statsmodels'];['CV', 'Linear Regression', 'ML', 'Regression'];['label', 'model'];;2020-10-25 22:32:28;2020-12-19 22:27:47;14048.0;0.761;pydata-book;
wilfredinni;18;2018-01-24 20:53:03;Basic Cheat Sheet for Python (PDF, Markdown and Jupyter Notebook);Basic Cheat Sheet for Python (PDF, Markdown and Jupyter Notebook);;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/wilfredinni/python-cheatsheet;1.0;['pattern'];['ML', 'Recommender'];['ML', 'RL', 'filter', 'loss', 'model', 'recommend', 'train'];;2020-10-18 22:19:56;2020-12-19 23:14:51;1228.0;0.656;python-cheatsheet;
willb;2;2020-02-05 05:21:33;;;;Jupyter Notebook;['Jupyter Notebook: 90.1%', 'Python: 9.9%'];;https://github.com/willb/fraud-notebooks;1.0;['pattern', 'sklearn'];['Classification', 'Decision Tree', 'Logistic Regression', 'ML', 'RL', 'Random Forest', 'Regression'];['model', 'recommend'];;2020-09-19 18:28:15;2020-12-19 22:40:37;10.0;0.302;fraud-notebooks;
WittyOrator;0;2018-05-28 12:43:16;Jupyter Notebook Assignments etc.;Jupyter Notebook Assignments etc.;;Jupyter Notebook;['Jupyter Notebook: 96.0%', 'Python: 3.9%', 'Shell: 0.1%'];;https://github.com/WittyOrator/JupyterNotebook;1.0;['keras', 'lightgbm', 'pattern', 'pytorch', 'skimage', 'sklearn', 'tensorflow', 'vocabulary', 'xgboost'];['AI', 'AlexNet', 'Bayesian', 'CNN', 'CV', 'Chatbot', 'Classification', 'DL', 'GAN', 'GBM', 'Gradient Boosting', 'KNN', 'LSTM', 'ML', 'NN', 'RL', 'RNN', 'ReLu', 'Recommender', 'Rectifier', 'Regression', 'ResNet', 'VGG'];['ML', 'convolutional neural network', 'deep learning', 'layer', 'model', 'neural network', 'propagation', 'train'];;2018-07-15 11:33:34;2020-12-20 10:09:44;65.0;0.467;JupyterNotebook;
wy-ei;3;2015-10-05 01:01:35;notebook;:ledger: notebook;;Jupyter Notebook;['Jupyter Notebook: 89.1%', 'JavaScript: 5.0%', 'SCSS: 4.3%', 'HTML: 1.6%'];;https://github.com/wy-ei/notebook;1.0;['keras', 'pattern', 'pytorch', 'sklearn', 'tensorflow'];['CNN', 'CV', 'Classification', 'DL', 'GRU', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NN', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'VGG'];['AI', 'CNN', 'DL', 'ML', 'NER', 'NLP', 'NN', 'RL', 'RNN', 'alexnet', 'classif', 'deep learning', 'detect', 'epoch', 'filter', 'fit', 'gradient descent', 'gru', 'label', 'layer', 'logistic regression', 'loss', 'lstm', 'machine learning', 'model', 'neural network', 'predict', 'propagation', 'rank', 'recommend', 'recommender', 'recurrent neural network', 'regression', 'relu', 'resnet', 'supervised learning', 'train', 'unsupervised learning'];;2020-12-29 13:08:25;2020-12-20 10:16:05;174.0;0.539;notebook;
yandexdataschool;10;2019-06-21 11:07:05;MLHEP'19 slides and notebooks;MLHEP'19 slides and notebooks;;Jupyter Notebook;['Jupyter Notebook: 99.3%', 'Other: 0.7%'];MIT;https://github.com/yandexdataschool/mlhep2019;1.0;['catboost', 'lightgbm', 'pattern', 'pytorch', 'sklearn', 'tensorflow', 'theano', 'vocabulary', 'xgboost'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'DL', 'Decision Tree', 'GAN', 'GBM', 'GRU', 'Gradient Boosting', 'K-Means', 'LSTM', 'Linear Regression', 'Logistic Regression', 'ML', 'NER', 'NLP', 'NN', 'RL', 'RNN', 'Random Forest', 'ReLu', 'Recommender', 'Regression', 'Supervised Learning', 'Unsupervised learning'];['AI', 'CNN', 'DL', 'GAN', 'ML', 'NN', 'RNN', 'autoencoder', 'bayesian', 'boltzmann machine', 'classif', 'clustering', 'convolutional neural network', 'deep learning', 'fit', 'generative adversarial network', 'gradient descent', 'ground truth', 'label', 'loss', 'machine learning', 'model', 'neural network', 'predict', 'random forest', 'regression', 'train'];;2019-11-09 11:23:37;2020-12-20 09:34:32;36.0;0.418;mlhep2019;
yanneta;0;2019-01-08 20:43:00;Here are notebooks for the advanced machine learning course for MSDS at USF.;Here are notebooks for the advanced machine learning course for MSDS at USF.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/yanneta/ML-notebooks;1.0;['pytorch', 'sklearn', 'spacy', 'vocabulary', 'xgboost'];['CNN', 'Classification', 'Clustering', 'DL', 'KNN', 'Linear Regression', 'Logistic Regression', 'ML', 'NLP', 'NN', 'ReLu', 'Recommender', 'Regression', 'Text Classification'];['machine learning'];;2020-03-03 22:11:01;2020-12-20 10:42:29;30.0;0.403;ML-notebooks;
yaph;0;2014-01-06 13:05:11;A collection of Jupyter notebooks exploring different datasets.;A collection of Jupyter notebooks exploring different datasets.;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/yaph/ipython-notebooks;1.0;['nltk', 'pattern', 'sklearn', 'spacy'];['Classification', 'ML', 'NLP', 'RL', 'Recommender'];['rank'];;2020-12-24 00:18:37;2020-12-20 11:09:28;38.0;0.423;ipython-notebooks;
ydixon;0;2018-06-03 06:33:50;YoloV3 in Pytorch and Jupyter Notebook;YoloV3 in Pytorch and Jupyter Notebook;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/ydixon/yolo_v3;1.0;['pattern', 'pytorch'];['AI', 'CV', 'ReLu'];['CV', 'detect', 'epoch', 'fit', 'ground truth', 'label', 'layer', 'loss', 'model', 'propagation', 'recommend', 'relu', 'train'];;2019-08-03 18:15:56;2020-12-20 10:19:52;68.0;0.47;yolo_v3;
yeseullee;0;2017-05-17 14:47:15;"Figure notebooks for ""The Data Science Design Manual"" (http://www.data-manual.com/)";"Figure notebooks for ""The Data Science Design Manual"" (http://www.data-manual.com/)";;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/yeseullee/Data-science-design-manual-notebooks;0.8;['sklearn'];['Classification', 'Clustering', 'K-Means', 'Linear Regression', 'Logistic Regression', 'ML', 'Regression'];[];;2017-05-19 01:41:13;2020-12-19 22:43:07;39.0;0.425;Data-science-design-manual-notebooks;
yhilpisch;0;2015-07-09 12:27:29;Jupyter Notebooks and code for Derivatives Analytics with Python (Wiley Finance) by Yves Hilpisch.;Jupyter Notebooks and code for Derivatives Analytics with Python (Wiley Finance) by Yves Hilpisch.;;Jupyter Notebook;['Jupyter Notebook: 85.4%', 'HTML: 8.7%', 'Python: 5.6%', 'TeX: 0.3%'];;https://github.com/yhilpisch/dawp;1.0;['statsmodels'];['CV', 'GBM', 'RL', 'Regression'];['recommend', 'train'];;2019-09-08 20:41:44;2020-12-20 10:16:40;369.0;0.588;dawp;
yhilpisch;0;2018-12-01 12:14:05;Jupyter Notebooks and code for Python for Finance (2nd ed., O'Reilly) by Yves Hilpisch.;Jupyter Notebooks and code for Python for Finance (2nd ed., O'Reilly) by Yves Hilpisch.;;Jupyter Notebook;['Jupyter Notebook: 99.7%', 'Other: 0.3%'];;https://github.com/yhilpisch/py4fi2nd;1.0;['keras', 'sklearn', 'statsmodels', 'tensorflow'];['AI', 'Bayesian', 'CV', 'Classification', 'Clustering', 'Decision Tree', 'GBM', 'K-Means', 'Logistic Regression', 'ML', 'NN', 'Naive Bayes', 'RL', 'ReLu', 'Regression', 'Supervised Learning', 'Unsupervised learning'];['recommend', 'train'];;2020-10-13 10:54:06;2020-12-20 10:32:57;586.0;0.616;py4fi2nd;
Yorko;6;2015-11-08 21:18:57;Jupyter notebooks in Russian. Introduction to Python, basic algorithms and data structures;Jupyter notebooks in Russian. Introduction to Python, basic algorithms and data structures;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];;https://github.com/Yorko/python_intro;0.8;['pattern', 'sklearn', 'tpot'];['Classification', 'ML', 'RL'];[];;2019-08-30 11:58:55;2020-12-19 22:42:23;530.0;0.61;python_intro;
yourwanghao;0;2018-12-03 12:50:42;Jupyter Notebooks for CMU Computational Photography Course 15.463;Jupyter Notebooks for CMU Computational Photography Course 15.463;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Other: 0.1%'];;https://github.com/yourwanghao/CMUComputationalPhotography;0.8;['pattern', 'skimage'];['AI', 'CV', 'GRU', 'ML'];[];;2019-07-07 15:58:08;2020-12-20 09:31:42;113.0;0.509;CMUComputationalPhotography;
ysyisyourbrother;0;2020-01-12 04:05:26;star;Ã¦ÂÂ¬Ã©Â¡Â¹Ã§ÂÂ®Ã¥ÂÂÃ¤ÂºÂ«Ã¤ÂºÂÃ¦ÂÂ¬Ã¤ÂºÂºÃ¥ÂÂ¨Ã¤Â¸Â­Ã¥Â±Â±Ã¥Â¤Â§Ã¥Â­Â¦Ã¦ÂÂ°Ã¦ÂÂ®Ã§Â§ÂÃ¥Â­Â¦Ã¤Â¸ÂÃ¨Â®Â¡Ã§Â®ÂÃ¦ÂÂºÃ¥Â­Â¦Ã©ÂÂ¢Ã¨Â®Â¡Ã§Â®ÂÃ¦ÂÂºÃ§Â§ÂÃ¥Â­Â¦Ã¤Â¸ÂÃ¤Â¸ÂÃ§ÂÂÃ¨Â¯Â¾Ã§Â¨ÂÃ¨ÂµÂÃ¦ÂÂÃ£ÂÂÃ§Â¬ÂÃ¨Â®Â°Ã£ÂÂÃ¥ÂÂÃ¥Â¿ÂÃ¥ÂÂÃ¦ÂÂ´Ã§ÂÂÃ§ÂÂÃ¦ÂÂÃ¦ÂÂ«Ã¨ÂÂÃ¨Â¯ÂÃ¥ÂÂ·Ã£ÂÂÃ¥ÂÂÃ¨Â¯Â¾Ã§Â¨ÂÃ¤Â½ÂÃ¤Â¸ÂÃ£ÂÂÃ¥Â¸ÂÃ¦ÂÂÃ¥Â¯Â¹Ã¤Â½Â Ã¤Â»Â¬Ã¦ÂÂÃ¦ÂÂÃ¥Â¸Â®Ã¥ÂÂ©Ã¢ÂÂ¤Ã¯Â¸ÂÃ¯Â¼ÂÃ¥Â¦ÂÃ¦ÂÂÃ¥ÂÂÃ¦Â¬Â¢Ã¨Â®Â°Ã¥Â¾ÂÃ§Â»ÂÃ¤Â¸ÂªstarÃ¥ÂÂ¦Ã°ÂÂÂ;;Python;['Python: 39.4%', 'Assembly: 21.3%', 'C++: 15.4%', 'TeX: 12.9%', 'C: 7.2%', 'MATLAB: 2.1%', 'Jupyter Notebook: 1.7%'];;https://github.com/ysyisyourbrother/SYSU_Notebook;1.0;['nltk', 'pattern', 'sklearn', 'tensorflow', 'vocabulary', 'xgboost'];['AI', 'CNN', 'Classification', 'DL', 'GRU', 'KNN', 'LSTM', 'NN', 'RNN', 'ReLu', 'Regression', 'ResNet'];['AI', 'CV', 'KNN', 'ML', 'NN', 'RNN', 'classif', 'epoch', 'filter', 'fit', 'ground truth', 'label', 'layer', 'loss', 'lstm', 'model', 'predict', 'rank', 'regression', 'relu', 'test data', 'train', 'training data'];;2020-10-28 12:44:16;2020-12-20 11:09:29;229.0;0.558;SYSU_Notebook;
z1ming;0;2020-01-10 13:26:01;https://leetcode-cn.com/u/ml-zimingmeng/;https://leetcode-cn.com/u/ml-zimingmeng/;;Python;['Python: 96.3%', 'Java: 2.6%', 'Other: 1.1%'];MIT;https://github.com/z1ming/LeetCode-Notebook;1.0;['pattern'];['DL', 'GRU', 'NN', 'RL'];['ML', 'classif', 'train'];;2020-04-09 03:11:51;2020-12-19 22:57:55;46.0;0.439;LeetCode-Notebook;
zaidalyafeai;2;2018-10-08 17:29:00;Machine learning notebooks in different subjects optimized to run in google collaboratory;Machine learning notebooks in different subjects optimized to run in google collaboratory;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];MIT;https://github.com/zaidalyafeai/Notebooks;1.0;['keras', 'pytorch', 'skimage', 'tensorflow', 'tpot'];['AI', 'AlexNet', 'CNN', 'Classification', 'DL', 'GAN', 'GRU', 'Linear Regression', 'ML', 'NN', 'Object Detection', 'Pix2Pix', 'RL', 'ReLu', 'Regression', 'ResNet', 'U-Net', 'VGG'];['CNN', 'GAN', 'NN', 'autoencoder', 'classif', 'convolutional neural network', 'detect', 'layer', 'machine learning', 'model', 'neural network', 'pix2pix', 'predict', 'recogn', 'regression', 'train', 'u-net'];;2020-04-03 20:36:40;2020-12-20 10:31:48;350.0;0.585;Notebooks;
znah;0;2013-01-05 05:19:25;IPython Notebook experiments;IPython Notebook experiments;;Jupyter Notebook;['Jupyter Notebook: 99.9%', 'Python: 0.1%'];;https://github.com/znah/notebooks;0.8;['keras', 'tensorflow'];['CV', 'ML'];[];;2020-12-17 16:04:35;2020-12-19 22:27:23;36.0;0.418;notebooks;
zszazi;2;2018-11-27 13:05:00;Please COLLABORATE in building a collection of google COLAB notebooks;Please COLLABORATE in building a collection of google COLAB notebooks;;Jupyter Notebook;['Jupyter Notebook: 100.0%'];Unlicense;https://github.com/zszazi/awesome-collection-of-google-colab-notebooks;0.8;['detectron', 'face_recognition', 'keras', 'nltk', 'opencv-python', 'pattern', 'pytorch', 'sklearn', 'tensorflow', 'vocabulary'];['AI', 'ANN', 'Classification', 'DL', 'Linear Regression', 'ML', 'NN', 'Object Detection', 'RL', 'ReLu', 'Regression', 'ResNet', 'Sentiment Analysis'];[];;2020-10-09 03:39:43;2020-12-19 23:10:40;51.0;0.447;awesome-collection-of-google-colab-notebooks;
